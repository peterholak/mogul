/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sdl2cairo;

public final class GFileError {
  public final static GFileError G_FILE_ERROR_EXIST = new GFileError("G_FILE_ERROR_EXIST");
  public final static GFileError G_FILE_ERROR_ISDIR = new GFileError("G_FILE_ERROR_ISDIR");
  public final static GFileError G_FILE_ERROR_ACCES = new GFileError("G_FILE_ERROR_ACCES");
  public final static GFileError G_FILE_ERROR_NAMETOOLONG = new GFileError("G_FILE_ERROR_NAMETOOLONG");
  public final static GFileError G_FILE_ERROR_NOENT = new GFileError("G_FILE_ERROR_NOENT");
  public final static GFileError G_FILE_ERROR_NOTDIR = new GFileError("G_FILE_ERROR_NOTDIR");
  public final static GFileError G_FILE_ERROR_NXIO = new GFileError("G_FILE_ERROR_NXIO");
  public final static GFileError G_FILE_ERROR_NODEV = new GFileError("G_FILE_ERROR_NODEV");
  public final static GFileError G_FILE_ERROR_ROFS = new GFileError("G_FILE_ERROR_ROFS");
  public final static GFileError G_FILE_ERROR_TXTBSY = new GFileError("G_FILE_ERROR_TXTBSY");
  public final static GFileError G_FILE_ERROR_FAULT = new GFileError("G_FILE_ERROR_FAULT");
  public final static GFileError G_FILE_ERROR_LOOP = new GFileError("G_FILE_ERROR_LOOP");
  public final static GFileError G_FILE_ERROR_NOSPC = new GFileError("G_FILE_ERROR_NOSPC");
  public final static GFileError G_FILE_ERROR_NOMEM = new GFileError("G_FILE_ERROR_NOMEM");
  public final static GFileError G_FILE_ERROR_MFILE = new GFileError("G_FILE_ERROR_MFILE");
  public final static GFileError G_FILE_ERROR_NFILE = new GFileError("G_FILE_ERROR_NFILE");
  public final static GFileError G_FILE_ERROR_BADF = new GFileError("G_FILE_ERROR_BADF");
  public final static GFileError G_FILE_ERROR_INVAL = new GFileError("G_FILE_ERROR_INVAL");
  public final static GFileError G_FILE_ERROR_PIPE = new GFileError("G_FILE_ERROR_PIPE");
  public final static GFileError G_FILE_ERROR_AGAIN = new GFileError("G_FILE_ERROR_AGAIN");
  public final static GFileError G_FILE_ERROR_INTR = new GFileError("G_FILE_ERROR_INTR");
  public final static GFileError G_FILE_ERROR_IO = new GFileError("G_FILE_ERROR_IO");
  public final static GFileError G_FILE_ERROR_PERM = new GFileError("G_FILE_ERROR_PERM");
  public final static GFileError G_FILE_ERROR_NOSYS = new GFileError("G_FILE_ERROR_NOSYS");
  public final static GFileError G_FILE_ERROR_FAILED = new GFileError("G_FILE_ERROR_FAILED");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static GFileError swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + GFileError.class + " with value " + swigValue);
  }

  private GFileError(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private GFileError(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private GFileError(String swigName, GFileError swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static GFileError[] swigValues = { G_FILE_ERROR_EXIST, G_FILE_ERROR_ISDIR, G_FILE_ERROR_ACCES, G_FILE_ERROR_NAMETOOLONG, G_FILE_ERROR_NOENT, G_FILE_ERROR_NOTDIR, G_FILE_ERROR_NXIO, G_FILE_ERROR_NODEV, G_FILE_ERROR_ROFS, G_FILE_ERROR_TXTBSY, G_FILE_ERROR_FAULT, G_FILE_ERROR_LOOP, G_FILE_ERROR_NOSPC, G_FILE_ERROR_NOMEM, G_FILE_ERROR_MFILE, G_FILE_ERROR_NFILE, G_FILE_ERROR_BADF, G_FILE_ERROR_INVAL, G_FILE_ERROR_PIPE, G_FILE_ERROR_AGAIN, G_FILE_ERROR_INTR, G_FILE_ERROR_IO, G_FILE_ERROR_PERM, G_FILE_ERROR_NOSYS, G_FILE_ERROR_FAILED };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

