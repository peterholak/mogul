/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sdl2cairo;

public final class GTestLogType {
  public final static GTestLogType G_TEST_LOG_NONE = new GTestLogType("G_TEST_LOG_NONE");
  public final static GTestLogType G_TEST_LOG_ERROR = new GTestLogType("G_TEST_LOG_ERROR");
  public final static GTestLogType G_TEST_LOG_START_BINARY = new GTestLogType("G_TEST_LOG_START_BINARY");
  public final static GTestLogType G_TEST_LOG_LIST_CASE = new GTestLogType("G_TEST_LOG_LIST_CASE");
  public final static GTestLogType G_TEST_LOG_SKIP_CASE = new GTestLogType("G_TEST_LOG_SKIP_CASE");
  public final static GTestLogType G_TEST_LOG_START_CASE = new GTestLogType("G_TEST_LOG_START_CASE");
  public final static GTestLogType G_TEST_LOG_STOP_CASE = new GTestLogType("G_TEST_LOG_STOP_CASE");
  public final static GTestLogType G_TEST_LOG_MIN_RESULT = new GTestLogType("G_TEST_LOG_MIN_RESULT");
  public final static GTestLogType G_TEST_LOG_MAX_RESULT = new GTestLogType("G_TEST_LOG_MAX_RESULT");
  public final static GTestLogType G_TEST_LOG_MESSAGE = new GTestLogType("G_TEST_LOG_MESSAGE");
  public final static GTestLogType G_TEST_LOG_START_SUITE = new GTestLogType("G_TEST_LOG_START_SUITE");
  public final static GTestLogType G_TEST_LOG_STOP_SUITE = new GTestLogType("G_TEST_LOG_STOP_SUITE");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static GTestLogType swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + GTestLogType.class + " with value " + swigValue);
  }

  private GTestLogType(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private GTestLogType(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private GTestLogType(String swigName, GTestLogType swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static GTestLogType[] swigValues = { G_TEST_LOG_NONE, G_TEST_LOG_ERROR, G_TEST_LOG_START_BINARY, G_TEST_LOG_LIST_CASE, G_TEST_LOG_SKIP_CASE, G_TEST_LOG_START_CASE, G_TEST_LOG_STOP_CASE, G_TEST_LOG_MIN_RESULT, G_TEST_LOG_MAX_RESULT, G_TEST_LOG_MESSAGE, G_TEST_LOG_START_SUITE, G_TEST_LOG_STOP_SUITE };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

