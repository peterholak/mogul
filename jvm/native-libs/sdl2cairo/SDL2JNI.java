/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sdl2cairo;

public class SDL2JNI {
  public final static native long new_voidpp();
  public final static native long copy_voidpp(long jarg1);
  public final static native void delete_voidpp(long jarg1);
  public final static native void voidpp_assign(long jarg1, long jarg2);
  public final static native long voidpp_value(long jarg1);
  public final static native long new_intp();
  public final static native long copy_intp(int jarg1);
  public final static native void delete_intp(long jarg1);
  public final static native void intp_assign(long jarg1, int jarg2);
  public final static native int intp_value(long jarg1);
  public final static native long new_doublep();
  public final static native long copy_doublep(double jarg1);
  public final static native void delete_doublep(long jarg1);
  public final static native void doublep_assign(long jarg1, double jarg2);
  public final static native double doublep_value(long jarg1);
  public final static native long voidp_to_ucharp(long jarg1);
  public final static native long SDL_INIT_TIMER_get();
  public final static native long SDL_INIT_AUDIO_get();
  public final static native long SDL_INIT_VIDEO_get();
  public final static native long SDL_INIT_JOYSTICK_get();
  public final static native long SDL_INIT_HAPTIC_get();
  public final static native long SDL_INIT_GAMECONTROLLER_get();
  public final static native long SDL_INIT_EVENTS_get();
  public final static native long SDL_INIT_NOPARACHUTE_get();
  public final static native long SDL_INIT_EVERYTHING_get();
  public final static native int SDL_Init(long jarg1);
  public final static native int SDL_InitSubSystem(long jarg1);
  public final static native void SDL_QuitSubSystem(long jarg1);
  public final static native long SDL_WasInit(long jarg1);
  public final static native void SDL_Quit();
  public final static native void SDL_DisplayMode_format_set(long jarg1, SDL_DisplayMode jarg1_, long jarg2);
  public final static native long SDL_DisplayMode_format_get(long jarg1, SDL_DisplayMode jarg1_);
  public final static native void SDL_DisplayMode_w_set(long jarg1, SDL_DisplayMode jarg1_, int jarg2);
  public final static native int SDL_DisplayMode_w_get(long jarg1, SDL_DisplayMode jarg1_);
  public final static native void SDL_DisplayMode_h_set(long jarg1, SDL_DisplayMode jarg1_, int jarg2);
  public final static native int SDL_DisplayMode_h_get(long jarg1, SDL_DisplayMode jarg1_);
  public final static native void SDL_DisplayMode_refresh_rate_set(long jarg1, SDL_DisplayMode jarg1_, int jarg2);
  public final static native int SDL_DisplayMode_refresh_rate_get(long jarg1, SDL_DisplayMode jarg1_);
  public final static native void SDL_DisplayMode_driverdata_set(long jarg1, SDL_DisplayMode jarg1_, long jarg2);
  public final static native long SDL_DisplayMode_driverdata_get(long jarg1, SDL_DisplayMode jarg1_);
  public final static native long new_SDL_DisplayMode();
  public final static native void delete_SDL_DisplayMode(long jarg1);
  public final static native int SDL_WINDOW_FULLSCREEN_get();
  public final static native int SDL_WINDOW_OPENGL_get();
  public final static native int SDL_WINDOW_SHOWN_get();
  public final static native int SDL_WINDOW_HIDDEN_get();
  public final static native int SDL_WINDOW_BORDERLESS_get();
  public final static native int SDL_WINDOW_RESIZABLE_get();
  public final static native int SDL_WINDOW_MINIMIZED_get();
  public final static native int SDL_WINDOW_MAXIMIZED_get();
  public final static native int SDL_WINDOW_INPUT_GRABBED_get();
  public final static native int SDL_WINDOW_INPUT_FOCUS_get();
  public final static native int SDL_WINDOW_MOUSE_FOCUS_get();
  public final static native int SDL_WINDOW_FULLSCREEN_DESKTOP_get();
  public final static native int SDL_WINDOW_FOREIGN_get();
  public final static native int SDL_WINDOW_ALLOW_HIGHDPI_get();
  public final static native int SDL_WINDOW_MOUSE_CAPTURE_get();
  public final static native int SDL_WINDOW_ALWAYS_ON_TOP_get();
  public final static native int SDL_WINDOW_SKIP_TASKBAR_get();
  public final static native int SDL_WINDOW_UTILITY_get();
  public final static native int SDL_WINDOW_TOOLTIP_get();
  public final static native int SDL_WINDOW_POPUP_MENU_get();
  public final static native int SDL_WINDOW_VULKAN_get();
  public final static native long SDL_WINDOWPOS_UNDEFINED_MASK_get();
  public final static native long SDL_WINDOWPOS_UNDEFINED_get();
  public final static native long SDL_WINDOWPOS_CENTERED_MASK_get();
  public final static native long SDL_WINDOWPOS_CENTERED_get();
  public final static native int SDL_GL_CONTEXT_PROFILE_CORE_get();
  public final static native int SDL_GL_CONTEXT_PROFILE_COMPATIBILITY_get();
  public final static native int SDL_GL_CONTEXT_PROFILE_ES_get();
  public final static native int SDL_GL_CONTEXT_DEBUG_FLAG_get();
  public final static native int SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG_get();
  public final static native int SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG_get();
  public final static native int SDL_GL_CONTEXT_RESET_ISOLATION_FLAG_get();
  public final static native int SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE_get();
  public final static native int SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_get();
  public final static native int SDL_GL_CONTEXT_RESET_NO_NOTIFICATION_get();
  public final static native int SDL_GL_CONTEXT_RESET_LOSE_CONTEXT_get();
  public final static native int SDL_GetNumVideoDrivers();
  public final static native String SDL_GetVideoDriver(int jarg1);
  public final static native int SDL_VideoInit(String jarg1);
  public final static native void SDL_VideoQuit();
  public final static native String SDL_GetCurrentVideoDriver();
  public final static native int SDL_GetNumVideoDisplays();
  public final static native String SDL_GetDisplayName(int jarg1);
  public final static native int SDL_GetDisplayBounds(int jarg1, long jarg2);
  public final static native int SDL_GetDisplayDPI(int jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int SDL_GetDisplayUsableBounds(int jarg1, long jarg2);
  public final static native int SDL_GetNumDisplayModes(int jarg1);
  public final static native int SDL_GetDisplayMode(int jarg1, int jarg2, long jarg3, SDL_DisplayMode jarg3_);
  public final static native int SDL_GetDesktopDisplayMode(int jarg1, long jarg2, SDL_DisplayMode jarg2_);
  public final static native int SDL_GetCurrentDisplayMode(int jarg1, long jarg2, SDL_DisplayMode jarg2_);
  public final static native long SDL_GetClosestDisplayMode(int jarg1, long jarg2, SDL_DisplayMode jarg2_, long jarg3, SDL_DisplayMode jarg3_);
  public final static native int SDL_GetWindowDisplayIndex(long jarg1);
  public final static native int SDL_SetWindowDisplayMode(long jarg1, long jarg2, SDL_DisplayMode jarg2_);
  public final static native int SDL_GetWindowDisplayMode(long jarg1, long jarg2, SDL_DisplayMode jarg2_);
  public final static native long SDL_GetWindowPixelFormat(long jarg1);
  public final static native long SDL_CreateWindow(String jarg1, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6);
  public final static native long SDL_CreateWindowFrom(long jarg1);
  public final static native long SDL_GetWindowID(long jarg1);
  public final static native long SDL_GetWindowFromID(long jarg1);
  public final static native long SDL_GetWindowFlags(long jarg1);
  public final static native void SDL_SetWindowTitle(long jarg1, String jarg2);
  public final static native String SDL_GetWindowTitle(long jarg1);
  public final static native void SDL_SetWindowIcon(long jarg1, long jarg2);
  public final static native long SDL_SetWindowData(long jarg1, String jarg2, long jarg3);
  public final static native long SDL_GetWindowData(long jarg1, String jarg2);
  public final static native void SDL_SetWindowPosition(long jarg1, int jarg2, int jarg3);
  public final static native void SDL_GetWindowPosition(long jarg1, long jarg2, long jarg3);
  public final static native void SDL_SetWindowSize(long jarg1, int jarg2, int jarg3);
  public final static native void SDL_GetWindowSize(long jarg1, long jarg2, long jarg3);
  public final static native int SDL_GetWindowBordersSize(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void SDL_SetWindowMinimumSize(long jarg1, int jarg2, int jarg3);
  public final static native void SDL_GetWindowMinimumSize(long jarg1, long jarg2, long jarg3);
  public final static native void SDL_SetWindowMaximumSize(long jarg1, int jarg2, int jarg3);
  public final static native void SDL_GetWindowMaximumSize(long jarg1, long jarg2, long jarg3);
  public final static native void SDL_SetWindowBordered(long jarg1, long jarg2);
  public final static native void SDL_SetWindowResizable(long jarg1, long jarg2);
  public final static native void SDL_ShowWindow(long jarg1);
  public final static native void SDL_HideWindow(long jarg1);
  public final static native void SDL_RaiseWindow(long jarg1);
  public final static native void SDL_MaximizeWindow(long jarg1);
  public final static native void SDL_MinimizeWindow(long jarg1);
  public final static native void SDL_RestoreWindow(long jarg1);
  public final static native int SDL_SetWindowFullscreen(long jarg1, long jarg2);
  public final static native long SDL_GetWindowSurface(long jarg1);
  public final static native int SDL_UpdateWindowSurface(long jarg1);
  public final static native int SDL_UpdateWindowSurfaceRects(long jarg1, long jarg2, int jarg3);
  public final static native void SDL_SetWindowGrab(long jarg1, long jarg2);
  public final static native long SDL_GetWindowGrab(long jarg1);
  public final static native long SDL_GetGrabbedWindow();
  public final static native int SDL_SetWindowBrightness(long jarg1, float jarg2);
  public final static native float SDL_GetWindowBrightness(long jarg1);
  public final static native int SDL_SetWindowOpacity(long jarg1, float jarg2);
  public final static native int SDL_GetWindowOpacity(long jarg1, long jarg2);
  public final static native int SDL_SetWindowModalFor(long jarg1, long jarg2);
  public final static native int SDL_SetWindowInputFocus(long jarg1);
  public final static native int SDL_SetWindowGammaRamp(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int SDL_GetWindowGammaRamp(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int SDL_SetWindowHitTest(long jarg1, long jarg2, long jarg3);
  public final static native void SDL_DestroyWindow(long jarg1);
  public final static native long SDL_IsScreenSaverEnabled();
  public final static native void SDL_EnableScreenSaver();
  public final static native void SDL_DisableScreenSaver();
  public final static native int SDL_GL_LoadLibrary(String jarg1);
  public final static native long SDL_GL_GetProcAddress(String jarg1);
  public final static native void SDL_GL_UnloadLibrary();
  public final static native long SDL_GL_ExtensionSupported(String jarg1);
  public final static native void SDL_GL_ResetAttributes();
  public final static native int SDL_GL_SetAttribute(int jarg1, int jarg2);
  public final static native int SDL_GL_GetAttribute(int jarg1, long jarg2);
  public final static native long SDL_GL_CreateContext(long jarg1);
  public final static native int SDL_GL_MakeCurrent(long jarg1, long jarg2);
  public final static native long SDL_GL_GetCurrentWindow();
  public final static native long SDL_GL_GetCurrentContext();
  public final static native void SDL_GL_GetDrawableSize(long jarg1, long jarg2, long jarg3);
  public final static native int SDL_GL_SetSwapInterval(int jarg1);
  public final static native int SDL_GL_GetSwapInterval();
  public final static native void SDL_GL_SwapWindow(long jarg1);
  public final static native void SDL_GL_DeleteContext(long jarg1);
  public final static native int SDL_RELEASED_get();
  public final static native int SDL_PRESSED_get();
  public final static native int SDL_FIRSTEVENT_get();
  public final static native int SDL_QUIT_get();
  public final static native int SDL_WINDOWEVENT_get();
  public final static native int SDL_KEYDOWN_get();
  public final static native int SDL_MOUSEMOTION_get();
  public final static native int SDL_JOYAXISMOTION_get();
  public final static native int SDL_CONTROLLERAXISMOTION_get();
  public final static native int SDL_FINGERDOWN_get();
  public final static native int SDL_DOLLARGESTURE_get();
  public final static native int SDL_CLIPBOARDUPDATE_get();
  public final static native int SDL_DROPFILE_get();
  public final static native int SDL_AUDIODEVICEADDED_get();
  public final static native int SDL_RENDER_TARGETS_RESET_get();
  public final static native int SDL_USEREVENT_get();
  public final static native int SDL_LASTEVENT_get();
  public final static native void SDL_CommonEvent_type_set(long jarg1, SDL_CommonEvent jarg1_, long jarg2);
  public final static native long SDL_CommonEvent_type_get(long jarg1, SDL_CommonEvent jarg1_);
  public final static native void SDL_CommonEvent_timestamp_set(long jarg1, SDL_CommonEvent jarg1_, long jarg2);
  public final static native long SDL_CommonEvent_timestamp_get(long jarg1, SDL_CommonEvent jarg1_);
  public final static native long new_SDL_CommonEvent();
  public final static native void delete_SDL_CommonEvent(long jarg1);
  public final static native void SDL_WindowEvent_type_set(long jarg1, SDL_WindowEvent jarg1_, long jarg2);
  public final static native long SDL_WindowEvent_type_get(long jarg1, SDL_WindowEvent jarg1_);
  public final static native void SDL_WindowEvent_timestamp_set(long jarg1, SDL_WindowEvent jarg1_, long jarg2);
  public final static native long SDL_WindowEvent_timestamp_get(long jarg1, SDL_WindowEvent jarg1_);
  public final static native void SDL_WindowEvent_windowID_set(long jarg1, SDL_WindowEvent jarg1_, long jarg2);
  public final static native long SDL_WindowEvent_windowID_get(long jarg1, SDL_WindowEvent jarg1_);
  public final static native void SDL_WindowEvent_event_set(long jarg1, SDL_WindowEvent jarg1_, short jarg2);
  public final static native short SDL_WindowEvent_event_get(long jarg1, SDL_WindowEvent jarg1_);
  public final static native void SDL_WindowEvent_padding1_set(long jarg1, SDL_WindowEvent jarg1_, short jarg2);
  public final static native short SDL_WindowEvent_padding1_get(long jarg1, SDL_WindowEvent jarg1_);
  public final static native void SDL_WindowEvent_padding2_set(long jarg1, SDL_WindowEvent jarg1_, short jarg2);
  public final static native short SDL_WindowEvent_padding2_get(long jarg1, SDL_WindowEvent jarg1_);
  public final static native void SDL_WindowEvent_padding3_set(long jarg1, SDL_WindowEvent jarg1_, short jarg2);
  public final static native short SDL_WindowEvent_padding3_get(long jarg1, SDL_WindowEvent jarg1_);
  public final static native void SDL_WindowEvent_data1_set(long jarg1, SDL_WindowEvent jarg1_, int jarg2);
  public final static native int SDL_WindowEvent_data1_get(long jarg1, SDL_WindowEvent jarg1_);
  public final static native void SDL_WindowEvent_data2_set(long jarg1, SDL_WindowEvent jarg1_, int jarg2);
  public final static native int SDL_WindowEvent_data2_get(long jarg1, SDL_WindowEvent jarg1_);
  public final static native long new_SDL_WindowEvent();
  public final static native void delete_SDL_WindowEvent(long jarg1);
  public final static native void SDL_KeyboardEvent_type_set(long jarg1, SDL_KeyboardEvent jarg1_, long jarg2);
  public final static native long SDL_KeyboardEvent_type_get(long jarg1, SDL_KeyboardEvent jarg1_);
  public final static native void SDL_KeyboardEvent_timestamp_set(long jarg1, SDL_KeyboardEvent jarg1_, long jarg2);
  public final static native long SDL_KeyboardEvent_timestamp_get(long jarg1, SDL_KeyboardEvent jarg1_);
  public final static native void SDL_KeyboardEvent_windowID_set(long jarg1, SDL_KeyboardEvent jarg1_, long jarg2);
  public final static native long SDL_KeyboardEvent_windowID_get(long jarg1, SDL_KeyboardEvent jarg1_);
  public final static native void SDL_KeyboardEvent_state_set(long jarg1, SDL_KeyboardEvent jarg1_, short jarg2);
  public final static native short SDL_KeyboardEvent_state_get(long jarg1, SDL_KeyboardEvent jarg1_);
  public final static native void SDL_KeyboardEvent_repeat_set(long jarg1, SDL_KeyboardEvent jarg1_, short jarg2);
  public final static native short SDL_KeyboardEvent_repeat_get(long jarg1, SDL_KeyboardEvent jarg1_);
  public final static native void SDL_KeyboardEvent_padding2_set(long jarg1, SDL_KeyboardEvent jarg1_, short jarg2);
  public final static native short SDL_KeyboardEvent_padding2_get(long jarg1, SDL_KeyboardEvent jarg1_);
  public final static native void SDL_KeyboardEvent_padding3_set(long jarg1, SDL_KeyboardEvent jarg1_, short jarg2);
  public final static native short SDL_KeyboardEvent_padding3_get(long jarg1, SDL_KeyboardEvent jarg1_);
  public final static native void SDL_KeyboardEvent_keysym_set(long jarg1, SDL_KeyboardEvent jarg1_, long jarg2);
  public final static native long SDL_KeyboardEvent_keysym_get(long jarg1, SDL_KeyboardEvent jarg1_);
  public final static native long new_SDL_KeyboardEvent();
  public final static native void delete_SDL_KeyboardEvent(long jarg1);
  public final static native int SDL_TEXTEDITINGEVENT_TEXT_SIZE_get();
  public final static native void SDL_TextEditingEvent_type_set(long jarg1, SDL_TextEditingEvent jarg1_, long jarg2);
  public final static native long SDL_TextEditingEvent_type_get(long jarg1, SDL_TextEditingEvent jarg1_);
  public final static native void SDL_TextEditingEvent_timestamp_set(long jarg1, SDL_TextEditingEvent jarg1_, long jarg2);
  public final static native long SDL_TextEditingEvent_timestamp_get(long jarg1, SDL_TextEditingEvent jarg1_);
  public final static native void SDL_TextEditingEvent_windowID_set(long jarg1, SDL_TextEditingEvent jarg1_, long jarg2);
  public final static native long SDL_TextEditingEvent_windowID_get(long jarg1, SDL_TextEditingEvent jarg1_);
  public final static native void SDL_TextEditingEvent_text_set(long jarg1, SDL_TextEditingEvent jarg1_, String jarg2);
  public final static native String SDL_TextEditingEvent_text_get(long jarg1, SDL_TextEditingEvent jarg1_);
  public final static native void SDL_TextEditingEvent_start_set(long jarg1, SDL_TextEditingEvent jarg1_, int jarg2);
  public final static native int SDL_TextEditingEvent_start_get(long jarg1, SDL_TextEditingEvent jarg1_);
  public final static native void SDL_TextEditingEvent_length_set(long jarg1, SDL_TextEditingEvent jarg1_, int jarg2);
  public final static native int SDL_TextEditingEvent_length_get(long jarg1, SDL_TextEditingEvent jarg1_);
  public final static native long new_SDL_TextEditingEvent();
  public final static native void delete_SDL_TextEditingEvent(long jarg1);
  public final static native int SDL_TEXTINPUTEVENT_TEXT_SIZE_get();
  public final static native void SDL_TextInputEvent_type_set(long jarg1, SDL_TextInputEvent jarg1_, long jarg2);
  public final static native long SDL_TextInputEvent_type_get(long jarg1, SDL_TextInputEvent jarg1_);
  public final static native void SDL_TextInputEvent_timestamp_set(long jarg1, SDL_TextInputEvent jarg1_, long jarg2);
  public final static native long SDL_TextInputEvent_timestamp_get(long jarg1, SDL_TextInputEvent jarg1_);
  public final static native void SDL_TextInputEvent_windowID_set(long jarg1, SDL_TextInputEvent jarg1_, long jarg2);
  public final static native long SDL_TextInputEvent_windowID_get(long jarg1, SDL_TextInputEvent jarg1_);
  public final static native void SDL_TextInputEvent_text_set(long jarg1, SDL_TextInputEvent jarg1_, String jarg2);
  public final static native String SDL_TextInputEvent_text_get(long jarg1, SDL_TextInputEvent jarg1_);
  public final static native long new_SDL_TextInputEvent();
  public final static native void delete_SDL_TextInputEvent(long jarg1);
  public final static native void SDL_MouseMotionEvent_type_set(long jarg1, SDL_MouseMotionEvent jarg1_, long jarg2);
  public final static native long SDL_MouseMotionEvent_type_get(long jarg1, SDL_MouseMotionEvent jarg1_);
  public final static native void SDL_MouseMotionEvent_timestamp_set(long jarg1, SDL_MouseMotionEvent jarg1_, long jarg2);
  public final static native long SDL_MouseMotionEvent_timestamp_get(long jarg1, SDL_MouseMotionEvent jarg1_);
  public final static native void SDL_MouseMotionEvent_windowID_set(long jarg1, SDL_MouseMotionEvent jarg1_, long jarg2);
  public final static native long SDL_MouseMotionEvent_windowID_get(long jarg1, SDL_MouseMotionEvent jarg1_);
  public final static native void SDL_MouseMotionEvent_which_set(long jarg1, SDL_MouseMotionEvent jarg1_, long jarg2);
  public final static native long SDL_MouseMotionEvent_which_get(long jarg1, SDL_MouseMotionEvent jarg1_);
  public final static native void SDL_MouseMotionEvent_state_set(long jarg1, SDL_MouseMotionEvent jarg1_, long jarg2);
  public final static native long SDL_MouseMotionEvent_state_get(long jarg1, SDL_MouseMotionEvent jarg1_);
  public final static native void SDL_MouseMotionEvent_x_set(long jarg1, SDL_MouseMotionEvent jarg1_, int jarg2);
  public final static native int SDL_MouseMotionEvent_x_get(long jarg1, SDL_MouseMotionEvent jarg1_);
  public final static native void SDL_MouseMotionEvent_y_set(long jarg1, SDL_MouseMotionEvent jarg1_, int jarg2);
  public final static native int SDL_MouseMotionEvent_y_get(long jarg1, SDL_MouseMotionEvent jarg1_);
  public final static native void SDL_MouseMotionEvent_xrel_set(long jarg1, SDL_MouseMotionEvent jarg1_, int jarg2);
  public final static native int SDL_MouseMotionEvent_xrel_get(long jarg1, SDL_MouseMotionEvent jarg1_);
  public final static native void SDL_MouseMotionEvent_yrel_set(long jarg1, SDL_MouseMotionEvent jarg1_, int jarg2);
  public final static native int SDL_MouseMotionEvent_yrel_get(long jarg1, SDL_MouseMotionEvent jarg1_);
  public final static native long new_SDL_MouseMotionEvent();
  public final static native void delete_SDL_MouseMotionEvent(long jarg1);
  public final static native void SDL_MouseButtonEvent_type_set(long jarg1, SDL_MouseButtonEvent jarg1_, long jarg2);
  public final static native long SDL_MouseButtonEvent_type_get(long jarg1, SDL_MouseButtonEvent jarg1_);
  public final static native void SDL_MouseButtonEvent_timestamp_set(long jarg1, SDL_MouseButtonEvent jarg1_, long jarg2);
  public final static native long SDL_MouseButtonEvent_timestamp_get(long jarg1, SDL_MouseButtonEvent jarg1_);
  public final static native void SDL_MouseButtonEvent_windowID_set(long jarg1, SDL_MouseButtonEvent jarg1_, long jarg2);
  public final static native long SDL_MouseButtonEvent_windowID_get(long jarg1, SDL_MouseButtonEvent jarg1_);
  public final static native void SDL_MouseButtonEvent_which_set(long jarg1, SDL_MouseButtonEvent jarg1_, long jarg2);
  public final static native long SDL_MouseButtonEvent_which_get(long jarg1, SDL_MouseButtonEvent jarg1_);
  public final static native void SDL_MouseButtonEvent_button_set(long jarg1, SDL_MouseButtonEvent jarg1_, short jarg2);
  public final static native short SDL_MouseButtonEvent_button_get(long jarg1, SDL_MouseButtonEvent jarg1_);
  public final static native void SDL_MouseButtonEvent_state_set(long jarg1, SDL_MouseButtonEvent jarg1_, short jarg2);
  public final static native short SDL_MouseButtonEvent_state_get(long jarg1, SDL_MouseButtonEvent jarg1_);
  public final static native void SDL_MouseButtonEvent_clicks_set(long jarg1, SDL_MouseButtonEvent jarg1_, short jarg2);
  public final static native short SDL_MouseButtonEvent_clicks_get(long jarg1, SDL_MouseButtonEvent jarg1_);
  public final static native void SDL_MouseButtonEvent_padding1_set(long jarg1, SDL_MouseButtonEvent jarg1_, short jarg2);
  public final static native short SDL_MouseButtonEvent_padding1_get(long jarg1, SDL_MouseButtonEvent jarg1_);
  public final static native void SDL_MouseButtonEvent_x_set(long jarg1, SDL_MouseButtonEvent jarg1_, int jarg2);
  public final static native int SDL_MouseButtonEvent_x_get(long jarg1, SDL_MouseButtonEvent jarg1_);
  public final static native void SDL_MouseButtonEvent_y_set(long jarg1, SDL_MouseButtonEvent jarg1_, int jarg2);
  public final static native int SDL_MouseButtonEvent_y_get(long jarg1, SDL_MouseButtonEvent jarg1_);
  public final static native long new_SDL_MouseButtonEvent();
  public final static native void delete_SDL_MouseButtonEvent(long jarg1);
  public final static native void SDL_MouseWheelEvent_type_set(long jarg1, SDL_MouseWheelEvent jarg1_, long jarg2);
  public final static native long SDL_MouseWheelEvent_type_get(long jarg1, SDL_MouseWheelEvent jarg1_);
  public final static native void SDL_MouseWheelEvent_timestamp_set(long jarg1, SDL_MouseWheelEvent jarg1_, long jarg2);
  public final static native long SDL_MouseWheelEvent_timestamp_get(long jarg1, SDL_MouseWheelEvent jarg1_);
  public final static native void SDL_MouseWheelEvent_windowID_set(long jarg1, SDL_MouseWheelEvent jarg1_, long jarg2);
  public final static native long SDL_MouseWheelEvent_windowID_get(long jarg1, SDL_MouseWheelEvent jarg1_);
  public final static native void SDL_MouseWheelEvent_which_set(long jarg1, SDL_MouseWheelEvent jarg1_, long jarg2);
  public final static native long SDL_MouseWheelEvent_which_get(long jarg1, SDL_MouseWheelEvent jarg1_);
  public final static native void SDL_MouseWheelEvent_x_set(long jarg1, SDL_MouseWheelEvent jarg1_, int jarg2);
  public final static native int SDL_MouseWheelEvent_x_get(long jarg1, SDL_MouseWheelEvent jarg1_);
  public final static native void SDL_MouseWheelEvent_y_set(long jarg1, SDL_MouseWheelEvent jarg1_, int jarg2);
  public final static native int SDL_MouseWheelEvent_y_get(long jarg1, SDL_MouseWheelEvent jarg1_);
  public final static native void SDL_MouseWheelEvent_direction_set(long jarg1, SDL_MouseWheelEvent jarg1_, long jarg2);
  public final static native long SDL_MouseWheelEvent_direction_get(long jarg1, SDL_MouseWheelEvent jarg1_);
  public final static native long new_SDL_MouseWheelEvent();
  public final static native void delete_SDL_MouseWheelEvent(long jarg1);
  public final static native void SDL_JoyAxisEvent_type_set(long jarg1, SDL_JoyAxisEvent jarg1_, long jarg2);
  public final static native long SDL_JoyAxisEvent_type_get(long jarg1, SDL_JoyAxisEvent jarg1_);
  public final static native void SDL_JoyAxisEvent_timestamp_set(long jarg1, SDL_JoyAxisEvent jarg1_, long jarg2);
  public final static native long SDL_JoyAxisEvent_timestamp_get(long jarg1, SDL_JoyAxisEvent jarg1_);
  public final static native void SDL_JoyAxisEvent_which_set(long jarg1, SDL_JoyAxisEvent jarg1_, long jarg2);
  public final static native long SDL_JoyAxisEvent_which_get(long jarg1, SDL_JoyAxisEvent jarg1_);
  public final static native void SDL_JoyAxisEvent_axis_set(long jarg1, SDL_JoyAxisEvent jarg1_, short jarg2);
  public final static native short SDL_JoyAxisEvent_axis_get(long jarg1, SDL_JoyAxisEvent jarg1_);
  public final static native void SDL_JoyAxisEvent_padding1_set(long jarg1, SDL_JoyAxisEvent jarg1_, short jarg2);
  public final static native short SDL_JoyAxisEvent_padding1_get(long jarg1, SDL_JoyAxisEvent jarg1_);
  public final static native void SDL_JoyAxisEvent_padding2_set(long jarg1, SDL_JoyAxisEvent jarg1_, short jarg2);
  public final static native short SDL_JoyAxisEvent_padding2_get(long jarg1, SDL_JoyAxisEvent jarg1_);
  public final static native void SDL_JoyAxisEvent_padding3_set(long jarg1, SDL_JoyAxisEvent jarg1_, short jarg2);
  public final static native short SDL_JoyAxisEvent_padding3_get(long jarg1, SDL_JoyAxisEvent jarg1_);
  public final static native void SDL_JoyAxisEvent_value_set(long jarg1, SDL_JoyAxisEvent jarg1_, long jarg2);
  public final static native long SDL_JoyAxisEvent_value_get(long jarg1, SDL_JoyAxisEvent jarg1_);
  public final static native void SDL_JoyAxisEvent_padding4_set(long jarg1, SDL_JoyAxisEvent jarg1_, int jarg2);
  public final static native int SDL_JoyAxisEvent_padding4_get(long jarg1, SDL_JoyAxisEvent jarg1_);
  public final static native long new_SDL_JoyAxisEvent();
  public final static native void delete_SDL_JoyAxisEvent(long jarg1);
  public final static native void SDL_JoyBallEvent_type_set(long jarg1, SDL_JoyBallEvent jarg1_, long jarg2);
  public final static native long SDL_JoyBallEvent_type_get(long jarg1, SDL_JoyBallEvent jarg1_);
  public final static native void SDL_JoyBallEvent_timestamp_set(long jarg1, SDL_JoyBallEvent jarg1_, long jarg2);
  public final static native long SDL_JoyBallEvent_timestamp_get(long jarg1, SDL_JoyBallEvent jarg1_);
  public final static native void SDL_JoyBallEvent_which_set(long jarg1, SDL_JoyBallEvent jarg1_, long jarg2);
  public final static native long SDL_JoyBallEvent_which_get(long jarg1, SDL_JoyBallEvent jarg1_);
  public final static native void SDL_JoyBallEvent_ball_set(long jarg1, SDL_JoyBallEvent jarg1_, short jarg2);
  public final static native short SDL_JoyBallEvent_ball_get(long jarg1, SDL_JoyBallEvent jarg1_);
  public final static native void SDL_JoyBallEvent_padding1_set(long jarg1, SDL_JoyBallEvent jarg1_, short jarg2);
  public final static native short SDL_JoyBallEvent_padding1_get(long jarg1, SDL_JoyBallEvent jarg1_);
  public final static native void SDL_JoyBallEvent_padding2_set(long jarg1, SDL_JoyBallEvent jarg1_, short jarg2);
  public final static native short SDL_JoyBallEvent_padding2_get(long jarg1, SDL_JoyBallEvent jarg1_);
  public final static native void SDL_JoyBallEvent_padding3_set(long jarg1, SDL_JoyBallEvent jarg1_, short jarg2);
  public final static native short SDL_JoyBallEvent_padding3_get(long jarg1, SDL_JoyBallEvent jarg1_);
  public final static native void SDL_JoyBallEvent_xrel_set(long jarg1, SDL_JoyBallEvent jarg1_, long jarg2);
  public final static native long SDL_JoyBallEvent_xrel_get(long jarg1, SDL_JoyBallEvent jarg1_);
  public final static native void SDL_JoyBallEvent_yrel_set(long jarg1, SDL_JoyBallEvent jarg1_, long jarg2);
  public final static native long SDL_JoyBallEvent_yrel_get(long jarg1, SDL_JoyBallEvent jarg1_);
  public final static native long new_SDL_JoyBallEvent();
  public final static native void delete_SDL_JoyBallEvent(long jarg1);
  public final static native void SDL_JoyHatEvent_type_set(long jarg1, SDL_JoyHatEvent jarg1_, long jarg2);
  public final static native long SDL_JoyHatEvent_type_get(long jarg1, SDL_JoyHatEvent jarg1_);
  public final static native void SDL_JoyHatEvent_timestamp_set(long jarg1, SDL_JoyHatEvent jarg1_, long jarg2);
  public final static native long SDL_JoyHatEvent_timestamp_get(long jarg1, SDL_JoyHatEvent jarg1_);
  public final static native void SDL_JoyHatEvent_which_set(long jarg1, SDL_JoyHatEvent jarg1_, long jarg2);
  public final static native long SDL_JoyHatEvent_which_get(long jarg1, SDL_JoyHatEvent jarg1_);
  public final static native void SDL_JoyHatEvent_hat_set(long jarg1, SDL_JoyHatEvent jarg1_, short jarg2);
  public final static native short SDL_JoyHatEvent_hat_get(long jarg1, SDL_JoyHatEvent jarg1_);
  public final static native void SDL_JoyHatEvent_value_set(long jarg1, SDL_JoyHatEvent jarg1_, short jarg2);
  public final static native short SDL_JoyHatEvent_value_get(long jarg1, SDL_JoyHatEvent jarg1_);
  public final static native void SDL_JoyHatEvent_padding1_set(long jarg1, SDL_JoyHatEvent jarg1_, short jarg2);
  public final static native short SDL_JoyHatEvent_padding1_get(long jarg1, SDL_JoyHatEvent jarg1_);
  public final static native void SDL_JoyHatEvent_padding2_set(long jarg1, SDL_JoyHatEvent jarg1_, short jarg2);
  public final static native short SDL_JoyHatEvent_padding2_get(long jarg1, SDL_JoyHatEvent jarg1_);
  public final static native long new_SDL_JoyHatEvent();
  public final static native void delete_SDL_JoyHatEvent(long jarg1);
  public final static native void SDL_JoyButtonEvent_type_set(long jarg1, SDL_JoyButtonEvent jarg1_, long jarg2);
  public final static native long SDL_JoyButtonEvent_type_get(long jarg1, SDL_JoyButtonEvent jarg1_);
  public final static native void SDL_JoyButtonEvent_timestamp_set(long jarg1, SDL_JoyButtonEvent jarg1_, long jarg2);
  public final static native long SDL_JoyButtonEvent_timestamp_get(long jarg1, SDL_JoyButtonEvent jarg1_);
  public final static native void SDL_JoyButtonEvent_which_set(long jarg1, SDL_JoyButtonEvent jarg1_, long jarg2);
  public final static native long SDL_JoyButtonEvent_which_get(long jarg1, SDL_JoyButtonEvent jarg1_);
  public final static native void SDL_JoyButtonEvent_button_set(long jarg1, SDL_JoyButtonEvent jarg1_, short jarg2);
  public final static native short SDL_JoyButtonEvent_button_get(long jarg1, SDL_JoyButtonEvent jarg1_);
  public final static native void SDL_JoyButtonEvent_state_set(long jarg1, SDL_JoyButtonEvent jarg1_, short jarg2);
  public final static native short SDL_JoyButtonEvent_state_get(long jarg1, SDL_JoyButtonEvent jarg1_);
  public final static native void SDL_JoyButtonEvent_padding1_set(long jarg1, SDL_JoyButtonEvent jarg1_, short jarg2);
  public final static native short SDL_JoyButtonEvent_padding1_get(long jarg1, SDL_JoyButtonEvent jarg1_);
  public final static native void SDL_JoyButtonEvent_padding2_set(long jarg1, SDL_JoyButtonEvent jarg1_, short jarg2);
  public final static native short SDL_JoyButtonEvent_padding2_get(long jarg1, SDL_JoyButtonEvent jarg1_);
  public final static native long new_SDL_JoyButtonEvent();
  public final static native void delete_SDL_JoyButtonEvent(long jarg1);
  public final static native void SDL_JoyDeviceEvent_type_set(long jarg1, SDL_JoyDeviceEvent jarg1_, long jarg2);
  public final static native long SDL_JoyDeviceEvent_type_get(long jarg1, SDL_JoyDeviceEvent jarg1_);
  public final static native void SDL_JoyDeviceEvent_timestamp_set(long jarg1, SDL_JoyDeviceEvent jarg1_, long jarg2);
  public final static native long SDL_JoyDeviceEvent_timestamp_get(long jarg1, SDL_JoyDeviceEvent jarg1_);
  public final static native void SDL_JoyDeviceEvent_which_set(long jarg1, SDL_JoyDeviceEvent jarg1_, int jarg2);
  public final static native int SDL_JoyDeviceEvent_which_get(long jarg1, SDL_JoyDeviceEvent jarg1_);
  public final static native long new_SDL_JoyDeviceEvent();
  public final static native void delete_SDL_JoyDeviceEvent(long jarg1);
  public final static native void SDL_ControllerAxisEvent_type_set(long jarg1, SDL_ControllerAxisEvent jarg1_, long jarg2);
  public final static native long SDL_ControllerAxisEvent_type_get(long jarg1, SDL_ControllerAxisEvent jarg1_);
  public final static native void SDL_ControllerAxisEvent_timestamp_set(long jarg1, SDL_ControllerAxisEvent jarg1_, long jarg2);
  public final static native long SDL_ControllerAxisEvent_timestamp_get(long jarg1, SDL_ControllerAxisEvent jarg1_);
  public final static native void SDL_ControllerAxisEvent_which_set(long jarg1, SDL_ControllerAxisEvent jarg1_, long jarg2);
  public final static native long SDL_ControllerAxisEvent_which_get(long jarg1, SDL_ControllerAxisEvent jarg1_);
  public final static native void SDL_ControllerAxisEvent_axis_set(long jarg1, SDL_ControllerAxisEvent jarg1_, short jarg2);
  public final static native short SDL_ControllerAxisEvent_axis_get(long jarg1, SDL_ControllerAxisEvent jarg1_);
  public final static native void SDL_ControllerAxisEvent_padding1_set(long jarg1, SDL_ControllerAxisEvent jarg1_, short jarg2);
  public final static native short SDL_ControllerAxisEvent_padding1_get(long jarg1, SDL_ControllerAxisEvent jarg1_);
  public final static native void SDL_ControllerAxisEvent_padding2_set(long jarg1, SDL_ControllerAxisEvent jarg1_, short jarg2);
  public final static native short SDL_ControllerAxisEvent_padding2_get(long jarg1, SDL_ControllerAxisEvent jarg1_);
  public final static native void SDL_ControllerAxisEvent_padding3_set(long jarg1, SDL_ControllerAxisEvent jarg1_, short jarg2);
  public final static native short SDL_ControllerAxisEvent_padding3_get(long jarg1, SDL_ControllerAxisEvent jarg1_);
  public final static native void SDL_ControllerAxisEvent_value_set(long jarg1, SDL_ControllerAxisEvent jarg1_, long jarg2);
  public final static native long SDL_ControllerAxisEvent_value_get(long jarg1, SDL_ControllerAxisEvent jarg1_);
  public final static native void SDL_ControllerAxisEvent_padding4_set(long jarg1, SDL_ControllerAxisEvent jarg1_, int jarg2);
  public final static native int SDL_ControllerAxisEvent_padding4_get(long jarg1, SDL_ControllerAxisEvent jarg1_);
  public final static native long new_SDL_ControllerAxisEvent();
  public final static native void delete_SDL_ControllerAxisEvent(long jarg1);
  public final static native void SDL_ControllerButtonEvent_type_set(long jarg1, SDL_ControllerButtonEvent jarg1_, long jarg2);
  public final static native long SDL_ControllerButtonEvent_type_get(long jarg1, SDL_ControllerButtonEvent jarg1_);
  public final static native void SDL_ControllerButtonEvent_timestamp_set(long jarg1, SDL_ControllerButtonEvent jarg1_, long jarg2);
  public final static native long SDL_ControllerButtonEvent_timestamp_get(long jarg1, SDL_ControllerButtonEvent jarg1_);
  public final static native void SDL_ControllerButtonEvent_which_set(long jarg1, SDL_ControllerButtonEvent jarg1_, long jarg2);
  public final static native long SDL_ControllerButtonEvent_which_get(long jarg1, SDL_ControllerButtonEvent jarg1_);
  public final static native void SDL_ControllerButtonEvent_button_set(long jarg1, SDL_ControllerButtonEvent jarg1_, short jarg2);
  public final static native short SDL_ControllerButtonEvent_button_get(long jarg1, SDL_ControllerButtonEvent jarg1_);
  public final static native void SDL_ControllerButtonEvent_state_set(long jarg1, SDL_ControllerButtonEvent jarg1_, short jarg2);
  public final static native short SDL_ControllerButtonEvent_state_get(long jarg1, SDL_ControllerButtonEvent jarg1_);
  public final static native void SDL_ControllerButtonEvent_padding1_set(long jarg1, SDL_ControllerButtonEvent jarg1_, short jarg2);
  public final static native short SDL_ControllerButtonEvent_padding1_get(long jarg1, SDL_ControllerButtonEvent jarg1_);
  public final static native void SDL_ControllerButtonEvent_padding2_set(long jarg1, SDL_ControllerButtonEvent jarg1_, short jarg2);
  public final static native short SDL_ControllerButtonEvent_padding2_get(long jarg1, SDL_ControllerButtonEvent jarg1_);
  public final static native long new_SDL_ControllerButtonEvent();
  public final static native void delete_SDL_ControllerButtonEvent(long jarg1);
  public final static native void SDL_ControllerDeviceEvent_type_set(long jarg1, SDL_ControllerDeviceEvent jarg1_, long jarg2);
  public final static native long SDL_ControllerDeviceEvent_type_get(long jarg1, SDL_ControllerDeviceEvent jarg1_);
  public final static native void SDL_ControllerDeviceEvent_timestamp_set(long jarg1, SDL_ControllerDeviceEvent jarg1_, long jarg2);
  public final static native long SDL_ControllerDeviceEvent_timestamp_get(long jarg1, SDL_ControllerDeviceEvent jarg1_);
  public final static native void SDL_ControllerDeviceEvent_which_set(long jarg1, SDL_ControllerDeviceEvent jarg1_, int jarg2);
  public final static native int SDL_ControllerDeviceEvent_which_get(long jarg1, SDL_ControllerDeviceEvent jarg1_);
  public final static native long new_SDL_ControllerDeviceEvent();
  public final static native void delete_SDL_ControllerDeviceEvent(long jarg1);
  public final static native void SDL_AudioDeviceEvent_type_set(long jarg1, SDL_AudioDeviceEvent jarg1_, long jarg2);
  public final static native long SDL_AudioDeviceEvent_type_get(long jarg1, SDL_AudioDeviceEvent jarg1_);
  public final static native void SDL_AudioDeviceEvent_timestamp_set(long jarg1, SDL_AudioDeviceEvent jarg1_, long jarg2);
  public final static native long SDL_AudioDeviceEvent_timestamp_get(long jarg1, SDL_AudioDeviceEvent jarg1_);
  public final static native void SDL_AudioDeviceEvent_which_set(long jarg1, SDL_AudioDeviceEvent jarg1_, long jarg2);
  public final static native long SDL_AudioDeviceEvent_which_get(long jarg1, SDL_AudioDeviceEvent jarg1_);
  public final static native void SDL_AudioDeviceEvent_iscapture_set(long jarg1, SDL_AudioDeviceEvent jarg1_, short jarg2);
  public final static native short SDL_AudioDeviceEvent_iscapture_get(long jarg1, SDL_AudioDeviceEvent jarg1_);
  public final static native void SDL_AudioDeviceEvent_padding1_set(long jarg1, SDL_AudioDeviceEvent jarg1_, short jarg2);
  public final static native short SDL_AudioDeviceEvent_padding1_get(long jarg1, SDL_AudioDeviceEvent jarg1_);
  public final static native void SDL_AudioDeviceEvent_padding2_set(long jarg1, SDL_AudioDeviceEvent jarg1_, short jarg2);
  public final static native short SDL_AudioDeviceEvent_padding2_get(long jarg1, SDL_AudioDeviceEvent jarg1_);
  public final static native void SDL_AudioDeviceEvent_padding3_set(long jarg1, SDL_AudioDeviceEvent jarg1_, short jarg2);
  public final static native short SDL_AudioDeviceEvent_padding3_get(long jarg1, SDL_AudioDeviceEvent jarg1_);
  public final static native long new_SDL_AudioDeviceEvent();
  public final static native void delete_SDL_AudioDeviceEvent(long jarg1);
  public final static native void SDL_TouchFingerEvent_type_set(long jarg1, SDL_TouchFingerEvent jarg1_, long jarg2);
  public final static native long SDL_TouchFingerEvent_type_get(long jarg1, SDL_TouchFingerEvent jarg1_);
  public final static native void SDL_TouchFingerEvent_timestamp_set(long jarg1, SDL_TouchFingerEvent jarg1_, long jarg2);
  public final static native long SDL_TouchFingerEvent_timestamp_get(long jarg1, SDL_TouchFingerEvent jarg1_);
  public final static native void SDL_TouchFingerEvent_touchId_set(long jarg1, SDL_TouchFingerEvent jarg1_, long jarg2);
  public final static native long SDL_TouchFingerEvent_touchId_get(long jarg1, SDL_TouchFingerEvent jarg1_);
  public final static native void SDL_TouchFingerEvent_fingerId_set(long jarg1, SDL_TouchFingerEvent jarg1_, long jarg2);
  public final static native long SDL_TouchFingerEvent_fingerId_get(long jarg1, SDL_TouchFingerEvent jarg1_);
  public final static native void SDL_TouchFingerEvent_x_set(long jarg1, SDL_TouchFingerEvent jarg1_, float jarg2);
  public final static native float SDL_TouchFingerEvent_x_get(long jarg1, SDL_TouchFingerEvent jarg1_);
  public final static native void SDL_TouchFingerEvent_y_set(long jarg1, SDL_TouchFingerEvent jarg1_, float jarg2);
  public final static native float SDL_TouchFingerEvent_y_get(long jarg1, SDL_TouchFingerEvent jarg1_);
  public final static native void SDL_TouchFingerEvent_dx_set(long jarg1, SDL_TouchFingerEvent jarg1_, float jarg2);
  public final static native float SDL_TouchFingerEvent_dx_get(long jarg1, SDL_TouchFingerEvent jarg1_);
  public final static native void SDL_TouchFingerEvent_dy_set(long jarg1, SDL_TouchFingerEvent jarg1_, float jarg2);
  public final static native float SDL_TouchFingerEvent_dy_get(long jarg1, SDL_TouchFingerEvent jarg1_);
  public final static native void SDL_TouchFingerEvent_pressure_set(long jarg1, SDL_TouchFingerEvent jarg1_, float jarg2);
  public final static native float SDL_TouchFingerEvent_pressure_get(long jarg1, SDL_TouchFingerEvent jarg1_);
  public final static native long new_SDL_TouchFingerEvent();
  public final static native void delete_SDL_TouchFingerEvent(long jarg1);
  public final static native void SDL_MultiGestureEvent_type_set(long jarg1, SDL_MultiGestureEvent jarg1_, long jarg2);
  public final static native long SDL_MultiGestureEvent_type_get(long jarg1, SDL_MultiGestureEvent jarg1_);
  public final static native void SDL_MultiGestureEvent_timestamp_set(long jarg1, SDL_MultiGestureEvent jarg1_, long jarg2);
  public final static native long SDL_MultiGestureEvent_timestamp_get(long jarg1, SDL_MultiGestureEvent jarg1_);
  public final static native void SDL_MultiGestureEvent_touchId_set(long jarg1, SDL_MultiGestureEvent jarg1_, long jarg2);
  public final static native long SDL_MultiGestureEvent_touchId_get(long jarg1, SDL_MultiGestureEvent jarg1_);
  public final static native void SDL_MultiGestureEvent_dTheta_set(long jarg1, SDL_MultiGestureEvent jarg1_, float jarg2);
  public final static native float SDL_MultiGestureEvent_dTheta_get(long jarg1, SDL_MultiGestureEvent jarg1_);
  public final static native void SDL_MultiGestureEvent_dDist_set(long jarg1, SDL_MultiGestureEvent jarg1_, float jarg2);
  public final static native float SDL_MultiGestureEvent_dDist_get(long jarg1, SDL_MultiGestureEvent jarg1_);
  public final static native void SDL_MultiGestureEvent_x_set(long jarg1, SDL_MultiGestureEvent jarg1_, float jarg2);
  public final static native float SDL_MultiGestureEvent_x_get(long jarg1, SDL_MultiGestureEvent jarg1_);
  public final static native void SDL_MultiGestureEvent_y_set(long jarg1, SDL_MultiGestureEvent jarg1_, float jarg2);
  public final static native float SDL_MultiGestureEvent_y_get(long jarg1, SDL_MultiGestureEvent jarg1_);
  public final static native void SDL_MultiGestureEvent_numFingers_set(long jarg1, SDL_MultiGestureEvent jarg1_, int jarg2);
  public final static native int SDL_MultiGestureEvent_numFingers_get(long jarg1, SDL_MultiGestureEvent jarg1_);
  public final static native void SDL_MultiGestureEvent_padding_set(long jarg1, SDL_MultiGestureEvent jarg1_, int jarg2);
  public final static native int SDL_MultiGestureEvent_padding_get(long jarg1, SDL_MultiGestureEvent jarg1_);
  public final static native long new_SDL_MultiGestureEvent();
  public final static native void delete_SDL_MultiGestureEvent(long jarg1);
  public final static native void SDL_DollarGestureEvent_type_set(long jarg1, SDL_DollarGestureEvent jarg1_, long jarg2);
  public final static native long SDL_DollarGestureEvent_type_get(long jarg1, SDL_DollarGestureEvent jarg1_);
  public final static native void SDL_DollarGestureEvent_timestamp_set(long jarg1, SDL_DollarGestureEvent jarg1_, long jarg2);
  public final static native long SDL_DollarGestureEvent_timestamp_get(long jarg1, SDL_DollarGestureEvent jarg1_);
  public final static native void SDL_DollarGestureEvent_touchId_set(long jarg1, SDL_DollarGestureEvent jarg1_, long jarg2);
  public final static native long SDL_DollarGestureEvent_touchId_get(long jarg1, SDL_DollarGestureEvent jarg1_);
  public final static native void SDL_DollarGestureEvent_gestureId_set(long jarg1, SDL_DollarGestureEvent jarg1_, long jarg2);
  public final static native long SDL_DollarGestureEvent_gestureId_get(long jarg1, SDL_DollarGestureEvent jarg1_);
  public final static native void SDL_DollarGestureEvent_numFingers_set(long jarg1, SDL_DollarGestureEvent jarg1_, long jarg2);
  public final static native long SDL_DollarGestureEvent_numFingers_get(long jarg1, SDL_DollarGestureEvent jarg1_);
  public final static native void SDL_DollarGestureEvent_error_set(long jarg1, SDL_DollarGestureEvent jarg1_, float jarg2);
  public final static native float SDL_DollarGestureEvent_error_get(long jarg1, SDL_DollarGestureEvent jarg1_);
  public final static native void SDL_DollarGestureEvent_x_set(long jarg1, SDL_DollarGestureEvent jarg1_, float jarg2);
  public final static native float SDL_DollarGestureEvent_x_get(long jarg1, SDL_DollarGestureEvent jarg1_);
  public final static native void SDL_DollarGestureEvent_y_set(long jarg1, SDL_DollarGestureEvent jarg1_, float jarg2);
  public final static native float SDL_DollarGestureEvent_y_get(long jarg1, SDL_DollarGestureEvent jarg1_);
  public final static native long new_SDL_DollarGestureEvent();
  public final static native void delete_SDL_DollarGestureEvent(long jarg1);
  public final static native void SDL_DropEvent_type_set(long jarg1, SDL_DropEvent jarg1_, long jarg2);
  public final static native long SDL_DropEvent_type_get(long jarg1, SDL_DropEvent jarg1_);
  public final static native void SDL_DropEvent_timestamp_set(long jarg1, SDL_DropEvent jarg1_, long jarg2);
  public final static native long SDL_DropEvent_timestamp_get(long jarg1, SDL_DropEvent jarg1_);
  public final static native void SDL_DropEvent_file_set(long jarg1, SDL_DropEvent jarg1_, String jarg2);
  public final static native String SDL_DropEvent_file_get(long jarg1, SDL_DropEvent jarg1_);
  public final static native void SDL_DropEvent_windowID_set(long jarg1, SDL_DropEvent jarg1_, long jarg2);
  public final static native long SDL_DropEvent_windowID_get(long jarg1, SDL_DropEvent jarg1_);
  public final static native long new_SDL_DropEvent();
  public final static native void delete_SDL_DropEvent(long jarg1);
  public final static native void SDL_QuitEvent_type_set(long jarg1, SDL_QuitEvent jarg1_, long jarg2);
  public final static native long SDL_QuitEvent_type_get(long jarg1, SDL_QuitEvent jarg1_);
  public final static native void SDL_QuitEvent_timestamp_set(long jarg1, SDL_QuitEvent jarg1_, long jarg2);
  public final static native long SDL_QuitEvent_timestamp_get(long jarg1, SDL_QuitEvent jarg1_);
  public final static native long new_SDL_QuitEvent();
  public final static native void delete_SDL_QuitEvent(long jarg1);
  public final static native void SDL_OSEvent_type_set(long jarg1, SDL_OSEvent jarg1_, long jarg2);
  public final static native long SDL_OSEvent_type_get(long jarg1, SDL_OSEvent jarg1_);
  public final static native void SDL_OSEvent_timestamp_set(long jarg1, SDL_OSEvent jarg1_, long jarg2);
  public final static native long SDL_OSEvent_timestamp_get(long jarg1, SDL_OSEvent jarg1_);
  public final static native long new_SDL_OSEvent();
  public final static native void delete_SDL_OSEvent(long jarg1);
  public final static native void SDL_UserEvent_type_set(long jarg1, SDL_UserEvent jarg1_, long jarg2);
  public final static native long SDL_UserEvent_type_get(long jarg1, SDL_UserEvent jarg1_);
  public final static native void SDL_UserEvent_timestamp_set(long jarg1, SDL_UserEvent jarg1_, long jarg2);
  public final static native long SDL_UserEvent_timestamp_get(long jarg1, SDL_UserEvent jarg1_);
  public final static native void SDL_UserEvent_windowID_set(long jarg1, SDL_UserEvent jarg1_, long jarg2);
  public final static native long SDL_UserEvent_windowID_get(long jarg1, SDL_UserEvent jarg1_);
  public final static native void SDL_UserEvent_code_set(long jarg1, SDL_UserEvent jarg1_, int jarg2);
  public final static native int SDL_UserEvent_code_get(long jarg1, SDL_UserEvent jarg1_);
  public final static native void SDL_UserEvent_data1_set(long jarg1, SDL_UserEvent jarg1_, long jarg2);
  public final static native long SDL_UserEvent_data1_get(long jarg1, SDL_UserEvent jarg1_);
  public final static native void SDL_UserEvent_data2_set(long jarg1, SDL_UserEvent jarg1_, long jarg2);
  public final static native long SDL_UserEvent_data2_get(long jarg1, SDL_UserEvent jarg1_);
  public final static native long new_SDL_UserEvent();
  public final static native void delete_SDL_UserEvent(long jarg1);
  public final static native void SDL_SysWMEvent_type_set(long jarg1, SDL_SysWMEvent jarg1_, long jarg2);
  public final static native long SDL_SysWMEvent_type_get(long jarg1, SDL_SysWMEvent jarg1_);
  public final static native void SDL_SysWMEvent_timestamp_set(long jarg1, SDL_SysWMEvent jarg1_, long jarg2);
  public final static native long SDL_SysWMEvent_timestamp_get(long jarg1, SDL_SysWMEvent jarg1_);
  public final static native void SDL_SysWMEvent_msg_set(long jarg1, SDL_SysWMEvent jarg1_, long jarg2);
  public final static native long SDL_SysWMEvent_msg_get(long jarg1, SDL_SysWMEvent jarg1_);
  public final static native long new_SDL_SysWMEvent();
  public final static native void delete_SDL_SysWMEvent(long jarg1);
  public final static native void SDL_Event_type_set(long jarg1, SDL_Event jarg1_, long jarg2);
  public final static native long SDL_Event_type_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_common_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_CommonEvent jarg2_);
  public final static native long SDL_Event_common_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_window_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_WindowEvent jarg2_);
  public final static native long SDL_Event_window_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_key_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_KeyboardEvent jarg2_);
  public final static native long SDL_Event_key_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_edit_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_TextEditingEvent jarg2_);
  public final static native long SDL_Event_edit_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_text_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_TextInputEvent jarg2_);
  public final static native long SDL_Event_text_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_motion_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_MouseMotionEvent jarg2_);
  public final static native long SDL_Event_motion_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_button_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_MouseButtonEvent jarg2_);
  public final static native long SDL_Event_button_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_wheel_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_MouseWheelEvent jarg2_);
  public final static native long SDL_Event_wheel_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_jaxis_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_JoyAxisEvent jarg2_);
  public final static native long SDL_Event_jaxis_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_jball_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_JoyBallEvent jarg2_);
  public final static native long SDL_Event_jball_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_jhat_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_JoyHatEvent jarg2_);
  public final static native long SDL_Event_jhat_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_jbutton_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_JoyButtonEvent jarg2_);
  public final static native long SDL_Event_jbutton_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_jdevice_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_JoyDeviceEvent jarg2_);
  public final static native long SDL_Event_jdevice_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_caxis_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_ControllerAxisEvent jarg2_);
  public final static native long SDL_Event_caxis_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_cbutton_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_ControllerButtonEvent jarg2_);
  public final static native long SDL_Event_cbutton_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_cdevice_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_ControllerDeviceEvent jarg2_);
  public final static native long SDL_Event_cdevice_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_adevice_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_AudioDeviceEvent jarg2_);
  public final static native long SDL_Event_adevice_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_quit_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_QuitEvent jarg2_);
  public final static native long SDL_Event_quit_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_user_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_UserEvent jarg2_);
  public final static native long SDL_Event_user_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_syswm_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_SysWMEvent jarg2_);
  public final static native long SDL_Event_syswm_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_tfinger_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_TouchFingerEvent jarg2_);
  public final static native long SDL_Event_tfinger_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_mgesture_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_MultiGestureEvent jarg2_);
  public final static native long SDL_Event_mgesture_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_dgesture_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_DollarGestureEvent jarg2_);
  public final static native long SDL_Event_dgesture_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_drop_set(long jarg1, SDL_Event jarg1_, long jarg2, SDL_DropEvent jarg2_);
  public final static native long SDL_Event_drop_get(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_Event_padding_set(long jarg1, SDL_Event jarg1_, long jarg2);
  public final static native long SDL_Event_padding_get(long jarg1, SDL_Event jarg1_);
  public final static native long new_SDL_Event();
  public final static native void delete_SDL_Event(long jarg1);
  public final static native void SDL_PumpEvents();
  public final static native int SDL_PeepEvents(long jarg1, SDL_Event jarg1_, int jarg2, int jarg3, long jarg4, long jarg5);
  public final static native long SDL_HasEvent(long jarg1);
  public final static native long SDL_HasEvents(long jarg1, long jarg2);
  public final static native void SDL_FlushEvent(long jarg1);
  public final static native void SDL_FlushEvents(long jarg1, long jarg2);
  public final static native int SDL_PollEvent(long jarg1, SDL_Event jarg1_);
  public final static native int SDL_WaitEvent(long jarg1, SDL_Event jarg1_);
  public final static native int SDL_WaitEventTimeout(long jarg1, SDL_Event jarg1_, int jarg2);
  public final static native int SDL_PushEvent(long jarg1, SDL_Event jarg1_);
  public final static native void SDL_SetEventFilter(long jarg1, long jarg2);
  public final static native long SDL_GetEventFilter(long jarg1, long jarg2);
  public final static native void SDL_AddEventWatch(long jarg1, long jarg2);
  public final static native void SDL_DelEventWatch(long jarg1, long jarg2);
  public final static native void SDL_FilterEvents(long jarg1, long jarg2);
  public final static native int SDL_QUERY_get();
  public final static native int SDL_IGNORE_get();
  public final static native int SDL_DISABLE_get();
  public final static native int SDL_ENABLE_get();
  public final static native short SDL_EventState(long jarg1, int jarg2);
  public final static native long SDL_RegisterEvents(int jarg1);
  public final static native int SDL_RENDERER_SOFTWARE_get();
  public final static native int SDL_RENDERER_ACCELERATED_get();
  public final static native int SDL_RENDERER_PRESENTVSYNC_get();
  public final static native int SDL_RENDERER_TARGETTEXTURE_get();
  public final static native void SDL_RendererInfo_name_set(long jarg1, SDL_RendererInfo jarg1_, String jarg2);
  public final static native String SDL_RendererInfo_name_get(long jarg1, SDL_RendererInfo jarg1_);
  public final static native void SDL_RendererInfo_flags_set(long jarg1, SDL_RendererInfo jarg1_, long jarg2);
  public final static native long SDL_RendererInfo_flags_get(long jarg1, SDL_RendererInfo jarg1_);
  public final static native void SDL_RendererInfo_num_texture_formats_set(long jarg1, SDL_RendererInfo jarg1_, long jarg2);
  public final static native long SDL_RendererInfo_num_texture_formats_get(long jarg1, SDL_RendererInfo jarg1_);
  public final static native void SDL_RendererInfo_texture_formats_set(long jarg1, SDL_RendererInfo jarg1_, long jarg2);
  public final static native long SDL_RendererInfo_texture_formats_get(long jarg1, SDL_RendererInfo jarg1_);
  public final static native void SDL_RendererInfo_max_texture_width_set(long jarg1, SDL_RendererInfo jarg1_, int jarg2);
  public final static native int SDL_RendererInfo_max_texture_width_get(long jarg1, SDL_RendererInfo jarg1_);
  public final static native void SDL_RendererInfo_max_texture_height_set(long jarg1, SDL_RendererInfo jarg1_, int jarg2);
  public final static native int SDL_RendererInfo_max_texture_height_get(long jarg1, SDL_RendererInfo jarg1_);
  public final static native long new_SDL_RendererInfo();
  public final static native void delete_SDL_RendererInfo(long jarg1);
  public final static native int SDL_TEXTUREMODULATE_NONE_get();
  public final static native int SDL_TEXTUREMODULATE_COLOR_get();
  public final static native int SDL_TEXTUREMODULATE_ALPHA_get();
  public final static native int SDL_FLIP_NONE_get();
  public final static native int SDL_FLIP_HORIZONTAL_get();
  public final static native int SDL_FLIP_VERTICAL_get();
  public final static native int SDL_GetNumRenderDrivers();
  public final static native int SDL_GetRenderDriverInfo(int jarg1, long jarg2, SDL_RendererInfo jarg2_);
  public final static native int SDL_CreateWindowAndRenderer(int jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long SDL_CreateRenderer(long jarg1, int jarg2, long jarg3);
  public final static native long SDL_CreateSoftwareRenderer(long jarg1);
  public final static native long SDL_GetRenderer(long jarg1);
  public final static native int SDL_GetRendererInfo(long jarg1, long jarg2, SDL_RendererInfo jarg2_);
  public final static native int SDL_GetRendererOutputSize(long jarg1, long jarg2, long jarg3);
  public final static native long SDL_CreateTexture(long jarg1, long jarg2, int jarg3, int jarg4, int jarg5);
  public final static native long SDL_CreateTextureFromSurface(long jarg1, long jarg2);
  public final static native int SDL_QueryTexture(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int SDL_SetTextureColorMod(long jarg1, short jarg2, short jarg3, short jarg4);
  public final static native int SDL_GetTextureColorMod(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int SDL_SetTextureAlphaMod(long jarg1, short jarg2);
  public final static native int SDL_GetTextureAlphaMod(long jarg1, long jarg2);
  public final static native int SDL_SetTextureBlendMode(long jarg1, long jarg2);
  public final static native int SDL_GetTextureBlendMode(long jarg1, long jarg2);
  public final static native int SDL_UpdateTexture(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native int SDL_UpdateYUVTexture(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6, long jarg7, int jarg8);
  public final static native int SDL_LockTexture(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void SDL_UnlockTexture(long jarg1);
  public final static native long SDL_RenderTargetSupported(long jarg1);
  public final static native int SDL_SetRenderTarget(long jarg1, long jarg2);
  public final static native long SDL_GetRenderTarget(long jarg1);
  public final static native int SDL_RenderSetLogicalSize(long jarg1, int jarg2, int jarg3);
  public final static native void SDL_RenderGetLogicalSize(long jarg1, long jarg2, long jarg3);
  public final static native int SDL_RenderSetIntegerScale(long jarg1, long jarg2);
  public final static native long SDL_RenderGetIntegerScale(long jarg1);
  public final static native int SDL_RenderSetViewport(long jarg1, long jarg2);
  public final static native void SDL_RenderGetViewport(long jarg1, long jarg2);
  public final static native int SDL_RenderSetClipRect(long jarg1, long jarg2);
  public final static native void SDL_RenderGetClipRect(long jarg1, long jarg2);
  public final static native long SDL_RenderIsClipEnabled(long jarg1);
  public final static native int SDL_RenderSetScale(long jarg1, float jarg2, float jarg3);
  public final static native void SDL_RenderGetScale(long jarg1, long jarg2, long jarg3);
  public final static native int SDL_SetRenderDrawColor(long jarg1, short jarg2, short jarg3, short jarg4, short jarg5);
  public final static native int SDL_GetRenderDrawColor(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int SDL_SetRenderDrawBlendMode(long jarg1, long jarg2);
  public final static native int SDL_GetRenderDrawBlendMode(long jarg1, long jarg2);
  public final static native int SDL_RenderClear(long jarg1);
  public final static native int SDL_RenderDrawPoint(long jarg1, int jarg2, int jarg3);
  public final static native int SDL_RenderDrawPoints(long jarg1, long jarg2, int jarg3);
  public final static native int SDL_RenderDrawLine(long jarg1, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native int SDL_RenderDrawLines(long jarg1, long jarg2, int jarg3);
  public final static native int SDL_RenderDrawRect(long jarg1, long jarg2);
  public final static native int SDL_RenderDrawRects(long jarg1, long jarg2, int jarg3);
  public final static native int SDL_RenderFillRect(long jarg1, long jarg2);
  public final static native int SDL_RenderFillRects(long jarg1, long jarg2, int jarg3);
  public final static native int SDL_RenderCopy(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int SDL_RenderCopyEx(long jarg1, long jarg2, long jarg3, long jarg4, double jarg5, long jarg6, int jarg7);
  public final static native int SDL_RenderReadPixels(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void SDL_RenderPresent(long jarg1);
  public final static native void SDL_DestroyTexture(long jarg1);
  public final static native void SDL_DestroyRenderer(long jarg1);
  public final static native int SDL_GL_BindTexture(long jarg1, long jarg2, long jarg3);
  public final static native int SDL_GL_UnbindTexture(long jarg1);
  public final static native int SDL_ALPHA_OPAQUE_get();
  public final static native int SDL_ALPHA_TRANSPARENT_get();
  public final static native int SDL_PIXELTYPE_UNKNOWN_get();
  public final static native int SDL_PIXELTYPE_INDEX1_get();
  public final static native int SDL_PIXELTYPE_INDEX4_get();
  public final static native int SDL_PIXELTYPE_INDEX8_get();
  public final static native int SDL_PIXELTYPE_PACKED8_get();
  public final static native int SDL_PIXELTYPE_PACKED16_get();
  public final static native int SDL_PIXELTYPE_PACKED32_get();
  public final static native int SDL_PIXELTYPE_ARRAYU8_get();
  public final static native int SDL_PIXELTYPE_ARRAYU16_get();
  public final static native int SDL_PIXELTYPE_ARRAYU32_get();
  public final static native int SDL_PIXELTYPE_ARRAYF16_get();
  public final static native int SDL_PIXELTYPE_ARRAYF32_get();
  public final static native int SDL_BITMAPORDER_NONE_get();
  public final static native int SDL_BITMAPORDER_4321_get();
  public final static native int SDL_BITMAPORDER_1234_get();
  public final static native int SDL_PACKEDORDER_NONE_get();
  public final static native int SDL_PACKEDORDER_XRGB_get();
  public final static native int SDL_PACKEDORDER_RGBX_get();
  public final static native int SDL_PACKEDORDER_ARGB_get();
  public final static native int SDL_PACKEDORDER_RGBA_get();
  public final static native int SDL_PACKEDORDER_XBGR_get();
  public final static native int SDL_PACKEDORDER_BGRX_get();
  public final static native int SDL_PACKEDORDER_ABGR_get();
  public final static native int SDL_PACKEDORDER_BGRA_get();
  public final static native int SDL_ARRAYORDER_NONE_get();
  public final static native int SDL_ARRAYORDER_RGB_get();
  public final static native int SDL_ARRAYORDER_RGBA_get();
  public final static native int SDL_ARRAYORDER_ARGB_get();
  public final static native int SDL_ARRAYORDER_BGR_get();
  public final static native int SDL_ARRAYORDER_BGRA_get();
  public final static native int SDL_ARRAYORDER_ABGR_get();
  public final static native int SDL_PACKEDLAYOUT_NONE_get();
  public final static native int SDL_PACKEDLAYOUT_332_get();
  public final static native int SDL_PACKEDLAYOUT_4444_get();
  public final static native int SDL_PACKEDLAYOUT_1555_get();
  public final static native int SDL_PACKEDLAYOUT_5551_get();
  public final static native int SDL_PACKEDLAYOUT_565_get();
  public final static native int SDL_PACKEDLAYOUT_8888_get();
  public final static native int SDL_PACKEDLAYOUT_2101010_get();
  public final static native int SDL_PACKEDLAYOUT_1010102_get();
  public final static native int SDL_PIXELFORMAT_UNKNOWN_get();
  public final static native int SDL_PIXELFORMAT_INDEX1LSB_get();
  public final static native int SDL_PIXELFORMAT_INDEX1MSB_get();
  public final static native int SDL_PIXELFORMAT_INDEX4LSB_get();
  public final static native int SDL_PIXELFORMAT_INDEX4MSB_get();
  public final static native int SDL_PIXELFORMAT_INDEX8_get();
  public final static native int SDL_PIXELFORMAT_RGB332_get();
  public final static native int SDL_PIXELFORMAT_RGB444_get();
  public final static native int SDL_PIXELFORMAT_RGB555_get();
  public final static native int SDL_PIXELFORMAT_BGR555_get();
  public final static native int SDL_PIXELFORMAT_ARGB4444_get();
  public final static native int SDL_PIXELFORMAT_RGBA4444_get();
  public final static native int SDL_PIXELFORMAT_ABGR4444_get();
  public final static native int SDL_PIXELFORMAT_BGRA4444_get();
  public final static native int SDL_PIXELFORMAT_ARGB1555_get();
  public final static native int SDL_PIXELFORMAT_RGBA5551_get();
  public final static native int SDL_PIXELFORMAT_ABGR1555_get();
  public final static native int SDL_PIXELFORMAT_BGRA5551_get();
  public final static native int SDL_PIXELFORMAT_RGB565_get();
  public final static native int SDL_PIXELFORMAT_BGR565_get();
  public final static native int SDL_PIXELFORMAT_RGB24_get();
  public final static native int SDL_PIXELFORMAT_BGR24_get();
  public final static native int SDL_PIXELFORMAT_RGB888_get();
  public final static native int SDL_PIXELFORMAT_RGBX8888_get();
  public final static native int SDL_PIXELFORMAT_BGR888_get();
  public final static native int SDL_PIXELFORMAT_BGRX8888_get();
  public final static native int SDL_PIXELFORMAT_ARGB8888_get();
  public final static native int SDL_PIXELFORMAT_RGBA8888_get();
  public final static native int SDL_PIXELFORMAT_ABGR8888_get();
  public final static native int SDL_PIXELFORMAT_BGRA8888_get();
  public final static native int SDL_PIXELFORMAT_ARGB2101010_get();
  public final static native int SDL_PIXELFORMAT_RGBA32_get();
  public final static native int SDL_PIXELFORMAT_ARGB32_get();
  public final static native int SDL_PIXELFORMAT_BGRA32_get();
  public final static native int SDL_PIXELFORMAT_ABGR32_get();
  public final static native int SDL_PIXELFORMAT_YV12_get();
  public final static native int SDL_PIXELFORMAT_IYUV_get();
  public final static native int SDL_PIXELFORMAT_YUY2_get();
  public final static native int SDL_PIXELFORMAT_UYVY_get();
  public final static native int SDL_PIXELFORMAT_YVYU_get();
  public final static native int SDL_PIXELFORMAT_NV12_get();
  public final static native int SDL_PIXELFORMAT_NV21_get();
  public final static native void SDL_Color_r_set(long jarg1, SDL_Color jarg1_, short jarg2);
  public final static native short SDL_Color_r_get(long jarg1, SDL_Color jarg1_);
  public final static native void SDL_Color_g_set(long jarg1, SDL_Color jarg1_, short jarg2);
  public final static native short SDL_Color_g_get(long jarg1, SDL_Color jarg1_);
  public final static native void SDL_Color_b_set(long jarg1, SDL_Color jarg1_, short jarg2);
  public final static native short SDL_Color_b_get(long jarg1, SDL_Color jarg1_);
  public final static native void SDL_Color_a_set(long jarg1, SDL_Color jarg1_, short jarg2);
  public final static native short SDL_Color_a_get(long jarg1, SDL_Color jarg1_);
  public final static native long new_SDL_Color();
  public final static native void delete_SDL_Color(long jarg1);
  public final static native void SDL_Palette_ncolors_set(long jarg1, SDL_Palette jarg1_, int jarg2);
  public final static native int SDL_Palette_ncolors_get(long jarg1, SDL_Palette jarg1_);
  public final static native void SDL_Palette_colors_set(long jarg1, SDL_Palette jarg1_, long jarg2, SDL_Color jarg2_);
  public final static native long SDL_Palette_colors_get(long jarg1, SDL_Palette jarg1_);
  public final static native void SDL_Palette_version_set(long jarg1, SDL_Palette jarg1_, long jarg2);
  public final static native long SDL_Palette_version_get(long jarg1, SDL_Palette jarg1_);
  public final static native void SDL_Palette_refcount_set(long jarg1, SDL_Palette jarg1_, int jarg2);
  public final static native int SDL_Palette_refcount_get(long jarg1, SDL_Palette jarg1_);
  public final static native long new_SDL_Palette();
  public final static native void delete_SDL_Palette(long jarg1);
  public final static native void SDL_PixelFormat_format_set(long jarg1, SDL_PixelFormat jarg1_, long jarg2);
  public final static native long SDL_PixelFormat_format_get(long jarg1, SDL_PixelFormat jarg1_);
  public final static native void SDL_PixelFormat_palette_set(long jarg1, SDL_PixelFormat jarg1_, long jarg2, SDL_Palette jarg2_);
  public final static native long SDL_PixelFormat_palette_get(long jarg1, SDL_PixelFormat jarg1_);
  public final static native void SDL_PixelFormat_BitsPerPixel_set(long jarg1, SDL_PixelFormat jarg1_, short jarg2);
  public final static native short SDL_PixelFormat_BitsPerPixel_get(long jarg1, SDL_PixelFormat jarg1_);
  public final static native void SDL_PixelFormat_BytesPerPixel_set(long jarg1, SDL_PixelFormat jarg1_, short jarg2);
  public final static native short SDL_PixelFormat_BytesPerPixel_get(long jarg1, SDL_PixelFormat jarg1_);
  public final static native void SDL_PixelFormat_padding_set(long jarg1, SDL_PixelFormat jarg1_, long jarg2);
  public final static native long SDL_PixelFormat_padding_get(long jarg1, SDL_PixelFormat jarg1_);
  public final static native void SDL_PixelFormat_Rmask_set(long jarg1, SDL_PixelFormat jarg1_, long jarg2);
  public final static native long SDL_PixelFormat_Rmask_get(long jarg1, SDL_PixelFormat jarg1_);
  public final static native void SDL_PixelFormat_Gmask_set(long jarg1, SDL_PixelFormat jarg1_, long jarg2);
  public final static native long SDL_PixelFormat_Gmask_get(long jarg1, SDL_PixelFormat jarg1_);
  public final static native void SDL_PixelFormat_Bmask_set(long jarg1, SDL_PixelFormat jarg1_, long jarg2);
  public final static native long SDL_PixelFormat_Bmask_get(long jarg1, SDL_PixelFormat jarg1_);
  public final static native void SDL_PixelFormat_Amask_set(long jarg1, SDL_PixelFormat jarg1_, long jarg2);
  public final static native long SDL_PixelFormat_Amask_get(long jarg1, SDL_PixelFormat jarg1_);
  public final static native void SDL_PixelFormat_Rloss_set(long jarg1, SDL_PixelFormat jarg1_, short jarg2);
  public final static native short SDL_PixelFormat_Rloss_get(long jarg1, SDL_PixelFormat jarg1_);
  public final static native void SDL_PixelFormat_Gloss_set(long jarg1, SDL_PixelFormat jarg1_, short jarg2);
  public final static native short SDL_PixelFormat_Gloss_get(long jarg1, SDL_PixelFormat jarg1_);
  public final static native void SDL_PixelFormat_Bloss_set(long jarg1, SDL_PixelFormat jarg1_, short jarg2);
  public final static native short SDL_PixelFormat_Bloss_get(long jarg1, SDL_PixelFormat jarg1_);
  public final static native void SDL_PixelFormat_Aloss_set(long jarg1, SDL_PixelFormat jarg1_, short jarg2);
  public final static native short SDL_PixelFormat_Aloss_get(long jarg1, SDL_PixelFormat jarg1_);
  public final static native void SDL_PixelFormat_Rshift_set(long jarg1, SDL_PixelFormat jarg1_, short jarg2);
  public final static native short SDL_PixelFormat_Rshift_get(long jarg1, SDL_PixelFormat jarg1_);
  public final static native void SDL_PixelFormat_Gshift_set(long jarg1, SDL_PixelFormat jarg1_, short jarg2);
  public final static native short SDL_PixelFormat_Gshift_get(long jarg1, SDL_PixelFormat jarg1_);
  public final static native void SDL_PixelFormat_Bshift_set(long jarg1, SDL_PixelFormat jarg1_, short jarg2);
  public final static native short SDL_PixelFormat_Bshift_get(long jarg1, SDL_PixelFormat jarg1_);
  public final static native void SDL_PixelFormat_Ashift_set(long jarg1, SDL_PixelFormat jarg1_, short jarg2);
  public final static native short SDL_PixelFormat_Ashift_get(long jarg1, SDL_PixelFormat jarg1_);
  public final static native void SDL_PixelFormat_refcount_set(long jarg1, SDL_PixelFormat jarg1_, int jarg2);
  public final static native int SDL_PixelFormat_refcount_get(long jarg1, SDL_PixelFormat jarg1_);
  public final static native void SDL_PixelFormat_next_set(long jarg1, SDL_PixelFormat jarg1_, long jarg2, SDL_PixelFormat jarg2_);
  public final static native long SDL_PixelFormat_next_get(long jarg1, SDL_PixelFormat jarg1_);
  public final static native long new_SDL_PixelFormat();
  public final static native void delete_SDL_PixelFormat(long jarg1);
  public final static native String SDL_GetPixelFormatName(long jarg1);
  public final static native long SDL_PixelFormatEnumToMasks(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long SDL_MasksToPixelFormatEnum(int jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long SDL_AllocFormat(long jarg1);
  public final static native void SDL_FreeFormat(long jarg1, SDL_PixelFormat jarg1_);
  public final static native long SDL_AllocPalette(int jarg1);
  public final static native int SDL_SetPixelFormatPalette(long jarg1, SDL_PixelFormat jarg1_, long jarg2, SDL_Palette jarg2_);
  public final static native int SDL_SetPaletteColors(long jarg1, SDL_Palette jarg1_, long jarg2, SDL_Color jarg2_, int jarg3, int jarg4);
  public final static native void SDL_FreePalette(long jarg1, SDL_Palette jarg1_);
  public final static native long SDL_MapRGB(long jarg1, SDL_PixelFormat jarg1_, short jarg2, short jarg3, short jarg4);
  public final static native long SDL_MapRGBA(long jarg1, SDL_PixelFormat jarg1_, short jarg2, short jarg3, short jarg4, short jarg5);
  public final static native void SDL_GetRGB(long jarg1, long jarg2, SDL_PixelFormat jarg2_, long jarg3, long jarg4, long jarg5);
  public final static native void SDL_GetRGBA(long jarg1, long jarg2, SDL_PixelFormat jarg2_, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void SDL_CalculateGammaRamp(float jarg1, long jarg2);
}
