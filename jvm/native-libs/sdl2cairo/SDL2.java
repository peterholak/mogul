/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sdl2cairo;

public class SDL2 implements SDL2Constants {
  public static SWIGTYPE_p_p_void new_voidpp() {
    long cPtr = SDL2JNI.new_voidpp();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_p_void copy_voidpp(SWIGTYPE_p_void value) {
    long cPtr = SDL2JNI.copy_voidpp(SWIGTYPE_p_void.getCPtr(value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_void(cPtr, false);
  }

  public static void delete_voidpp(SWIGTYPE_p_p_void obj) {
    SDL2JNI.delete_voidpp(SWIGTYPE_p_p_void.getCPtr(obj));
  }

  public static void voidpp_assign(SWIGTYPE_p_p_void obj, SWIGTYPE_p_void value) {
    SDL2JNI.voidpp_assign(SWIGTYPE_p_p_void.getCPtr(obj), SWIGTYPE_p_void.getCPtr(value));
  }

  public static SWIGTYPE_p_void voidpp_value(SWIGTYPE_p_p_void obj) {
    long cPtr = SDL2JNI.voidpp_value(SWIGTYPE_p_p_void.getCPtr(obj));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_int new_intp() {
    long cPtr = SDL2JNI.new_intp();
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public static SWIGTYPE_p_int copy_intp(int value) {
    long cPtr = SDL2JNI.copy_intp(value);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public static void delete_intp(SWIGTYPE_p_int obj) {
    SDL2JNI.delete_intp(SWIGTYPE_p_int.getCPtr(obj));
  }

  public static void intp_assign(SWIGTYPE_p_int obj, int value) {
    SDL2JNI.intp_assign(SWIGTYPE_p_int.getCPtr(obj), value);
  }

  public static int intp_value(SWIGTYPE_p_int obj) {
    return SDL2JNI.intp_value(SWIGTYPE_p_int.getCPtr(obj));
  }

  public static SWIGTYPE_p_unsigned_char voidp_to_ucharp(SWIGTYPE_p_void x) {
    long cPtr = SDL2JNI.voidp_to_ucharp(SWIGTYPE_p_void.getCPtr(x));
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public static int SDL_Init(long flags) {
    return SDL2JNI.SDL_Init(flags);
  }

  public static int SDL_InitSubSystem(long flags) {
    return SDL2JNI.SDL_InitSubSystem(flags);
  }

  public static void SDL_QuitSubSystem(long flags) {
    SDL2JNI.SDL_QuitSubSystem(flags);
  }

  public static long SDL_WasInit(long flags) {
    return SDL2JNI.SDL_WasInit(flags);
  }

  public static void SDL_Quit() {
    SDL2JNI.SDL_Quit();
  }

  public static int SDL_GetNumVideoDrivers() {
    return SDL2JNI.SDL_GetNumVideoDrivers();
  }

  public static String SDL_GetVideoDriver(int index) {
    return SDL2JNI.SDL_GetVideoDriver(index);
  }

  public static int SDL_VideoInit(String driver_name) {
    return SDL2JNI.SDL_VideoInit(driver_name);
  }

  public static void SDL_VideoQuit() {
    SDL2JNI.SDL_VideoQuit();
  }

  public static String SDL_GetCurrentVideoDriver() {
    return SDL2JNI.SDL_GetCurrentVideoDriver();
  }

  public static int SDL_GetNumVideoDisplays() {
    return SDL2JNI.SDL_GetNumVideoDisplays();
  }

  public static String SDL_GetDisplayName(int displayIndex) {
    return SDL2JNI.SDL_GetDisplayName(displayIndex);
  }

  public static int SDL_GetDisplayBounds(int displayIndex, SWIGTYPE_p_SDL_Rect rect) {
    return SDL2JNI.SDL_GetDisplayBounds(displayIndex, SWIGTYPE_p_SDL_Rect.getCPtr(rect));
  }

  public static int SDL_GetDisplayDPI(int displayIndex, SWIGTYPE_p_float ddpi, SWIGTYPE_p_float hdpi, SWIGTYPE_p_float vdpi) {
    return SDL2JNI.SDL_GetDisplayDPI(displayIndex, SWIGTYPE_p_float.getCPtr(ddpi), SWIGTYPE_p_float.getCPtr(hdpi), SWIGTYPE_p_float.getCPtr(vdpi));
  }

  public static int SDL_GetDisplayUsableBounds(int displayIndex, SWIGTYPE_p_SDL_Rect rect) {
    return SDL2JNI.SDL_GetDisplayUsableBounds(displayIndex, SWIGTYPE_p_SDL_Rect.getCPtr(rect));
  }

  public static int SDL_GetNumDisplayModes(int displayIndex) {
    return SDL2JNI.SDL_GetNumDisplayModes(displayIndex);
  }

  public static int SDL_GetDisplayMode(int displayIndex, int modeIndex, SDL_DisplayMode mode) {
    return SDL2JNI.SDL_GetDisplayMode(displayIndex, modeIndex, SDL_DisplayMode.getCPtr(mode), mode);
  }

  public static int SDL_GetDesktopDisplayMode(int displayIndex, SDL_DisplayMode mode) {
    return SDL2JNI.SDL_GetDesktopDisplayMode(displayIndex, SDL_DisplayMode.getCPtr(mode), mode);
  }

  public static int SDL_GetCurrentDisplayMode(int displayIndex, SDL_DisplayMode mode) {
    return SDL2JNI.SDL_GetCurrentDisplayMode(displayIndex, SDL_DisplayMode.getCPtr(mode), mode);
  }

  public static SDL_DisplayMode SDL_GetClosestDisplayMode(int displayIndex, SDL_DisplayMode mode, SDL_DisplayMode closest) {
    long cPtr = SDL2JNI.SDL_GetClosestDisplayMode(displayIndex, SDL_DisplayMode.getCPtr(mode), mode, SDL_DisplayMode.getCPtr(closest), closest);
    return (cPtr == 0) ? null : new SDL_DisplayMode(cPtr, false);
  }

  public static int SDL_GetWindowDisplayIndex(SWIGTYPE_p_SDL_Window window) {
    return SDL2JNI.SDL_GetWindowDisplayIndex(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static int SDL_SetWindowDisplayMode(SWIGTYPE_p_SDL_Window window, SDL_DisplayMode mode) {
    return SDL2JNI.SDL_SetWindowDisplayMode(SWIGTYPE_p_SDL_Window.getCPtr(window), SDL_DisplayMode.getCPtr(mode), mode);
  }

  public static int SDL_GetWindowDisplayMode(SWIGTYPE_p_SDL_Window window, SDL_DisplayMode mode) {
    return SDL2JNI.SDL_GetWindowDisplayMode(SWIGTYPE_p_SDL_Window.getCPtr(window), SDL_DisplayMode.getCPtr(mode), mode);
  }

  public static long SDL_GetWindowPixelFormat(SWIGTYPE_p_SDL_Window window) {
    return SDL2JNI.SDL_GetWindowPixelFormat(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static SWIGTYPE_p_SDL_Window SDL_CreateWindow(String title, int x, int y, int w, int h, long flags) {
    long cPtr = SDL2JNI.SDL_CreateWindow(title, x, y, w, h, flags);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Window(cPtr, false);
  }

  public static SWIGTYPE_p_SDL_Window SDL_CreateWindowFrom(SWIGTYPE_p_void data) {
    long cPtr = SDL2JNI.SDL_CreateWindowFrom(SWIGTYPE_p_void.getCPtr(data));
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Window(cPtr, false);
  }

  public static long SDL_GetWindowID(SWIGTYPE_p_SDL_Window window) {
    return SDL2JNI.SDL_GetWindowID(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static SWIGTYPE_p_SDL_Window SDL_GetWindowFromID(long id) {
    long cPtr = SDL2JNI.SDL_GetWindowFromID(id);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Window(cPtr, false);
  }

  public static long SDL_GetWindowFlags(SWIGTYPE_p_SDL_Window window) {
    return SDL2JNI.SDL_GetWindowFlags(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_SetWindowTitle(SWIGTYPE_p_SDL_Window window, String title) {
    SDL2JNI.SDL_SetWindowTitle(SWIGTYPE_p_SDL_Window.getCPtr(window), title);
  }

  public static String SDL_GetWindowTitle(SWIGTYPE_p_SDL_Window window) {
    return SDL2JNI.SDL_GetWindowTitle(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_SetWindowIcon(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_SDL_Surface icon) {
    SDL2JNI.SDL_SetWindowIcon(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_SDL_Surface.getCPtr(icon));
  }

  public static SWIGTYPE_p_void SDL_SetWindowData(SWIGTYPE_p_SDL_Window window, String name, SWIGTYPE_p_void userdata) {
    long cPtr = SDL2JNI.SDL_SetWindowData(SWIGTYPE_p_SDL_Window.getCPtr(window), name, SWIGTYPE_p_void.getCPtr(userdata));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void SDL_GetWindowData(SWIGTYPE_p_SDL_Window window, String name) {
    long cPtr = SDL2JNI.SDL_GetWindowData(SWIGTYPE_p_SDL_Window.getCPtr(window), name);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void SDL_SetWindowPosition(SWIGTYPE_p_SDL_Window window, int x, int y) {
    SDL2JNI.SDL_SetWindowPosition(SWIGTYPE_p_SDL_Window.getCPtr(window), x, y);
  }

  public static void SDL_GetWindowPosition(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_int x, SWIGTYPE_p_int y) {
    SDL2JNI.SDL_GetWindowPosition(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_int.getCPtr(x), SWIGTYPE_p_int.getCPtr(y));
  }

  public static void SDL_SetWindowSize(SWIGTYPE_p_SDL_Window window, int w, int h) {
    SDL2JNI.SDL_SetWindowSize(SWIGTYPE_p_SDL_Window.getCPtr(window), w, h);
  }

  public static void SDL_GetWindowSize(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    SDL2JNI.SDL_GetWindowSize(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static int SDL_GetWindowBordersSize(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_int top, SWIGTYPE_p_int left, SWIGTYPE_p_int bottom, SWIGTYPE_p_int right) {
    return SDL2JNI.SDL_GetWindowBordersSize(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_int.getCPtr(top), SWIGTYPE_p_int.getCPtr(left), SWIGTYPE_p_int.getCPtr(bottom), SWIGTYPE_p_int.getCPtr(right));
  }

  public static void SDL_SetWindowMinimumSize(SWIGTYPE_p_SDL_Window window, int min_w, int min_h) {
    SDL2JNI.SDL_SetWindowMinimumSize(SWIGTYPE_p_SDL_Window.getCPtr(window), min_w, min_h);
  }

  public static void SDL_GetWindowMinimumSize(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    SDL2JNI.SDL_GetWindowMinimumSize(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static void SDL_SetWindowMaximumSize(SWIGTYPE_p_SDL_Window window, int max_w, int max_h) {
    SDL2JNI.SDL_SetWindowMaximumSize(SWIGTYPE_p_SDL_Window.getCPtr(window), max_w, max_h);
  }

  public static void SDL_GetWindowMaximumSize(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    SDL2JNI.SDL_GetWindowMaximumSize(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static void SDL_SetWindowBordered(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_SDL_bool bordered) {
    SDL2JNI.SDL_SetWindowBordered(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_SDL_bool.getCPtr(bordered));
  }

  public static void SDL_SetWindowResizable(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_SDL_bool resizable) {
    SDL2JNI.SDL_SetWindowResizable(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_SDL_bool.getCPtr(resizable));
  }

  public static void SDL_ShowWindow(SWIGTYPE_p_SDL_Window window) {
    SDL2JNI.SDL_ShowWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_HideWindow(SWIGTYPE_p_SDL_Window window) {
    SDL2JNI.SDL_HideWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_RaiseWindow(SWIGTYPE_p_SDL_Window window) {
    SDL2JNI.SDL_RaiseWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_MaximizeWindow(SWIGTYPE_p_SDL_Window window) {
    SDL2JNI.SDL_MaximizeWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_MinimizeWindow(SWIGTYPE_p_SDL_Window window) {
    SDL2JNI.SDL_MinimizeWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_RestoreWindow(SWIGTYPE_p_SDL_Window window) {
    SDL2JNI.SDL_RestoreWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static int SDL_SetWindowFullscreen(SWIGTYPE_p_SDL_Window window, long flags) {
    return SDL2JNI.SDL_SetWindowFullscreen(SWIGTYPE_p_SDL_Window.getCPtr(window), flags);
  }

  public static SWIGTYPE_p_SDL_Surface SDL_GetWindowSurface(SWIGTYPE_p_SDL_Window window) {
    long cPtr = SDL2JNI.SDL_GetWindowSurface(SWIGTYPE_p_SDL_Window.getCPtr(window));
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Surface(cPtr, false);
  }

  public static int SDL_UpdateWindowSurface(SWIGTYPE_p_SDL_Window window) {
    return SDL2JNI.SDL_UpdateWindowSurface(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static int SDL_UpdateWindowSurfaceRects(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_SDL_Rect rects, int numrects) {
    return SDL2JNI.SDL_UpdateWindowSurfaceRects(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_SDL_Rect.getCPtr(rects), numrects);
  }

  public static void SDL_SetWindowGrab(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_SDL_bool grabbed) {
    SDL2JNI.SDL_SetWindowGrab(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_SDL_bool.getCPtr(grabbed));
  }

  public static SWIGTYPE_p_SDL_bool SDL_GetWindowGrab(SWIGTYPE_p_SDL_Window window) {
    return new SWIGTYPE_p_SDL_bool(SDL2JNI.SDL_GetWindowGrab(SWIGTYPE_p_SDL_Window.getCPtr(window)), true);
  }

  public static SWIGTYPE_p_SDL_Window SDL_GetGrabbedWindow() {
    long cPtr = SDL2JNI.SDL_GetGrabbedWindow();
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Window(cPtr, false);
  }

  public static int SDL_SetWindowBrightness(SWIGTYPE_p_SDL_Window window, float brightness) {
    return SDL2JNI.SDL_SetWindowBrightness(SWIGTYPE_p_SDL_Window.getCPtr(window), brightness);
  }

  public static float SDL_GetWindowBrightness(SWIGTYPE_p_SDL_Window window) {
    return SDL2JNI.SDL_GetWindowBrightness(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static int SDL_SetWindowOpacity(SWIGTYPE_p_SDL_Window window, float opacity) {
    return SDL2JNI.SDL_SetWindowOpacity(SWIGTYPE_p_SDL_Window.getCPtr(window), opacity);
  }

  public static int SDL_GetWindowOpacity(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_float out_opacity) {
    return SDL2JNI.SDL_GetWindowOpacity(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_float.getCPtr(out_opacity));
  }

  public static int SDL_SetWindowModalFor(SWIGTYPE_p_SDL_Window modal_window, SWIGTYPE_p_SDL_Window parent_window) {
    return SDL2JNI.SDL_SetWindowModalFor(SWIGTYPE_p_SDL_Window.getCPtr(modal_window), SWIGTYPE_p_SDL_Window.getCPtr(parent_window));
  }

  public static int SDL_SetWindowInputFocus(SWIGTYPE_p_SDL_Window window) {
    return SDL2JNI.SDL_SetWindowInputFocus(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static int SDL_SetWindowGammaRamp(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_unsigned_short red, SWIGTYPE_p_unsigned_short green, SWIGTYPE_p_unsigned_short blue) {
    return SDL2JNI.SDL_SetWindowGammaRamp(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_unsigned_short.getCPtr(red), SWIGTYPE_p_unsigned_short.getCPtr(green), SWIGTYPE_p_unsigned_short.getCPtr(blue));
  }

  public static int SDL_GetWindowGammaRamp(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_unsigned_short red, SWIGTYPE_p_unsigned_short green, SWIGTYPE_p_unsigned_short blue) {
    return SDL2JNI.SDL_GetWindowGammaRamp(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_unsigned_short.getCPtr(red), SWIGTYPE_p_unsigned_short.getCPtr(green), SWIGTYPE_p_unsigned_short.getCPtr(blue));
  }

  public static int SDL_SetWindowHitTest(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_f_p_struct_SDL_Window_p_q_const__SDL_Point_p_void__SDL_HitTestResult callback, SWIGTYPE_p_void callback_data) {
    return SDL2JNI.SDL_SetWindowHitTest(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_f_p_struct_SDL_Window_p_q_const__SDL_Point_p_void__SDL_HitTestResult.getCPtr(callback), SWIGTYPE_p_void.getCPtr(callback_data));
  }

  public static void SDL_DestroyWindow(SWIGTYPE_p_SDL_Window window) {
    SDL2JNI.SDL_DestroyWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static SWIGTYPE_p_SDL_bool SDL_IsScreenSaverEnabled() {
    return new SWIGTYPE_p_SDL_bool(SDL2JNI.SDL_IsScreenSaverEnabled(), true);
  }

  public static void SDL_EnableScreenSaver() {
    SDL2JNI.SDL_EnableScreenSaver();
  }

  public static void SDL_DisableScreenSaver() {
    SDL2JNI.SDL_DisableScreenSaver();
  }

  public static int SDL_GL_LoadLibrary(String path) {
    return SDL2JNI.SDL_GL_LoadLibrary(path);
  }

  public static SWIGTYPE_p_void SDL_GL_GetProcAddress(String proc) {
    long cPtr = SDL2JNI.SDL_GL_GetProcAddress(proc);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void SDL_GL_UnloadLibrary() {
    SDL2JNI.SDL_GL_UnloadLibrary();
  }

  public static SWIGTYPE_p_SDL_bool SDL_GL_ExtensionSupported(String extension) {
    return new SWIGTYPE_p_SDL_bool(SDL2JNI.SDL_GL_ExtensionSupported(extension), true);
  }

  public static void SDL_GL_ResetAttributes() {
    SDL2JNI.SDL_GL_ResetAttributes();
  }

  public static int SDL_GL_SetAttribute(SDL_GLattr attr, int value) {
    return SDL2JNI.SDL_GL_SetAttribute(attr.swigValue(), value);
  }

  public static int SDL_GL_GetAttribute(SDL_GLattr attr, SWIGTYPE_p_int value) {
    return SDL2JNI.SDL_GL_GetAttribute(attr.swigValue(), SWIGTYPE_p_int.getCPtr(value));
  }

  public static SWIGTYPE_p_void SDL_GL_CreateContext(SWIGTYPE_p_SDL_Window window) {
    long cPtr = SDL2JNI.SDL_GL_CreateContext(SWIGTYPE_p_SDL_Window.getCPtr(window));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int SDL_GL_MakeCurrent(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_void context) {
    return SDL2JNI.SDL_GL_MakeCurrent(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_void.getCPtr(context));
  }

  public static SWIGTYPE_p_SDL_Window SDL_GL_GetCurrentWindow() {
    long cPtr = SDL2JNI.SDL_GL_GetCurrentWindow();
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Window(cPtr, false);
  }

  public static SWIGTYPE_p_void SDL_GL_GetCurrentContext() {
    long cPtr = SDL2JNI.SDL_GL_GetCurrentContext();
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void SDL_GL_GetDrawableSize(SWIGTYPE_p_SDL_Window window, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    SDL2JNI.SDL_GL_GetDrawableSize(SWIGTYPE_p_SDL_Window.getCPtr(window), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static int SDL_GL_SetSwapInterval(int interval) {
    return SDL2JNI.SDL_GL_SetSwapInterval(interval);
  }

  public static int SDL_GL_GetSwapInterval() {
    return SDL2JNI.SDL_GL_GetSwapInterval();
  }

  public static void SDL_GL_SwapWindow(SWIGTYPE_p_SDL_Window window) {
    SDL2JNI.SDL_GL_SwapWindow(SWIGTYPE_p_SDL_Window.getCPtr(window));
  }

  public static void SDL_GL_DeleteContext(SWIGTYPE_p_void context) {
    SDL2JNI.SDL_GL_DeleteContext(SWIGTYPE_p_void.getCPtr(context));
  }

  public static void SDL_PumpEvents() {
    SDL2JNI.SDL_PumpEvents();
  }

  public static int SDL_PeepEvents(SDL_Event events, int numevents, SDL_eventaction action, long minType, long maxType) {
    return SDL2JNI.SDL_PeepEvents(SDL_Event.getCPtr(events), events, numevents, action.swigValue(), minType, maxType);
  }

  public static SWIGTYPE_p_SDL_bool SDL_HasEvent(long type) {
    return new SWIGTYPE_p_SDL_bool(SDL2JNI.SDL_HasEvent(type), true);
  }

  public static SWIGTYPE_p_SDL_bool SDL_HasEvents(long minType, long maxType) {
    return new SWIGTYPE_p_SDL_bool(SDL2JNI.SDL_HasEvents(minType, maxType), true);
  }

  public static void SDL_FlushEvent(long type) {
    SDL2JNI.SDL_FlushEvent(type);
  }

  public static void SDL_FlushEvents(long minType, long maxType) {
    SDL2JNI.SDL_FlushEvents(minType, maxType);
  }

  public static int SDL_PollEvent(SDL_Event event) {
    return SDL2JNI.SDL_PollEvent(SDL_Event.getCPtr(event), event);
  }

  public static int SDL_WaitEvent(SDL_Event event) {
    return SDL2JNI.SDL_WaitEvent(SDL_Event.getCPtr(event), event);
  }

  public static int SDL_WaitEventTimeout(SDL_Event event, int timeout) {
    return SDL2JNI.SDL_WaitEventTimeout(SDL_Event.getCPtr(event), event, timeout);
  }

  public static int SDL_PushEvent(SDL_Event event) {
    return SDL2JNI.SDL_PushEvent(SDL_Event.getCPtr(event), event);
  }

  public static void SDL_SetEventFilter(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int filter, SWIGTYPE_p_void userdata) {
    SDL2JNI.SDL_SetEventFilter(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int.getCPtr(filter), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static SWIGTYPE_p_SDL_bool SDL_GetEventFilter(SWIGTYPE_p_p_f_p_void_p_union_SDL_Event__int filter, SWIGTYPE_p_p_void userdata) {
    return new SWIGTYPE_p_SDL_bool(SDL2JNI.SDL_GetEventFilter(SWIGTYPE_p_p_f_p_void_p_union_SDL_Event__int.getCPtr(filter), SWIGTYPE_p_p_void.getCPtr(userdata)), true);
  }

  public static void SDL_AddEventWatch(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int filter, SWIGTYPE_p_void userdata) {
    SDL2JNI.SDL_AddEventWatch(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int.getCPtr(filter), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static void SDL_DelEventWatch(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int filter, SWIGTYPE_p_void userdata) {
    SDL2JNI.SDL_DelEventWatch(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int.getCPtr(filter), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static void SDL_FilterEvents(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int filter, SWIGTYPE_p_void userdata) {
    SDL2JNI.SDL_FilterEvents(SWIGTYPE_p_f_p_void_p_union_SDL_Event__int.getCPtr(filter), SWIGTYPE_p_void.getCPtr(userdata));
  }

  public static short SDL_EventState(long type, int state) {
    return SDL2JNI.SDL_EventState(type, state);
  }

  public static long SDL_RegisterEvents(int numevents) {
    return SDL2JNI.SDL_RegisterEvents(numevents);
  }

  public static int SDL_GetNumRenderDrivers() {
    return SDL2JNI.SDL_GetNumRenderDrivers();
  }

  public static int SDL_GetRenderDriverInfo(int index, SDL_RendererInfo info) {
    return SDL2JNI.SDL_GetRenderDriverInfo(index, SDL_RendererInfo.getCPtr(info), info);
  }

  public static int SDL_CreateWindowAndRenderer(int width, int height, long window_flags, SWIGTYPE_p_p_SDL_Window window, SWIGTYPE_p_p_SDL_Renderer renderer) {
    return SDL2JNI.SDL_CreateWindowAndRenderer(width, height, window_flags, SWIGTYPE_p_p_SDL_Window.getCPtr(window), SWIGTYPE_p_p_SDL_Renderer.getCPtr(renderer));
  }

  public static SWIGTYPE_p_SDL_Renderer SDL_CreateRenderer(SWIGTYPE_p_SDL_Window window, int index, long flags) {
    long cPtr = SDL2JNI.SDL_CreateRenderer(SWIGTYPE_p_SDL_Window.getCPtr(window), index, flags);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Renderer(cPtr, false);
  }

  public static SWIGTYPE_p_SDL_Renderer SDL_CreateSoftwareRenderer(SWIGTYPE_p_SDL_Surface surface) {
    long cPtr = SDL2JNI.SDL_CreateSoftwareRenderer(SWIGTYPE_p_SDL_Surface.getCPtr(surface));
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Renderer(cPtr, false);
  }

  public static SWIGTYPE_p_SDL_Renderer SDL_GetRenderer(SWIGTYPE_p_SDL_Window window) {
    long cPtr = SDL2JNI.SDL_GetRenderer(SWIGTYPE_p_SDL_Window.getCPtr(window));
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Renderer(cPtr, false);
  }

  public static int SDL_GetRendererInfo(SWIGTYPE_p_SDL_Renderer renderer, SDL_RendererInfo info) {
    return SDL2JNI.SDL_GetRendererInfo(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SDL_RendererInfo.getCPtr(info), info);
  }

  public static int SDL_GetRendererOutputSize(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    return SDL2JNI.SDL_GetRendererOutputSize(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static SWIGTYPE_p_SDL_Texture SDL_CreateTexture(SWIGTYPE_p_SDL_Renderer renderer, long format, int access, int w, int h) {
    long cPtr = SDL2JNI.SDL_CreateTexture(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), format, access, w, h);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Texture(cPtr, false);
  }

  public static SWIGTYPE_p_SDL_Texture SDL_CreateTextureFromSurface(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Surface surface) {
    long cPtr = SDL2JNI.SDL_CreateTextureFromSurface(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Surface.getCPtr(surface));
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Texture(cPtr, false);
  }

  public static int SDL_QueryTexture(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_unsigned_int format, SWIGTYPE_p_int access, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    return SDL2JNI.SDL_QueryTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_unsigned_int.getCPtr(format), SWIGTYPE_p_int.getCPtr(access), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static int SDL_SetTextureColorMod(SWIGTYPE_p_SDL_Texture texture, short r, short g, short b) {
    return SDL2JNI.SDL_SetTextureColorMod(SWIGTYPE_p_SDL_Texture.getCPtr(texture), r, g, b);
  }

  public static int SDL_GetTextureColorMod(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_unsigned_char r, SWIGTYPE_p_unsigned_char g, SWIGTYPE_p_unsigned_char b) {
    return SDL2JNI.SDL_GetTextureColorMod(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_unsigned_char.getCPtr(r), SWIGTYPE_p_unsigned_char.getCPtr(g), SWIGTYPE_p_unsigned_char.getCPtr(b));
  }

  public static int SDL_SetTextureAlphaMod(SWIGTYPE_p_SDL_Texture texture, short alpha) {
    return SDL2JNI.SDL_SetTextureAlphaMod(SWIGTYPE_p_SDL_Texture.getCPtr(texture), alpha);
  }

  public static int SDL_GetTextureAlphaMod(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_unsigned_char alpha) {
    return SDL2JNI.SDL_GetTextureAlphaMod(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_unsigned_char.getCPtr(alpha));
  }

  public static int SDL_SetTextureBlendMode(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_SDL_BlendMode blendMode) {
    return SDL2JNI.SDL_SetTextureBlendMode(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_SDL_BlendMode.getCPtr(blendMode));
  }

  public static int SDL_GetTextureBlendMode(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_SDL_BlendMode blendMode) {
    return SDL2JNI.SDL_GetTextureBlendMode(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_SDL_BlendMode.getCPtr(blendMode));
  }

  public static int SDL_UpdateTexture(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_SDL_Rect rect, SWIGTYPE_p_void pixels, int pitch) {
    return SDL2JNI.SDL_UpdateTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_SDL_Rect.getCPtr(rect), SWIGTYPE_p_void.getCPtr(pixels), pitch);
  }

  public static int SDL_UpdateYUVTexture(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_SDL_Rect rect, SWIGTYPE_p_unsigned_char Yplane, int Ypitch, SWIGTYPE_p_unsigned_char Uplane, int Upitch, SWIGTYPE_p_unsigned_char Vplane, int Vpitch) {
    return SDL2JNI.SDL_UpdateYUVTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_SDL_Rect.getCPtr(rect), SWIGTYPE_p_unsigned_char.getCPtr(Yplane), Ypitch, SWIGTYPE_p_unsigned_char.getCPtr(Uplane), Upitch, SWIGTYPE_p_unsigned_char.getCPtr(Vplane), Vpitch);
  }

  public static int SDL_LockTexture(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_SDL_Rect rect, SWIGTYPE_p_p_void pixels, SWIGTYPE_p_int pitch) {
    return SDL2JNI.SDL_LockTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_SDL_Rect.getCPtr(rect), SWIGTYPE_p_p_void.getCPtr(pixels), SWIGTYPE_p_int.getCPtr(pitch));
  }

  public static void SDL_UnlockTexture(SWIGTYPE_p_SDL_Texture texture) {
    SDL2JNI.SDL_UnlockTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture));
  }

  public static SWIGTYPE_p_SDL_bool SDL_RenderTargetSupported(SWIGTYPE_p_SDL_Renderer renderer) {
    return new SWIGTYPE_p_SDL_bool(SDL2JNI.SDL_RenderTargetSupported(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer)), true);
  }

  public static int SDL_SetRenderTarget(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Texture texture) {
    return SDL2JNI.SDL_SetRenderTarget(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Texture.getCPtr(texture));
  }

  public static SWIGTYPE_p_SDL_Texture SDL_GetRenderTarget(SWIGTYPE_p_SDL_Renderer renderer) {
    long cPtr = SDL2JNI.SDL_GetRenderTarget(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer));
    return (cPtr == 0) ? null : new SWIGTYPE_p_SDL_Texture(cPtr, false);
  }

  public static int SDL_RenderSetLogicalSize(SWIGTYPE_p_SDL_Renderer renderer, int w, int h) {
    return SDL2JNI.SDL_RenderSetLogicalSize(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), w, h);
  }

  public static void SDL_RenderGetLogicalSize(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_int w, SWIGTYPE_p_int h) {
    SDL2JNI.SDL_RenderGetLogicalSize(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_int.getCPtr(w), SWIGTYPE_p_int.getCPtr(h));
  }

  public static int SDL_RenderSetIntegerScale(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_bool enable) {
    return SDL2JNI.SDL_RenderSetIntegerScale(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_bool.getCPtr(enable));
  }

  public static SWIGTYPE_p_SDL_bool SDL_RenderGetIntegerScale(SWIGTYPE_p_SDL_Renderer renderer) {
    return new SWIGTYPE_p_SDL_bool(SDL2JNI.SDL_RenderGetIntegerScale(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer)), true);
  }

  public static int SDL_RenderSetViewport(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Rect rect) {
    return SDL2JNI.SDL_RenderSetViewport(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Rect.getCPtr(rect));
  }

  public static void SDL_RenderGetViewport(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Rect rect) {
    SDL2JNI.SDL_RenderGetViewport(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Rect.getCPtr(rect));
  }

  public static int SDL_RenderSetClipRect(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Rect rect) {
    return SDL2JNI.SDL_RenderSetClipRect(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Rect.getCPtr(rect));
  }

  public static void SDL_RenderGetClipRect(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Rect rect) {
    SDL2JNI.SDL_RenderGetClipRect(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Rect.getCPtr(rect));
  }

  public static SWIGTYPE_p_SDL_bool SDL_RenderIsClipEnabled(SWIGTYPE_p_SDL_Renderer renderer) {
    return new SWIGTYPE_p_SDL_bool(SDL2JNI.SDL_RenderIsClipEnabled(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer)), true);
  }

  public static int SDL_RenderSetScale(SWIGTYPE_p_SDL_Renderer renderer, float scaleX, float scaleY) {
    return SDL2JNI.SDL_RenderSetScale(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), scaleX, scaleY);
  }

  public static void SDL_RenderGetScale(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_float scaleX, SWIGTYPE_p_float scaleY) {
    SDL2JNI.SDL_RenderGetScale(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_float.getCPtr(scaleX), SWIGTYPE_p_float.getCPtr(scaleY));
  }

  public static int SDL_SetRenderDrawColor(SWIGTYPE_p_SDL_Renderer renderer, short r, short g, short b, short a) {
    return SDL2JNI.SDL_SetRenderDrawColor(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), r, g, b, a);
  }

  public static int SDL_GetRenderDrawColor(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_unsigned_char r, SWIGTYPE_p_unsigned_char g, SWIGTYPE_p_unsigned_char b, SWIGTYPE_p_unsigned_char a) {
    return SDL2JNI.SDL_GetRenderDrawColor(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_unsigned_char.getCPtr(r), SWIGTYPE_p_unsigned_char.getCPtr(g), SWIGTYPE_p_unsigned_char.getCPtr(b), SWIGTYPE_p_unsigned_char.getCPtr(a));
  }

  public static int SDL_SetRenderDrawBlendMode(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_BlendMode blendMode) {
    return SDL2JNI.SDL_SetRenderDrawBlendMode(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_BlendMode.getCPtr(blendMode));
  }

  public static int SDL_GetRenderDrawBlendMode(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_BlendMode blendMode) {
    return SDL2JNI.SDL_GetRenderDrawBlendMode(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_BlendMode.getCPtr(blendMode));
  }

  public static int SDL_RenderClear(SWIGTYPE_p_SDL_Renderer renderer) {
    return SDL2JNI.SDL_RenderClear(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer));
  }

  public static int SDL_RenderDrawPoint(SWIGTYPE_p_SDL_Renderer renderer, int x, int y) {
    return SDL2JNI.SDL_RenderDrawPoint(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), x, y);
  }

  public static int SDL_RenderDrawPoints(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Point points, int count) {
    return SDL2JNI.SDL_RenderDrawPoints(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Point.getCPtr(points), count);
  }

  public static int SDL_RenderDrawLine(SWIGTYPE_p_SDL_Renderer renderer, int x1, int y1, int x2, int y2) {
    return SDL2JNI.SDL_RenderDrawLine(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), x1, y1, x2, y2);
  }

  public static int SDL_RenderDrawLines(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Point points, int count) {
    return SDL2JNI.SDL_RenderDrawLines(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Point.getCPtr(points), count);
  }

  public static int SDL_RenderDrawRect(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Rect rect) {
    return SDL2JNI.SDL_RenderDrawRect(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Rect.getCPtr(rect));
  }

  public static int SDL_RenderDrawRects(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Rect rects, int count) {
    return SDL2JNI.SDL_RenderDrawRects(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Rect.getCPtr(rects), count);
  }

  public static int SDL_RenderFillRect(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Rect rect) {
    return SDL2JNI.SDL_RenderFillRect(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Rect.getCPtr(rect));
  }

  public static int SDL_RenderFillRects(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Rect rects, int count) {
    return SDL2JNI.SDL_RenderFillRects(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Rect.getCPtr(rects), count);
  }

  public static int SDL_RenderCopy(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_SDL_Rect srcrect, SWIGTYPE_p_SDL_Rect dstrect) {
    return SDL2JNI.SDL_RenderCopy(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_SDL_Rect.getCPtr(srcrect), SWIGTYPE_p_SDL_Rect.getCPtr(dstrect));
  }

  public static int SDL_RenderCopyEx(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_SDL_Rect srcrect, SWIGTYPE_p_SDL_Rect dstrect, double angle, SWIGTYPE_p_SDL_Point center, SDL_RendererFlip flip) {
    return SDL2JNI.SDL_RenderCopyEx(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_SDL_Rect.getCPtr(srcrect), SWIGTYPE_p_SDL_Rect.getCPtr(dstrect), angle, SWIGTYPE_p_SDL_Point.getCPtr(center), flip.swigValue());
  }

  public static int SDL_RenderReadPixels(SWIGTYPE_p_SDL_Renderer renderer, SWIGTYPE_p_SDL_Rect rect, long format, SWIGTYPE_p_void pixels, int pitch) {
    return SDL2JNI.SDL_RenderReadPixels(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer), SWIGTYPE_p_SDL_Rect.getCPtr(rect), format, SWIGTYPE_p_void.getCPtr(pixels), pitch);
  }

  public static void SDL_RenderPresent(SWIGTYPE_p_SDL_Renderer renderer) {
    SDL2JNI.SDL_RenderPresent(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer));
  }

  public static void SDL_DestroyTexture(SWIGTYPE_p_SDL_Texture texture) {
    SDL2JNI.SDL_DestroyTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture));
  }

  public static void SDL_DestroyRenderer(SWIGTYPE_p_SDL_Renderer renderer) {
    SDL2JNI.SDL_DestroyRenderer(SWIGTYPE_p_SDL_Renderer.getCPtr(renderer));
  }

  public static int SDL_GL_BindTexture(SWIGTYPE_p_SDL_Texture texture, SWIGTYPE_p_float texw, SWIGTYPE_p_float texh) {
    return SDL2JNI.SDL_GL_BindTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture), SWIGTYPE_p_float.getCPtr(texw), SWIGTYPE_p_float.getCPtr(texh));
  }

  public static int SDL_GL_UnbindTexture(SWIGTYPE_p_SDL_Texture texture) {
    return SDL2JNI.SDL_GL_UnbindTexture(SWIGTYPE_p_SDL_Texture.getCPtr(texture));
  }

  public static String SDL_GetPixelFormatName(long format) {
    return SDL2JNI.SDL_GetPixelFormatName(format);
  }

  public static SWIGTYPE_p_SDL_bool SDL_PixelFormatEnumToMasks(long format, SWIGTYPE_p_int bpp, SWIGTYPE_p_unsigned_int Rmask, SWIGTYPE_p_unsigned_int Gmask, SWIGTYPE_p_unsigned_int Bmask, SWIGTYPE_p_unsigned_int Amask) {
    return new SWIGTYPE_p_SDL_bool(SDL2JNI.SDL_PixelFormatEnumToMasks(format, SWIGTYPE_p_int.getCPtr(bpp), SWIGTYPE_p_unsigned_int.getCPtr(Rmask), SWIGTYPE_p_unsigned_int.getCPtr(Gmask), SWIGTYPE_p_unsigned_int.getCPtr(Bmask), SWIGTYPE_p_unsigned_int.getCPtr(Amask)), true);
  }

  public static long SDL_MasksToPixelFormatEnum(int bpp, long Rmask, long Gmask, long Bmask, long Amask) {
    return SDL2JNI.SDL_MasksToPixelFormatEnum(bpp, Rmask, Gmask, Bmask, Amask);
  }

  public static SDL_PixelFormat SDL_AllocFormat(long pixel_format) {
    long cPtr = SDL2JNI.SDL_AllocFormat(pixel_format);
    return (cPtr == 0) ? null : new SDL_PixelFormat(cPtr, false);
  }

  public static void SDL_FreeFormat(SDL_PixelFormat format) {
    SDL2JNI.SDL_FreeFormat(SDL_PixelFormat.getCPtr(format), format);
  }

  public static SDL_Palette SDL_AllocPalette(int ncolors) {
    long cPtr = SDL2JNI.SDL_AllocPalette(ncolors);
    return (cPtr == 0) ? null : new SDL_Palette(cPtr, false);
  }

  public static int SDL_SetPixelFormatPalette(SDL_PixelFormat format, SDL_Palette palette) {
    return SDL2JNI.SDL_SetPixelFormatPalette(SDL_PixelFormat.getCPtr(format), format, SDL_Palette.getCPtr(palette), palette);
  }

  public static int SDL_SetPaletteColors(SDL_Palette palette, SDL_Color colors, int firstcolor, int ncolors) {
    return SDL2JNI.SDL_SetPaletteColors(SDL_Palette.getCPtr(palette), palette, SDL_Color.getCPtr(colors), colors, firstcolor, ncolors);
  }

  public static void SDL_FreePalette(SDL_Palette palette) {
    SDL2JNI.SDL_FreePalette(SDL_Palette.getCPtr(palette), palette);
  }

  public static long SDL_MapRGB(SDL_PixelFormat format, short r, short g, short b) {
    return SDL2JNI.SDL_MapRGB(SDL_PixelFormat.getCPtr(format), format, r, g, b);
  }

  public static long SDL_MapRGBA(SDL_PixelFormat format, short r, short g, short b, short a) {
    return SDL2JNI.SDL_MapRGBA(SDL_PixelFormat.getCPtr(format), format, r, g, b, a);
  }

  public static void SDL_GetRGB(long pixel, SDL_PixelFormat format, SWIGTYPE_p_unsigned_char r, SWIGTYPE_p_unsigned_char g, SWIGTYPE_p_unsigned_char b) {
    SDL2JNI.SDL_GetRGB(pixel, SDL_PixelFormat.getCPtr(format), format, SWIGTYPE_p_unsigned_char.getCPtr(r), SWIGTYPE_p_unsigned_char.getCPtr(g), SWIGTYPE_p_unsigned_char.getCPtr(b));
  }

  public static void SDL_GetRGBA(long pixel, SDL_PixelFormat format, SWIGTYPE_p_unsigned_char r, SWIGTYPE_p_unsigned_char g, SWIGTYPE_p_unsigned_char b, SWIGTYPE_p_unsigned_char a) {
    SDL2JNI.SDL_GetRGBA(pixel, SDL_PixelFormat.getCPtr(format), format, SWIGTYPE_p_unsigned_char.getCPtr(r), SWIGTYPE_p_unsigned_char.getCPtr(g), SWIGTYPE_p_unsigned_char.getCPtr(b), SWIGTYPE_p_unsigned_char.getCPtr(a));
  }

  public static void SDL_CalculateGammaRamp(float gamma, SWIGTYPE_p_unsigned_short ramp) {
    SDL2JNI.SDL_CalculateGammaRamp(gamma, SWIGTYPE_p_unsigned_short.getCPtr(ramp));
  }

}
