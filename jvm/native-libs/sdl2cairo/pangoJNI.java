/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sdl2cairo;

public class pangoJNI {
  public final static native String G_GNUC_FUNCTION_get();
  public final static native String G_GNUC_PRETTY_FUNCTION_get();
  public final static native int G_ANALYZER_ANALYZING_get();
  public final static native String G_STRLOC_get();
  public final static native int FALSE_get();
  public final static native int TRUE_get();
  public final static native String G_GINT16_MODIFIER_get();
  public final static native String G_GINT16_FORMAT_get();
  public final static native String G_GUINT16_FORMAT_get();
  public final static native String G_GINT32_MODIFIER_get();
  public final static native String G_GINT32_FORMAT_get();
  public final static native String G_GUINT32_FORMAT_get();
  public final static native int G_HAVE_GINT64_get();
  public final static native String G_GINT64_MODIFIER_get();
  public final static native String G_GINT64_FORMAT_get();
  public final static native String G_GUINT64_FORMAT_get();
  public final static native int GLIB_SIZEOF_VOID_P_get();
  public final static native int GLIB_SIZEOF_LONG_get();
  public final static native int GLIB_SIZEOF_SIZE_T_get();
  public final static native int GLIB_SIZEOF_SSIZE_T_get();
  public final static native String G_GSIZE_MODIFIER_get();
  public final static native String G_GSSIZE_MODIFIER_get();
  public final static native String G_GSIZE_FORMAT_get();
  public final static native String G_GSSIZE_FORMAT_get();
  public final static native String G_GOFFSET_MODIFIER_get();
  public final static native String G_GOFFSET_FORMAT_get();
  public final static native String G_POLLFD_FORMAT_get();
  public final static native String G_GINTPTR_MODIFIER_get();
  public final static native String G_GINTPTR_FORMAT_get();
  public final static native String G_GUINTPTR_FORMAT_get();
  public final static native int GLIB_MAJOR_VERSION_get();
  public final static native int GLIB_MINOR_VERSION_get();
  public final static native int GLIB_MICRO_VERSION_get();
  public final static native int G_HAVE_ISO_VARARGS_get();
  public final static native int G_HAVE_GNUC_VARARGS_get();
  public final static native int G_HAVE_GROWING_STACK_get();
  public final static native String G_MODULE_SUFFIX_get();
  public final static native String G_PID_FORMAT_get();
  public final static native int GLIB_SYSDEF_AF_UNIX_get();
  public final static native int GLIB_SYSDEF_AF_INET_get();
  public final static native int GLIB_SYSDEF_AF_INET6_get();
  public final static native int GLIB_SYSDEF_MSG_OOB_get();
  public final static native int GLIB_SYSDEF_MSG_PEEK_get();
  public final static native int GLIB_SYSDEF_MSG_DONTROUTE_get();
  public final static native int GLIB_VERSION_2_26_get();
  public final static native int GLIB_VERSION_2_28_get();
  public final static native int GLIB_VERSION_2_30_get();
  public final static native int GLIB_VERSION_2_32_get();
  public final static native int GLIB_VERSION_2_34_get();
  public final static native int GLIB_VERSION_2_36_get();
  public final static native int GLIB_VERSION_2_38_get();
  public final static native int GLIB_VERSION_2_40_get();
  public final static native int GLIB_VERSION_2_42_get();
  public final static native int GLIB_VERSION_2_44_get();
  public final static native int GLIB_VERSION_2_46_get();
  public final static native int GLIB_VERSION_2_48_get();
  public final static native int GLIB_VERSION_2_50_get();
  public final static native int GLIB_VERSION_2_52_get();
  public final static native int GLIB_VERSION_CUR_STABLE_get();
  public final static native int GLIB_VERSION_PREV_STABLE_get();
  public final static native int GLIB_VERSION_MIN_REQUIRED_get();
  public final static native int GLIB_VERSION_MAX_ALLOWED_get();
  public final static native long G_MAXINT64_get();
  public final static native java.math.BigInteger G_MAXUINT64_get();
  public final static native double G_E_get();
  public final static native double G_LN2_get();
  public final static native double G_LN10_get();
  public final static native double G_PI_get();
  public final static native double G_PI_2_get();
  public final static native double G_PI_4_get();
  public final static native double G_SQRT2_get();
  public final static native int G_LITTLE_ENDIAN_get();
  public final static native int G_BIG_ENDIAN_get();
  public final static native int G_PDP_ENDIAN_get();
  public final static native int _GLIB_CHECKED_ADD_U32(long jarg1, long jarg2, long jarg3);
  public final static native int _GLIB_CHECKED_MUL_U32(long jarg1, long jarg2, long jarg3);
  public final static native int _GLIB_CHECKED_ADD_U64(long jarg1, java.math.BigInteger jarg2, java.math.BigInteger jarg3);
  public final static native int _GLIB_CHECKED_MUL_U64(long jarg1, java.math.BigInteger jarg2, java.math.BigInteger jarg3);
  public final static native int G_IEEE754_FLOAT_BIAS_get();
  public final static native int G_IEEE754_DOUBLE_BIAS_get();
  public final static native double G_LOG_2_BASE_10_get();
  public final static native void _GFloatIEEE754_v_float_set(long jarg1, _GFloatIEEE754 jarg1_, float jarg2);
  public final static native float _GFloatIEEE754_v_float_get(long jarg1, _GFloatIEEE754 jarg1_);
  public final static native long _GFloatIEEE754_mpn_get(long jarg1, _GFloatIEEE754 jarg1_);
  public final static native long new__GFloatIEEE754();
  public final static native void delete__GFloatIEEE754(long jarg1);
  public final static native void _GFloatIEEE754_mpn_mantissa_set(long jarg1, _GFloatIEEE754_mpn jarg1_, long jarg2);
  public final static native long _GFloatIEEE754_mpn_mantissa_get(long jarg1, _GFloatIEEE754_mpn jarg1_);
  public final static native void _GFloatIEEE754_mpn_biased_exponent_set(long jarg1, _GFloatIEEE754_mpn jarg1_, long jarg2);
  public final static native long _GFloatIEEE754_mpn_biased_exponent_get(long jarg1, _GFloatIEEE754_mpn jarg1_);
  public final static native void _GFloatIEEE754_mpn_sign_set(long jarg1, _GFloatIEEE754_mpn jarg1_, long jarg2);
  public final static native long _GFloatIEEE754_mpn_sign_get(long jarg1, _GFloatIEEE754_mpn jarg1_);
  public final static native long new__GFloatIEEE754_mpn();
  public final static native void delete__GFloatIEEE754_mpn(long jarg1);
  public final static native void _GDoubleIEEE754_v_double_set(long jarg1, _GDoubleIEEE754 jarg1_, double jarg2);
  public final static native double _GDoubleIEEE754_v_double_get(long jarg1, _GDoubleIEEE754 jarg1_);
  public final static native long _GDoubleIEEE754_mpn_get(long jarg1, _GDoubleIEEE754 jarg1_);
  public final static native long new__GDoubleIEEE754();
  public final static native void delete__GDoubleIEEE754(long jarg1);
  public final static native void _GDoubleIEEE754_mpn_mantissa_low_set(long jarg1, _GDoubleIEEE754_mpn jarg1_, long jarg2);
  public final static native long _GDoubleIEEE754_mpn_mantissa_low_get(long jarg1, _GDoubleIEEE754_mpn jarg1_);
  public final static native void _GDoubleIEEE754_mpn_mantissa_high_set(long jarg1, _GDoubleIEEE754_mpn jarg1_, long jarg2);
  public final static native long _GDoubleIEEE754_mpn_mantissa_high_get(long jarg1, _GDoubleIEEE754_mpn jarg1_);
  public final static native void _GDoubleIEEE754_mpn_biased_exponent_set(long jarg1, _GDoubleIEEE754_mpn jarg1_, long jarg2);
  public final static native long _GDoubleIEEE754_mpn_biased_exponent_get(long jarg1, _GDoubleIEEE754_mpn jarg1_);
  public final static native void _GDoubleIEEE754_mpn_sign_set(long jarg1, _GDoubleIEEE754_mpn jarg1_, long jarg2);
  public final static native long _GDoubleIEEE754_mpn_sign_get(long jarg1, _GDoubleIEEE754_mpn jarg1_);
  public final static native long new__GDoubleIEEE754_mpn();
  public final static native void delete__GDoubleIEEE754_mpn(long jarg1);
  public final static native void _GTimeVal_tv_sec_set(long jarg1, _GTimeVal jarg1_, int jarg2);
  public final static native int _GTimeVal_tv_sec_get(long jarg1, _GTimeVal jarg1_);
  public final static native void _GTimeVal_tv_usec_set(long jarg1, _GTimeVal jarg1_, int jarg2);
  public final static native int _GTimeVal_tv_usec_get(long jarg1, _GTimeVal jarg1_);
  public final static native long new__GTimeVal();
  public final static native void delete__GTimeVal(long jarg1);
  public final static native void _GArray_data_set(long jarg1, _GArray jarg1_, String jarg2);
  public final static native String _GArray_data_get(long jarg1, _GArray jarg1_);
  public final static native void _GArray_len_set(long jarg1, _GArray jarg1_, long jarg2);
  public final static native long _GArray_len_get(long jarg1, _GArray jarg1_);
  public final static native long new__GArray();
  public final static native void delete__GArray(long jarg1);
  public final static native void _GByteArray_data_set(long jarg1, _GByteArray jarg1_, long jarg2);
  public final static native long _GByteArray_data_get(long jarg1, _GByteArray jarg1_);
  public final static native void _GByteArray_len_set(long jarg1, _GByteArray jarg1_, long jarg2);
  public final static native long _GByteArray_len_get(long jarg1, _GByteArray jarg1_);
  public final static native long new__GByteArray();
  public final static native void delete__GByteArray(long jarg1);
  public final static native void _GPtrArray_pdata_set(long jarg1, _GPtrArray jarg1_, long jarg2);
  public final static native long _GPtrArray_pdata_get(long jarg1, _GPtrArray jarg1_);
  public final static native void _GPtrArray_len_set(long jarg1, _GPtrArray jarg1_, long jarg2);
  public final static native long _GPtrArray_len_get(long jarg1, _GPtrArray jarg1_);
  public final static native long new__GPtrArray();
  public final static native void delete__GPtrArray(long jarg1);
  public final static native long g_array_new(int jarg1, int jarg2, long jarg3);
  public final static native long g_array_sized_new(int jarg1, int jarg2, long jarg3, long jarg4);
  public final static native String g_array_free(long jarg1, _GArray jarg1_, int jarg2);
  public final static native long g_array_ref(long jarg1, _GArray jarg1_);
  public final static native void g_array_unref(long jarg1, _GArray jarg1_);
  public final static native long g_array_get_element_size(long jarg1, _GArray jarg1_);
  public final static native long g_array_append_vals(long jarg1, _GArray jarg1_, long jarg2, long jarg3);
  public final static native long g_array_prepend_vals(long jarg1, _GArray jarg1_, long jarg2, long jarg3);
  public final static native long g_array_insert_vals(long jarg1, _GArray jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long g_array_set_size(long jarg1, _GArray jarg1_, long jarg2);
  public final static native long g_array_remove_index(long jarg1, _GArray jarg1_, long jarg2);
  public final static native long g_array_remove_index_fast(long jarg1, _GArray jarg1_, long jarg2);
  public final static native long g_array_remove_range(long jarg1, _GArray jarg1_, long jarg2, long jarg3);
  public final static native void g_array_sort(long jarg1, _GArray jarg1_, long jarg2);
  public final static native void g_array_sort_with_data(long jarg1, _GArray jarg1_, long jarg2, long jarg3);
  public final static native void g_array_set_clear_func(long jarg1, _GArray jarg1_, long jarg2);
  public final static native long g_ptr_array_new();
  public final static native long g_ptr_array_new_with_free_func(long jarg1);
  public final static native long g_ptr_array_sized_new(long jarg1);
  public final static native long g_ptr_array_new_full(long jarg1, long jarg2);
  public final static native long g_ptr_array_free(long jarg1, _GPtrArray jarg1_, int jarg2);
  public final static native long g_ptr_array_ref(long jarg1, _GPtrArray jarg1_);
  public final static native void g_ptr_array_unref(long jarg1, _GPtrArray jarg1_);
  public final static native void g_ptr_array_set_free_func(long jarg1, _GPtrArray jarg1_, long jarg2);
  public final static native void g_ptr_array_set_size(long jarg1, _GPtrArray jarg1_, int jarg2);
  public final static native long g_ptr_array_remove_index(long jarg1, _GPtrArray jarg1_, long jarg2);
  public final static native long g_ptr_array_remove_index_fast(long jarg1, _GPtrArray jarg1_, long jarg2);
  public final static native int g_ptr_array_remove(long jarg1, _GPtrArray jarg1_, long jarg2);
  public final static native int g_ptr_array_remove_fast(long jarg1, _GPtrArray jarg1_, long jarg2);
  public final static native long g_ptr_array_remove_range(long jarg1, _GPtrArray jarg1_, long jarg2, long jarg3);
  public final static native void g_ptr_array_add(long jarg1, _GPtrArray jarg1_, long jarg2);
  public final static native void g_ptr_array_insert(long jarg1, _GPtrArray jarg1_, int jarg2, long jarg3);
  public final static native void g_ptr_array_sort(long jarg1, _GPtrArray jarg1_, long jarg2);
  public final static native void g_ptr_array_sort_with_data(long jarg1, _GPtrArray jarg1_, long jarg2, long jarg3);
  public final static native void g_ptr_array_foreach(long jarg1, _GPtrArray jarg1_, long jarg2, long jarg3);
  public final static native long g_byte_array_new();
  public final static native long g_byte_array_new_take(long jarg1, java.math.BigInteger jarg2);
  public final static native long g_byte_array_sized_new(long jarg1);
  public final static native long g_byte_array_free(long jarg1, _GByteArray jarg1_, int jarg2);
  public final static native long g_byte_array_free_to_bytes(long jarg1, _GByteArray jarg1_);
  public final static native long g_byte_array_ref(long jarg1, _GByteArray jarg1_);
  public final static native void g_byte_array_unref(long jarg1, _GByteArray jarg1_);
  public final static native long g_byte_array_append(long jarg1, _GByteArray jarg1_, long jarg2, long jarg3);
  public final static native long g_byte_array_prepend(long jarg1, _GByteArray jarg1_, long jarg2, long jarg3);
  public final static native long g_byte_array_set_size(long jarg1, _GByteArray jarg1_, long jarg2);
  public final static native long g_byte_array_remove_index(long jarg1, _GByteArray jarg1_, long jarg2);
  public final static native long g_byte_array_remove_index_fast(long jarg1, _GByteArray jarg1_, long jarg2);
  public final static native long g_byte_array_remove_range(long jarg1, _GByteArray jarg1_, long jarg2, long jarg3);
  public final static native void g_byte_array_sort(long jarg1, _GByteArray jarg1_, long jarg2);
  public final static native void g_byte_array_sort_with_data(long jarg1, _GByteArray jarg1_, long jarg2, long jarg3);
  public final static native long g_quark_try_string(String jarg1);
  public final static native long g_quark_from_static_string(String jarg1);
  public final static native long g_quark_from_string(String jarg1);
  public final static native String g_quark_to_string(long jarg1);
  public final static native String g_intern_string(String jarg1);
  public final static native String g_intern_static_string(String jarg1);
  public final static native void _GError_domain_set(long jarg1, _GError jarg1_, long jarg2);
  public final static native long _GError_domain_get(long jarg1, _GError jarg1_);
  public final static native void _GError_code_set(long jarg1, _GError jarg1_, int jarg2);
  public final static native int _GError_code_get(long jarg1, _GError jarg1_);
  public final static native void _GError_message_set(long jarg1, _GError jarg1_, String jarg2);
  public final static native String _GError_message_get(long jarg1, _GError jarg1_);
  public final static native long new__GError();
  public final static native void delete__GError(long jarg1);
  public final static native long g_error_new(long jarg1, int jarg2, String jarg3);
  public final static native long g_error_new_literal(long jarg1, int jarg2, String jarg3);
  public final static native long g_error_new_valist(long jarg1, int jarg2, String jarg3, long jarg4);
  public final static native void g_error_free(long jarg1, _GError jarg1_);
  public final static native long g_error_copy(long jarg1, _GError jarg1_);
  public final static native int g_error_matches(long jarg1, _GError jarg1_, long jarg2, int jarg3);
  public final static native void g_set_error(long jarg1, long jarg2, int jarg3, String jarg4);
  public final static native void g_set_error_literal(long jarg1, long jarg2, int jarg3, String jarg4);
  public final static native void g_propagate_error(long jarg1, long jarg2, _GError jarg2_);
  public final static native void g_clear_error(long jarg1);
  public final static native void g_prefix_error(long jarg1, String jarg2);
  public final static native void g_propagate_prefixed_error(long jarg1, long jarg2, _GError jarg2_, String jarg3);
  public final static native String g_get_user_name();
  public final static native String g_get_real_name();
  public final static native String g_get_home_dir();
  public final static native String g_get_tmp_dir();
  public final static native String g_get_host_name();
  public final static native String g_get_prgname();
  public final static native void g_set_prgname(String jarg1);
  public final static native String g_get_application_name();
  public final static native void g_set_application_name(String jarg1);
  public final static native void g_reload_user_special_dirs_cache();
  public final static native String g_get_user_data_dir();
  public final static native String g_get_user_config_dir();
  public final static native String g_get_user_cache_dir();
  public final static native long g_get_system_data_dirs();
  public final static native long g_win32_get_system_data_dirs_for_module(long jarg1);
  public final static native long _g_win32_get_system_data_dirs();
  public final static native long g_get_system_config_dirs();
  public final static native String g_get_user_runtime_dir();
  public final static native String g_get_user_special_dir(int jarg1);
  public final static native void _GDebugKey_key_set(long jarg1, _GDebugKey jarg1_, String jarg2);
  public final static native String _GDebugKey_key_get(long jarg1, _GDebugKey jarg1_);
  public final static native void _GDebugKey_value_set(long jarg1, _GDebugKey jarg1_, long jarg2);
  public final static native long _GDebugKey_value_get(long jarg1, _GDebugKey jarg1_);
  public final static native long new__GDebugKey();
  public final static native void delete__GDebugKey(long jarg1);
  public final static native long g_parse_debug_string(String jarg1, long jarg2, _GDebugKey jarg2_, long jarg3);
  public final static native int g_snprintf(String jarg1, long jarg2, String jarg3);
  public final static native int g_vsnprintf(String jarg1, long jarg2, String jarg3, long jarg4);
  public final static native void g_nullify_pointer(long jarg1);
  public final static native int G_FORMAT_SIZE_DEFAULT_get();
  public final static native int G_FORMAT_SIZE_LONG_FORMAT_get();
  public final static native int G_FORMAT_SIZE_IEC_UNITS_get();
  public final static native String g_format_size_full(java.math.BigInteger jarg1, int jarg2);
  public final static native String g_format_size(java.math.BigInteger jarg1);
  public final static native String g_format_size_for_display(long jarg1);
  public final static native void g_atexit(long jarg1);
  public final static native String g_find_program_in_path(String jarg1);
  public final static native int g_bit_nth_lsf(long jarg1, int jarg2);
  public final static native int g_bit_nth_msf(long jarg1, int jarg2);
  public final static native long g_bit_storage(long jarg1);
  public final static native int g_bit_nth_lsf_impl(long jarg1, int jarg2);
  public final static native int g_bit_nth_msf_impl(long jarg1, int jarg2);
  public final static native long g_bit_storage_impl(long jarg1);
  public final static native void g_abort();
  public final static native long g_thread_error_quark();
  public final static native void _GMutex_p_set(long jarg1, _GMutex jarg1_, long jarg2);
  public final static native long _GMutex_p_get(long jarg1, _GMutex jarg1_);
  public final static native void _GMutex_i_set(long jarg1, _GMutex jarg1_, long jarg2);
  public final static native long _GMutex_i_get(long jarg1, _GMutex jarg1_);
  public final static native long new__GMutex();
  public final static native void delete__GMutex(long jarg1);
  public final static native void _GRWLock_p_set(long jarg1, _GRWLock jarg1_, long jarg2);
  public final static native long _GRWLock_p_get(long jarg1, _GRWLock jarg1_);
  public final static native void _GRWLock_i_set(long jarg1, _GRWLock jarg1_, long jarg2);
  public final static native long _GRWLock_i_get(long jarg1, _GRWLock jarg1_);
  public final static native long new__GRWLock();
  public final static native void delete__GRWLock(long jarg1);
  public final static native void _GCond_p_set(long jarg1, _GCond jarg1_, long jarg2);
  public final static native long _GCond_p_get(long jarg1, _GCond jarg1_);
  public final static native void _GCond_i_set(long jarg1, _GCond jarg1_, long jarg2);
  public final static native long _GCond_i_get(long jarg1, _GCond jarg1_);
  public final static native long new__GCond();
  public final static native void delete__GCond(long jarg1);
  public final static native void _GRecMutex_p_set(long jarg1, _GRecMutex jarg1_, long jarg2);
  public final static native long _GRecMutex_p_get(long jarg1, _GRecMutex jarg1_);
  public final static native void _GRecMutex_i_set(long jarg1, _GRecMutex jarg1_, long jarg2);
  public final static native long _GRecMutex_i_get(long jarg1, _GRecMutex jarg1_);
  public final static native long new__GRecMutex();
  public final static native void delete__GRecMutex(long jarg1);
  public final static native void _GPrivate_p_set(long jarg1, _GPrivate jarg1_, long jarg2);
  public final static native long _GPrivate_p_get(long jarg1, _GPrivate jarg1_);
  public final static native void _GPrivate_notify_set(long jarg1, _GPrivate jarg1_, long jarg2);
  public final static native long _GPrivate_notify_get(long jarg1, _GPrivate jarg1_);
  public final static native void _GPrivate_future_set(long jarg1, _GPrivate jarg1_, long jarg2);
  public final static native long _GPrivate_future_get(long jarg1, _GPrivate jarg1_);
  public final static native long new__GPrivate();
  public final static native void delete__GPrivate(long jarg1);
  public final static native void _GOnce_status_set(long jarg1, _GOnce jarg1_, int jarg2);
  public final static native int _GOnce_status_get(long jarg1, _GOnce jarg1_);
  public final static native void _GOnce_retval_set(long jarg1, _GOnce jarg1_, long jarg2);
  public final static native long _GOnce_retval_get(long jarg1, _GOnce jarg1_);
  public final static native long new__GOnce();
  public final static native void delete__GOnce(long jarg1);
  public final static native long g_thread_ref(long jarg1, _GThread jarg1_);
  public final static native void g_thread_unref(long jarg1, _GThread jarg1_);
  public final static native long g_thread_new(String jarg1, long jarg2, long jarg3);
  public final static native long g_thread_try_new(String jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long g_thread_self();
  public final static native void g_thread_exit(long jarg1);
  public final static native long g_thread_join(long jarg1, _GThread jarg1_);
  public final static native void g_thread_yield();
  public final static native void g_mutex_init(long jarg1, _GMutex jarg1_);
  public final static native void g_mutex_clear(long jarg1, _GMutex jarg1_);
  public final static native void g_mutex_lock(long jarg1, _GMutex jarg1_);
  public final static native int g_mutex_trylock(long jarg1, _GMutex jarg1_);
  public final static native void g_mutex_unlock(long jarg1, _GMutex jarg1_);
  public final static native void g_rw_lock_init(long jarg1, _GRWLock jarg1_);
  public final static native void g_rw_lock_clear(long jarg1, _GRWLock jarg1_);
  public final static native void g_rw_lock_writer_lock(long jarg1, _GRWLock jarg1_);
  public final static native int g_rw_lock_writer_trylock(long jarg1, _GRWLock jarg1_);
  public final static native void g_rw_lock_writer_unlock(long jarg1, _GRWLock jarg1_);
  public final static native void g_rw_lock_reader_lock(long jarg1, _GRWLock jarg1_);
  public final static native int g_rw_lock_reader_trylock(long jarg1, _GRWLock jarg1_);
  public final static native void g_rw_lock_reader_unlock(long jarg1, _GRWLock jarg1_);
  public final static native void g_rec_mutex_init(long jarg1, _GRecMutex jarg1_);
  public final static native void g_rec_mutex_clear(long jarg1, _GRecMutex jarg1_);
  public final static native void g_rec_mutex_lock(long jarg1, _GRecMutex jarg1_);
  public final static native int g_rec_mutex_trylock(long jarg1, _GRecMutex jarg1_);
  public final static native void g_rec_mutex_unlock(long jarg1, _GRecMutex jarg1_);
  public final static native void g_cond_init(long jarg1, _GCond jarg1_);
  public final static native void g_cond_clear(long jarg1, _GCond jarg1_);
  public final static native void g_cond_wait(long jarg1, _GCond jarg1_, long jarg2, _GMutex jarg2_);
  public final static native void g_cond_signal(long jarg1, _GCond jarg1_);
  public final static native void g_cond_broadcast(long jarg1, _GCond jarg1_);
  public final static native int g_cond_wait_until(long jarg1, _GCond jarg1_, long jarg2, _GMutex jarg2_, long jarg3);
  public final static native long g_private_get(long jarg1, _GPrivate jarg1_);
  public final static native void g_private_set(long jarg1, _GPrivate jarg1_, long jarg2);
  public final static native void g_private_replace(long jarg1, _GPrivate jarg1_, long jarg2);
  public final static native long g_once_impl(long jarg1, _GOnce jarg1_, long jarg2, long jarg3);
  public final static native long g_get_num_processors();
  public final static native long g_mutex_locker_new(long jarg1, _GMutex jarg1_);
  public final static native void g_mutex_locker_free(long jarg1);
  public final static native long g_async_queue_new();
  public final static native long g_async_queue_new_full(long jarg1);
  public final static native void g_async_queue_lock(long jarg1);
  public final static native void g_async_queue_unlock(long jarg1);
  public final static native long g_async_queue_ref(long jarg1);
  public final static native void g_async_queue_unref(long jarg1);
  public final static native void g_async_queue_ref_unlocked(long jarg1);
  public final static native void g_async_queue_unref_and_unlock(long jarg1);
  public final static native void g_async_queue_push(long jarg1, long jarg2);
  public final static native void g_async_queue_push_unlocked(long jarg1, long jarg2);
  public final static native void g_async_queue_push_sorted(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void g_async_queue_push_sorted_unlocked(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long g_async_queue_pop(long jarg1);
  public final static native long g_async_queue_pop_unlocked(long jarg1);
  public final static native long g_async_queue_try_pop(long jarg1);
  public final static native long g_async_queue_try_pop_unlocked(long jarg1);
  public final static native long g_async_queue_timeout_pop(long jarg1, java.math.BigInteger jarg2);
  public final static native long g_async_queue_timeout_pop_unlocked(long jarg1, java.math.BigInteger jarg2);
  public final static native int g_async_queue_length(long jarg1);
  public final static native int g_async_queue_length_unlocked(long jarg1);
  public final static native void g_async_queue_sort(long jarg1, long jarg2, long jarg3);
  public final static native void g_async_queue_sort_unlocked(long jarg1, long jarg2, long jarg3);
  public final static native int g_async_queue_remove(long jarg1, long jarg2);
  public final static native int g_async_queue_remove_unlocked(long jarg1, long jarg2);
  public final static native void g_async_queue_push_front(long jarg1, long jarg2);
  public final static native void g_async_queue_push_front_unlocked(long jarg1, long jarg2);
  public final static native long g_async_queue_timed_pop(long jarg1, long jarg2, _GTimeVal jarg2_);
  public final static native long g_async_queue_timed_pop_unlocked(long jarg1, long jarg2, _GTimeVal jarg2_);
  public final static native void g_on_error_query(String jarg1);
  public final static native void g_on_error_stack_trace(String jarg1);
  public final static native java.math.BigInteger g_base64_encode_step(long jarg1, java.math.BigInteger jarg2, int jarg3, String jarg4, long jarg5, long jarg6);
  public final static native java.math.BigInteger g_base64_encode_close(int jarg1, String jarg2, long jarg3, long jarg4);
  public final static native String g_base64_encode(long jarg1, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger g_base64_decode_step(String jarg1, java.math.BigInteger jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long g_base64_decode(String jarg1, long jarg2);
  public final static native long g_base64_decode_inplace(String jarg1, long jarg2);
  public final static native void g_bit_lock(long jarg1, int jarg2);
  public final static native int g_bit_trylock(long jarg1, int jarg2);
  public final static native void g_bit_unlock(long jarg1, int jarg2);
  public final static native long g_bookmark_file_error_quark();
  public final static native long g_bookmark_file_new();
  public final static native void g_bookmark_file_free(long jarg1);
  public final static native int g_bookmark_file_load_from_file(long jarg1, String jarg2, long jarg3);
  public final static native int g_bookmark_file_load_from_data(long jarg1, String jarg2, java.math.BigInteger jarg3, long jarg4);
  public final static native int g_bookmark_file_load_from_data_dirs(long jarg1, String jarg2, long jarg3, long jarg4);
  public final static native String g_bookmark_file_to_data(long jarg1, long jarg2, long jarg3);
  public final static native int g_bookmark_file_to_file(long jarg1, String jarg2, long jarg3);
  public final static native void g_bookmark_file_set_title(long jarg1, String jarg2, String jarg3);
  public final static native String g_bookmark_file_get_title(long jarg1, String jarg2, long jarg3);
  public final static native void g_bookmark_file_set_description(long jarg1, String jarg2, String jarg3);
  public final static native String g_bookmark_file_get_description(long jarg1, String jarg2, long jarg3);
  public final static native void g_bookmark_file_set_mime_type(long jarg1, String jarg2, String jarg3);
  public final static native String g_bookmark_file_get_mime_type(long jarg1, String jarg2, long jarg3);
  public final static native void g_bookmark_file_set_groups(long jarg1, String jarg2, long jarg3, java.math.BigInteger jarg4);
  public final static native void g_bookmark_file_add_group(long jarg1, String jarg2, String jarg3);
  public final static native int g_bookmark_file_has_group(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native long g_bookmark_file_get_groups(long jarg1, String jarg2, long jarg3, long jarg4);
  public final static native void g_bookmark_file_add_application(long jarg1, String jarg2, String jarg3, String jarg4);
  public final static native int g_bookmark_file_has_application(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native long g_bookmark_file_get_applications(long jarg1, String jarg2, long jarg3, long jarg4);
  public final static native int g_bookmark_file_set_app_info(long jarg1, String jarg2, String jarg3, String jarg4, int jarg5, long jarg6, long jarg7);
  public final static native int g_bookmark_file_get_app_info(long jarg1, String jarg2, String jarg3, long jarg4, long jarg5, long jarg6, long jarg7);
  public final static native void g_bookmark_file_set_is_private(long jarg1, String jarg2, int jarg3);
  public final static native int g_bookmark_file_get_is_private(long jarg1, String jarg2, long jarg3);
  public final static native void g_bookmark_file_set_icon(long jarg1, String jarg2, String jarg3, String jarg4);
  public final static native int g_bookmark_file_get_icon(long jarg1, String jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void g_bookmark_file_set_added(long jarg1, String jarg2, long jarg3);
  public final static native long g_bookmark_file_get_added(long jarg1, String jarg2, long jarg3);
  public final static native void g_bookmark_file_set_modified(long jarg1, String jarg2, long jarg3);
  public final static native long g_bookmark_file_get_modified(long jarg1, String jarg2, long jarg3);
  public final static native void g_bookmark_file_set_visited(long jarg1, String jarg2, long jarg3);
  public final static native long g_bookmark_file_get_visited(long jarg1, String jarg2, long jarg3);
  public final static native int g_bookmark_file_has_item(long jarg1, String jarg2);
  public final static native int g_bookmark_file_get_size(long jarg1);
  public final static native long g_bookmark_file_get_uris(long jarg1, long jarg2);
  public final static native int g_bookmark_file_remove_group(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native int g_bookmark_file_remove_application(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native int g_bookmark_file_remove_item(long jarg1, String jarg2, long jarg3);
  public final static native int g_bookmark_file_move_item(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native long g_bytes_new(long jarg1, java.math.BigInteger jarg2);
  public final static native long g_bytes_new_take(long jarg1, java.math.BigInteger jarg2);
  public final static native long g_bytes_new_static(long jarg1, java.math.BigInteger jarg2);
  public final static native long g_bytes_new_with_free_func(long jarg1, java.math.BigInteger jarg2, long jarg3, long jarg4);
  public final static native long g_bytes_new_from_bytes(long jarg1, java.math.BigInteger jarg2, java.math.BigInteger jarg3);
  public final static native long g_bytes_get_data(long jarg1, long jarg2);
  public final static native java.math.BigInteger g_bytes_get_size(long jarg1);
  public final static native long g_bytes_ref(long jarg1);
  public final static native void g_bytes_unref(long jarg1);
  public final static native long g_bytes_unref_to_data(long jarg1, long jarg2);
  public final static native long g_bytes_unref_to_array(long jarg1);
  public final static native long g_bytes_hash(long jarg1);
  public final static native int g_bytes_equal(long jarg1, long jarg2);
  public final static native int g_bytes_compare(long jarg1, long jarg2);
  public final static native int g_get_charset(long jarg1);
  public final static native String g_get_codeset();
  public final static native long g_get_language_names();
  public final static native long g_get_locale_variants(String jarg1);
  public final static native long g_checksum_type_get_length(int jarg1);
  public final static native long g_checksum_new(int jarg1);
  public final static native void g_checksum_reset(long jarg1);
  public final static native long g_checksum_copy(long jarg1);
  public final static native void g_checksum_free(long jarg1);
  public final static native void g_checksum_update(long jarg1, long jarg2, long jarg3);
  public final static native String g_checksum_get_string(long jarg1);
  public final static native void g_checksum_get_digest(long jarg1, long jarg2, long jarg3);
  public final static native String g_compute_checksum_for_data(int jarg1, long jarg2, java.math.BigInteger jarg3);
  public final static native String g_compute_checksum_for_string(int jarg1, String jarg2, long jarg3);
  public final static native String g_compute_checksum_for_bytes(int jarg1, long jarg2);
  public final static native long g_convert_error_quark();
  public final static native long g_iconv_open(String jarg1, String jarg2);
  public final static native java.math.BigInteger g_iconv(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int g_iconv_close(long jarg1);
  public final static native String g_convert(String jarg1, long jarg2, String jarg3, String jarg4, long jarg5, long jarg6, long jarg7);
  public final static native String g_convert_with_iconv(String jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native String g_convert_with_fallback(String jarg1, long jarg2, String jarg3, String jarg4, String jarg5, long jarg6, long jarg7, long jarg8);
  public final static native String g_locale_to_utf8(String jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native String g_locale_from_utf8(String jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native String g_filename_to_utf8(String jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native String g_filename_from_utf8(String jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native String g_filename_from_uri(String jarg1, long jarg2, long jarg3);
  public final static native String g_filename_to_uri(String jarg1, String jarg2, long jarg3);
  public final static native String g_filename_display_name(String jarg1);
  public final static native int g_get_filename_charsets(long jarg1);
  public final static native String g_filename_display_basename(String jarg1);
  public final static native long g_uri_list_extract_uris(String jarg1);
  public final static native String g_filename_to_utf8_utf8(String jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native String g_filename_from_utf8_utf8(String jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native String g_filename_from_uri_utf8(String jarg1, long jarg2, long jarg3);
  public final static native String g_filename_to_uri_utf8(String jarg1, String jarg2, long jarg3);
  public final static native void g_datalist_init(long jarg1);
  public final static native void g_datalist_clear(long jarg1);
  public final static native long g_datalist_id_get_data(long jarg1, long jarg2);
  public final static native void g_datalist_id_set_data_full(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long g_datalist_id_dup_data(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int g_datalist_id_replace_data(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long g_datalist_id_remove_no_notify(long jarg1, long jarg2);
  public final static native void g_datalist_foreach(long jarg1, long jarg2, long jarg3);
  public final static native int G_DATALIST_FLAGS_MASK_get();
  public final static native void g_datalist_set_flags(long jarg1, long jarg2);
  public final static native void g_datalist_unset_flags(long jarg1, long jarg2);
  public final static native long g_datalist_get_flags(long jarg1);
  public final static native void g_dataset_destroy(long jarg1);
  public final static native long g_dataset_id_get_data(long jarg1, long jarg2);
  public final static native long g_datalist_get_data(long jarg1, String jarg2);
  public final static native void g_dataset_id_set_data_full(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long g_dataset_id_remove_no_notify(long jarg1, long jarg2);
  public final static native void g_dataset_foreach(long jarg1, long jarg2, long jarg3);
  public final static native int G_DATE_DAY_get();
  public final static native int G_DATE_MONTH_get();
  public final static native int G_DATE_YEAR_get();
  public final static native int G_DATE_BAD_WEEKDAY_get();
  public final static native int G_DATE_MONDAY_get();
  public final static native int G_DATE_TUESDAY_get();
  public final static native int G_DATE_WEDNESDAY_get();
  public final static native int G_DATE_THURSDAY_get();
  public final static native int G_DATE_FRIDAY_get();
  public final static native int G_DATE_SATURDAY_get();
  public final static native int G_DATE_SUNDAY_get();
  public final static native int G_DATE_BAD_MONTH_get();
  public final static native int G_DATE_JANUARY_get();
  public final static native int G_DATE_FEBRUARY_get();
  public final static native int G_DATE_MARCH_get();
  public final static native int G_DATE_APRIL_get();
  public final static native int G_DATE_MAY_get();
  public final static native int G_DATE_JUNE_get();
  public final static native int G_DATE_JULY_get();
  public final static native int G_DATE_AUGUST_get();
  public final static native int G_DATE_SEPTEMBER_get();
  public final static native int G_DATE_OCTOBER_get();
  public final static native int G_DATE_NOVEMBER_get();
  public final static native int G_DATE_DECEMBER_get();
  public final static native long G_DATE_BAD_JULIAN_get();
  public final static native long G_DATE_BAD_DAY_get();
  public final static native long G_DATE_BAD_YEAR_get();
  public final static native void _GDate_julian_days_set(long jarg1, _GDate jarg1_, long jarg2);
  public final static native long _GDate_julian_days_get(long jarg1, _GDate jarg1_);
  public final static native void _GDate_julian_set(long jarg1, _GDate jarg1_, long jarg2);
  public final static native long _GDate_julian_get(long jarg1, _GDate jarg1_);
  public final static native void _GDate_dmy_set(long jarg1, _GDate jarg1_, long jarg2);
  public final static native long _GDate_dmy_get(long jarg1, _GDate jarg1_);
  public final static native void _GDate_day_set(long jarg1, _GDate jarg1_, long jarg2);
  public final static native long _GDate_day_get(long jarg1, _GDate jarg1_);
  public final static native void _GDate_month_set(long jarg1, _GDate jarg1_, long jarg2);
  public final static native long _GDate_month_get(long jarg1, _GDate jarg1_);
  public final static native void _GDate_year_set(long jarg1, _GDate jarg1_, long jarg2);
  public final static native long _GDate_year_get(long jarg1, _GDate jarg1_);
  public final static native long new__GDate();
  public final static native void delete__GDate(long jarg1);
  public final static native long g_date_new();
  public final static native long g_date_new_dmy(short jarg1, int jarg2, int jarg3);
  public final static native long g_date_new_julian(long jarg1);
  public final static native void g_date_free(long jarg1, _GDate jarg1_);
  public final static native int g_date_valid(long jarg1, _GDate jarg1_);
  public final static native int g_date_valid_day(short jarg1);
  public final static native int g_date_valid_month(int jarg1);
  public final static native int g_date_valid_year(int jarg1);
  public final static native int g_date_valid_weekday(int jarg1);
  public final static native int g_date_valid_julian(long jarg1);
  public final static native int g_date_valid_dmy(short jarg1, int jarg2, int jarg3);
  public final static native int g_date_get_weekday(long jarg1, _GDate jarg1_);
  public final static native int g_date_get_month(long jarg1, _GDate jarg1_);
  public final static native int g_date_get_year(long jarg1, _GDate jarg1_);
  public final static native short g_date_get_day(long jarg1, _GDate jarg1_);
  public final static native long g_date_get_julian(long jarg1, _GDate jarg1_);
  public final static native long g_date_get_day_of_year(long jarg1, _GDate jarg1_);
  public final static native long g_date_get_monday_week_of_year(long jarg1, _GDate jarg1_);
  public final static native long g_date_get_sunday_week_of_year(long jarg1, _GDate jarg1_);
  public final static native long g_date_get_iso8601_week_of_year(long jarg1, _GDate jarg1_);
  public final static native void g_date_clear(long jarg1, _GDate jarg1_, long jarg2);
  public final static native void g_date_set_parse(long jarg1, _GDate jarg1_, String jarg2);
  public final static native void g_date_set_time_t(long jarg1, _GDate jarg1_, long jarg2);
  public final static native void g_date_set_time_val(long jarg1, _GDate jarg1_, long jarg2, _GTimeVal jarg2_);
  public final static native void g_date_set_time(long jarg1, _GDate jarg1_, int jarg2);
  public final static native void g_date_set_month(long jarg1, _GDate jarg1_, int jarg2);
  public final static native void g_date_set_day(long jarg1, _GDate jarg1_, short jarg2);
  public final static native void g_date_set_year(long jarg1, _GDate jarg1_, int jarg2);
  public final static native void g_date_set_dmy(long jarg1, _GDate jarg1_, short jarg2, int jarg3, int jarg4);
  public final static native void g_date_set_julian(long jarg1, _GDate jarg1_, long jarg2);
  public final static native int g_date_is_first_of_month(long jarg1, _GDate jarg1_);
  public final static native int g_date_is_last_of_month(long jarg1, _GDate jarg1_);
  public final static native void g_date_add_days(long jarg1, _GDate jarg1_, long jarg2);
  public final static native void g_date_subtract_days(long jarg1, _GDate jarg1_, long jarg2);
  public final static native void g_date_add_months(long jarg1, _GDate jarg1_, long jarg2);
  public final static native void g_date_subtract_months(long jarg1, _GDate jarg1_, long jarg2);
  public final static native void g_date_add_years(long jarg1, _GDate jarg1_, long jarg2);
  public final static native void g_date_subtract_years(long jarg1, _GDate jarg1_, long jarg2);
  public final static native int g_date_is_leap_year(int jarg1);
  public final static native short g_date_get_days_in_month(int jarg1, int jarg2);
  public final static native short g_date_get_monday_weeks_in_year(int jarg1);
  public final static native short g_date_get_sunday_weeks_in_year(int jarg1);
  public final static native int g_date_days_between(long jarg1, _GDate jarg1_, long jarg2, _GDate jarg2_);
  public final static native int g_date_compare(long jarg1, _GDate jarg1_, long jarg2, _GDate jarg2_);
  public final static native void g_date_to_struct_tm(long jarg1, _GDate jarg1_, long jarg2);
  public final static native void g_date_clamp(long jarg1, _GDate jarg1_, long jarg2, _GDate jarg2_, long jarg3, _GDate jarg3_);
  public final static native void g_date_order(long jarg1, _GDate jarg1_, long jarg2, _GDate jarg2_);
  public final static native java.math.BigInteger g_date_strftime(String jarg1, java.math.BigInteger jarg2, String jarg3, long jarg4, _GDate jarg4_);
  public final static native long g_time_zone_new(String jarg1);
  public final static native long g_time_zone_new_utc();
  public final static native long g_time_zone_new_local();
  public final static native long g_time_zone_ref(long jarg1);
  public final static native void g_time_zone_unref(long jarg1);
  public final static native int g_time_zone_find_interval(long jarg1, int jarg2, long jarg3);
  public final static native int g_time_zone_adjust_time(long jarg1, int jarg2, long jarg3);
  public final static native String g_time_zone_get_abbreviation(long jarg1, int jarg2);
  public final static native int g_time_zone_get_offset(long jarg1, int jarg2);
  public final static native int g_time_zone_is_dst(long jarg1, int jarg2);
  public final static native long G_TIME_SPAN_DAY_get();
  public final static native long G_TIME_SPAN_HOUR_get();
  public final static native long G_TIME_SPAN_MINUTE_get();
  public final static native long G_TIME_SPAN_SECOND_get();
  public final static native long G_TIME_SPAN_MILLISECOND_get();
  public final static native void g_date_time_unref(long jarg1);
  public final static native long g_date_time_ref(long jarg1);
  public final static native long g_date_time_new_now(long jarg1);
  public final static native long g_date_time_new_now_local();
  public final static native long g_date_time_new_now_utc();
  public final static native long g_date_time_new_from_unix_local(long jarg1);
  public final static native long g_date_time_new_from_unix_utc(long jarg1);
  public final static native long g_date_time_new_from_timeval_local(long jarg1, _GTimeVal jarg1_);
  public final static native long g_date_time_new_from_timeval_utc(long jarg1, _GTimeVal jarg1_);
  public final static native long g_date_time_new(long jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, double jarg7);
  public final static native long g_date_time_new_local(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5, double jarg6);
  public final static native long g_date_time_new_utc(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5, double jarg6);
  public final static native long g_date_time_add(long jarg1, long jarg2);
  public final static native long g_date_time_add_years(long jarg1, int jarg2);
  public final static native long g_date_time_add_months(long jarg1, int jarg2);
  public final static native long g_date_time_add_weeks(long jarg1, int jarg2);
  public final static native long g_date_time_add_days(long jarg1, int jarg2);
  public final static native long g_date_time_add_hours(long jarg1, int jarg2);
  public final static native long g_date_time_add_minutes(long jarg1, int jarg2);
  public final static native long g_date_time_add_seconds(long jarg1, double jarg2);
  public final static native long g_date_time_add_full(long jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, double jarg7);
  public final static native int g_date_time_compare(long jarg1, long jarg2);
  public final static native long g_date_time_difference(long jarg1, long jarg2);
  public final static native long g_date_time_hash(long jarg1);
  public final static native int g_date_time_equal(long jarg1, long jarg2);
  public final static native void g_date_time_get_ymd(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int g_date_time_get_year(long jarg1);
  public final static native int g_date_time_get_month(long jarg1);
  public final static native int g_date_time_get_day_of_month(long jarg1);
  public final static native int g_date_time_get_week_numbering_year(long jarg1);
  public final static native int g_date_time_get_week_of_year(long jarg1);
  public final static native int g_date_time_get_day_of_week(long jarg1);
  public final static native int g_date_time_get_day_of_year(long jarg1);
  public final static native int g_date_time_get_hour(long jarg1);
  public final static native int g_date_time_get_minute(long jarg1);
  public final static native int g_date_time_get_second(long jarg1);
  public final static native int g_date_time_get_microsecond(long jarg1);
  public final static native double g_date_time_get_seconds(long jarg1);
  public final static native long g_date_time_to_unix(long jarg1);
  public final static native int g_date_time_to_timeval(long jarg1, long jarg2, _GTimeVal jarg2_);
  public final static native long g_date_time_get_utc_offset(long jarg1);
  public final static native String g_date_time_get_timezone_abbreviation(long jarg1);
  public final static native int g_date_time_is_daylight_savings(long jarg1);
  public final static native long g_date_time_to_timezone(long jarg1, long jarg2);
  public final static native long g_date_time_to_local(long jarg1);
  public final static native long g_date_time_to_utc(long jarg1);
  public final static native String g_date_time_format(long jarg1, String jarg2);
  public final static native long g_dir_open(String jarg1, long jarg2, long jarg3);
  public final static native String g_dir_read_name(long jarg1);
  public final static native void g_dir_rewind(long jarg1);
  public final static native void g_dir_close(long jarg1);
  public final static native long g_dir_open_utf8(String jarg1, long jarg2, long jarg3);
  public final static native String g_dir_read_name_utf8(long jarg1);
  public final static native String g_getenv(String jarg1);
  public final static native int g_setenv(String jarg1, String jarg2, int jarg3);
  public final static native void g_unsetenv(String jarg1);
  public final static native long g_listenv();
  public final static native long g_get_environ();
  public final static native String g_environ_getenv(long jarg1, String jarg2);
  public final static native long g_environ_setenv(long jarg1, String jarg2, String jarg3, int jarg4);
  public final static native long g_environ_unsetenv(long jarg1, String jarg2);
  public final static native String g_getenv_utf8(String jarg1);
  public final static native int g_setenv_utf8(String jarg1, String jarg2, int jarg3);
  public final static native void g_unsetenv_utf8(String jarg1);
  public final static native int G_FILE_TEST_IS_REGULAR_get();
  public final static native int G_FILE_TEST_IS_SYMLINK_get();
  public final static native int G_FILE_TEST_IS_DIR_get();
  public final static native int G_FILE_TEST_IS_EXECUTABLE_get();
  public final static native int G_FILE_TEST_EXISTS_get();
  public final static native long g_file_error_quark();
  public final static native int g_file_error_from_errno(int jarg1);
  public final static native int g_file_test(String jarg1, int jarg2);
  public final static native int g_file_get_contents(String jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int g_file_set_contents(String jarg1, String jarg2, long jarg3, long jarg4);
  public final static native String g_file_read_link(String jarg1, long jarg2);
  public final static native String g_mkdtemp(String jarg1);
  public final static native String g_mkdtemp_full(String jarg1, int jarg2);
  public final static native int g_mkstemp(String jarg1);
  public final static native int g_mkstemp_full(String jarg1, int jarg2, int jarg3);
  public final static native int g_file_open_tmp(String jarg1, long jarg2, long jarg3);
  public final static native String g_dir_make_tmp(String jarg1, long jarg2);
  public final static native String g_build_path(String jarg1, String jarg2);
  public final static native String g_build_pathv(String jarg1, long jarg2);
  public final static native String g_build_filename(String jarg1);
  public final static native String g_build_filenamev(long jarg1);
  public final static native int g_mkdir_with_parents(String jarg1, int jarg2);
  public final static native char G_DIR_SEPARATOR_get();
  public final static native String G_DIR_SEPARATOR_S_get();
  public final static native char G_SEARCHPATH_SEPARATOR_get();
  public final static native String G_SEARCHPATH_SEPARATOR_S_get();
  public final static native int g_path_is_absolute(String jarg1);
  public final static native String g_path_skip_root(String jarg1);
  public final static native String g_basename(String jarg1);
  public final static native String g_get_current_dir();
  public final static native String g_path_get_basename(String jarg1);
  public final static native String g_path_get_dirname(String jarg1);
  public final static native int g_file_test_utf8(String jarg1, int jarg2);
  public final static native int g_file_get_contents_utf8(String jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int g_mkstemp_utf8(String jarg1);
  public final static native int g_file_open_tmp_utf8(String jarg1, long jarg2, long jarg3);
  public final static native String g_get_current_dir_utf8();
  public final static native String g_strip_context(String jarg1, String jarg2);
  public final static native String g_dgettext(String jarg1, String jarg2);
  public final static native String g_dcgettext(String jarg1, String jarg2, int jarg3);
  public final static native String g_dngettext(String jarg1, String jarg2, String jarg3, long jarg4);
  public final static native String g_dpgettext(String jarg1, String jarg2, java.math.BigInteger jarg3);
  public final static native String g_dpgettext2(String jarg1, String jarg2, String jarg3);
  public final static native int G_MEM_ALIGN_get();
  public final static native void g_free(long jarg1);
  public final static native void g_clear_pointer(long jarg1, long jarg2);
  public final static native long g_malloc(java.math.BigInteger jarg1);
  public final static native long g_malloc0(java.math.BigInteger jarg1);
  public final static native long g_realloc(long jarg1, java.math.BigInteger jarg2);
  public final static native long g_try_malloc(java.math.BigInteger jarg1);
  public final static native long g_try_malloc0(java.math.BigInteger jarg1);
  public final static native long g_try_realloc(long jarg1, java.math.BigInteger jarg2);
  public final static native long g_malloc_n(java.math.BigInteger jarg1, java.math.BigInteger jarg2);
  public final static native long g_malloc0_n(java.math.BigInteger jarg1, java.math.BigInteger jarg2);
  public final static native long g_realloc_n(long jarg1, java.math.BigInteger jarg2, java.math.BigInteger jarg3);
  public final static native long g_try_malloc_n(java.math.BigInteger jarg1, java.math.BigInteger jarg2);
  public final static native long g_try_malloc0_n(java.math.BigInteger jarg1, java.math.BigInteger jarg2);
  public final static native long g_try_realloc_n(long jarg1, java.math.BigInteger jarg2, java.math.BigInteger jarg3);
  public final static native void _GMemVTable_malloc_set(long jarg1, _GMemVTable jarg1_, long jarg2);
  public final static native long _GMemVTable_malloc_get(long jarg1, _GMemVTable jarg1_);
  public final static native void _GMemVTable_realloc_set(long jarg1, _GMemVTable jarg1_, long jarg2);
  public final static native long _GMemVTable_realloc_get(long jarg1, _GMemVTable jarg1_);
  public final static native void _GMemVTable_free_set(long jarg1, _GMemVTable jarg1_, long jarg2);
  public final static native long _GMemVTable_free_get(long jarg1, _GMemVTable jarg1_);
  public final static native void _GMemVTable_calloc_set(long jarg1, _GMemVTable jarg1_, long jarg2);
  public final static native long _GMemVTable_calloc_get(long jarg1, _GMemVTable jarg1_);
  public final static native void _GMemVTable_try_malloc_set(long jarg1, _GMemVTable jarg1_, long jarg2);
  public final static native long _GMemVTable_try_malloc_get(long jarg1, _GMemVTable jarg1_);
  public final static native void _GMemVTable_try_realloc_set(long jarg1, _GMemVTable jarg1_, long jarg2);
  public final static native long _GMemVTable_try_realloc_get(long jarg1, _GMemVTable jarg1_);
  public final static native long new__GMemVTable();
  public final static native void delete__GMemVTable(long jarg1);
  public final static native void g_mem_set_vtable(long jarg1, _GMemVTable jarg1_);
  public final static native int g_mem_is_system_malloc();
  public final static native void g_mem_gc_friendly_set(int jarg1);
  public final static native int g_mem_gc_friendly_get();
  public final static native void glib_mem_profiler_table_set(long jarg1, _GMemVTable jarg1_);
  public final static native long glib_mem_profiler_table_get();
  public final static native void g_mem_profile();
  public final static native int G_TRAVERSE_LEAVES_get();
  public final static native int G_TRAVERSE_NON_LEAVES_get();
  public final static native int G_TRAVERSE_ALL_get();
  public final static native int G_TRAVERSE_MASK_get();
  public final static native int G_TRAVERSE_LEAFS_get();
  public final static native int G_TRAVERSE_NON_LEAFS_get();
  public final static native void _GNode_data_set(long jarg1, _GNode jarg1_, long jarg2);
  public final static native long _GNode_data_get(long jarg1, _GNode jarg1_);
  public final static native void _GNode_next_set(long jarg1, _GNode jarg1_, long jarg2, _GNode jarg2_);
  public final static native long _GNode_next_get(long jarg1, _GNode jarg1_);
  public final static native void _GNode_prev_set(long jarg1, _GNode jarg1_, long jarg2, _GNode jarg2_);
  public final static native long _GNode_prev_get(long jarg1, _GNode jarg1_);
  public final static native void _GNode_parent_set(long jarg1, _GNode jarg1_, long jarg2, _GNode jarg2_);
  public final static native long _GNode_parent_get(long jarg1, _GNode jarg1_);
  public final static native void _GNode_children_set(long jarg1, _GNode jarg1_, long jarg2, _GNode jarg2_);
  public final static native long _GNode_children_get(long jarg1, _GNode jarg1_);
  public final static native long new__GNode();
  public final static native void delete__GNode(long jarg1);
  public final static native long g_node_new(long jarg1);
  public final static native void g_node_destroy(long jarg1, _GNode jarg1_);
  public final static native void g_node_unlink(long jarg1, _GNode jarg1_);
  public final static native long g_node_copy_deep(long jarg1, _GNode jarg1_, long jarg2, long jarg3);
  public final static native long g_node_copy(long jarg1, _GNode jarg1_);
  public final static native long g_node_insert(long jarg1, _GNode jarg1_, int jarg2, long jarg3, _GNode jarg3_);
  public final static native long g_node_insert_before(long jarg1, _GNode jarg1_, long jarg2, _GNode jarg2_, long jarg3, _GNode jarg3_);
  public final static native long g_node_insert_after(long jarg1, _GNode jarg1_, long jarg2, _GNode jarg2_, long jarg3, _GNode jarg3_);
  public final static native long g_node_prepend(long jarg1, _GNode jarg1_, long jarg2, _GNode jarg2_);
  public final static native long g_node_n_nodes(long jarg1, _GNode jarg1_, int jarg2);
  public final static native long g_node_get_root(long jarg1, _GNode jarg1_);
  public final static native int g_node_is_ancestor(long jarg1, _GNode jarg1_, long jarg2, _GNode jarg2_);
  public final static native long g_node_depth(long jarg1, _GNode jarg1_);
  public final static native long g_node_find(long jarg1, _GNode jarg1_, int jarg2, int jarg3, long jarg4);
  public final static native void g_node_traverse(long jarg1, _GNode jarg1_, int jarg2, int jarg3, int jarg4, long jarg5, long jarg6);
  public final static native long g_node_max_height(long jarg1, _GNode jarg1_);
  public final static native void g_node_children_foreach(long jarg1, _GNode jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void g_node_reverse_children(long jarg1, _GNode jarg1_);
  public final static native long g_node_n_children(long jarg1, _GNode jarg1_);
  public final static native long g_node_nth_child(long jarg1, _GNode jarg1_, long jarg2);
  public final static native long g_node_last_child(long jarg1, _GNode jarg1_);
  public final static native long g_node_find_child(long jarg1, _GNode jarg1_, int jarg2, long jarg3);
  public final static native int g_node_child_position(long jarg1, _GNode jarg1_, long jarg2, _GNode jarg2_);
  public final static native int g_node_child_index(long jarg1, _GNode jarg1_, long jarg2);
  public final static native long g_node_first_sibling(long jarg1, _GNode jarg1_);
  public final static native long g_node_last_sibling(long jarg1, _GNode jarg1_);
  public final static native void _GList_data_set(long jarg1, _GList jarg1_, long jarg2);
  public final static native long _GList_data_get(long jarg1, _GList jarg1_);
  public final static native void _GList_next_set(long jarg1, _GList jarg1_, long jarg2, _GList jarg2_);
  public final static native long _GList_next_get(long jarg1, _GList jarg1_);
  public final static native void _GList_prev_set(long jarg1, _GList jarg1_, long jarg2, _GList jarg2_);
  public final static native long _GList_prev_get(long jarg1, _GList jarg1_);
  public final static native long new__GList();
  public final static native void delete__GList(long jarg1);
  public final static native long g_list_alloc();
  public final static native void g_list_free(long jarg1, _GList jarg1_);
  public final static native void g_list_free_1(long jarg1, _GList jarg1_);
  public final static native void g_list_free_full(long jarg1, _GList jarg1_, long jarg2);
  public final static native long g_list_append(long jarg1, _GList jarg1_, long jarg2);
  public final static native long g_list_prepend(long jarg1, _GList jarg1_, long jarg2);
  public final static native long g_list_insert(long jarg1, _GList jarg1_, long jarg2, int jarg3);
  public final static native long g_list_insert_sorted(long jarg1, _GList jarg1_, long jarg2, long jarg3);
  public final static native long g_list_insert_sorted_with_data(long jarg1, _GList jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long g_list_insert_before(long jarg1, _GList jarg1_, long jarg2, _GList jarg2_, long jarg3);
  public final static native long g_list_concat(long jarg1, _GList jarg1_, long jarg2, _GList jarg2_);
  public final static native long g_list_remove(long jarg1, _GList jarg1_, long jarg2);
  public final static native long g_list_remove_all(long jarg1, _GList jarg1_, long jarg2);
  public final static native long g_list_remove_link(long jarg1, _GList jarg1_, long jarg2, _GList jarg2_);
  public final static native long g_list_delete_link(long jarg1, _GList jarg1_, long jarg2, _GList jarg2_);
  public final static native long g_list_reverse(long jarg1, _GList jarg1_);
  public final static native long g_list_copy(long jarg1, _GList jarg1_);
  public final static native long g_list_copy_deep(long jarg1, _GList jarg1_, long jarg2, long jarg3);
  public final static native long g_list_nth(long jarg1, _GList jarg1_, long jarg2);
  public final static native long g_list_nth_prev(long jarg1, _GList jarg1_, long jarg2);
  public final static native long g_list_find(long jarg1, _GList jarg1_, long jarg2);
  public final static native long g_list_find_custom(long jarg1, _GList jarg1_, long jarg2, long jarg3);
  public final static native int g_list_position(long jarg1, _GList jarg1_, long jarg2, _GList jarg2_);
  public final static native int g_list_index(long jarg1, _GList jarg1_, long jarg2);
  public final static native long g_list_last(long jarg1, _GList jarg1_);
  public final static native long g_list_first(long jarg1, _GList jarg1_);
  public final static native long g_list_length(long jarg1, _GList jarg1_);
  public final static native void g_list_foreach(long jarg1, _GList jarg1_, long jarg2, long jarg3);
  public final static native long g_list_sort(long jarg1, _GList jarg1_, long jarg2);
  public final static native long g_list_sort_with_data(long jarg1, _GList jarg1_, long jarg2, long jarg3);
  public final static native long g_list_nth_data(long jarg1, _GList jarg1_, long jarg2);
  public final static native void _GHashTableIter_dummy1_set(long jarg1, _GHashTableIter jarg1_, long jarg2);
  public final static native long _GHashTableIter_dummy1_get(long jarg1, _GHashTableIter jarg1_);
  public final static native void _GHashTableIter_dummy2_set(long jarg1, _GHashTableIter jarg1_, long jarg2);
  public final static native long _GHashTableIter_dummy2_get(long jarg1, _GHashTableIter jarg1_);
  public final static native void _GHashTableIter_dummy3_set(long jarg1, _GHashTableIter jarg1_, long jarg2);
  public final static native long _GHashTableIter_dummy3_get(long jarg1, _GHashTableIter jarg1_);
  public final static native void _GHashTableIter_dummy4_set(long jarg1, _GHashTableIter jarg1_, int jarg2);
  public final static native int _GHashTableIter_dummy4_get(long jarg1, _GHashTableIter jarg1_);
  public final static native void _GHashTableIter_dummy5_set(long jarg1, _GHashTableIter jarg1_, int jarg2);
  public final static native int _GHashTableIter_dummy5_get(long jarg1, _GHashTableIter jarg1_);
  public final static native void _GHashTableIter_dummy6_set(long jarg1, _GHashTableIter jarg1_, long jarg2);
  public final static native long _GHashTableIter_dummy6_get(long jarg1, _GHashTableIter jarg1_);
  public final static native long new__GHashTableIter();
  public final static native void delete__GHashTableIter(long jarg1);
  public final static native long g_hash_table_new(long jarg1, long jarg2);
  public final static native long g_hash_table_new_full(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void g_hash_table_destroy(long jarg1);
  public final static native int g_hash_table_insert(long jarg1, long jarg2, long jarg3);
  public final static native int g_hash_table_replace(long jarg1, long jarg2, long jarg3);
  public final static native int g_hash_table_add(long jarg1, long jarg2);
  public final static native int g_hash_table_remove(long jarg1, long jarg2);
  public final static native void g_hash_table_remove_all(long jarg1);
  public final static native int g_hash_table_steal(long jarg1, long jarg2);
  public final static native void g_hash_table_steal_all(long jarg1);
  public final static native long g_hash_table_lookup(long jarg1, long jarg2);
  public final static native int g_hash_table_contains(long jarg1, long jarg2);
  public final static native int g_hash_table_lookup_extended(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void g_hash_table_foreach(long jarg1, long jarg2, long jarg3);
  public final static native long g_hash_table_find(long jarg1, long jarg2, long jarg3);
  public final static native long g_hash_table_foreach_remove(long jarg1, long jarg2, long jarg3);
  public final static native long g_hash_table_foreach_steal(long jarg1, long jarg2, long jarg3);
  public final static native long g_hash_table_size(long jarg1);
  public final static native long g_hash_table_get_keys(long jarg1);
  public final static native long g_hash_table_get_values(long jarg1);
  public final static native long g_hash_table_get_keys_as_array(long jarg1, long jarg2);
  public final static native void g_hash_table_iter_init(long jarg1, _GHashTableIter jarg1_, long jarg2);
  public final static native int g_hash_table_iter_next(long jarg1, _GHashTableIter jarg1_, long jarg2, long jarg3);
  public final static native long g_hash_table_iter_get_hash_table(long jarg1, _GHashTableIter jarg1_);
  public final static native void g_hash_table_iter_remove(long jarg1, _GHashTableIter jarg1_);
  public final static native void g_hash_table_iter_replace(long jarg1, _GHashTableIter jarg1_, long jarg2);
  public final static native void g_hash_table_iter_steal(long jarg1, _GHashTableIter jarg1_);
  public final static native long g_hash_table_ref(long jarg1);
  public final static native void g_hash_table_unref(long jarg1);
  public final static native int g_str_equal(long jarg1, long jarg2);
  public final static native long g_str_hash(long jarg1);
  public final static native int g_int_equal(long jarg1, long jarg2);
  public final static native long g_int_hash(long jarg1);
  public final static native int g_int64_equal(long jarg1, long jarg2);
  public final static native long g_int64_hash(long jarg1);
  public final static native int g_double_equal(long jarg1, long jarg2);
  public final static native long g_double_hash(long jarg1);
  public final static native long g_direct_hash(long jarg1);
  public final static native int g_direct_equal(long jarg1, long jarg2);
  public final static native long g_hmac_new(int jarg1, long jarg2, java.math.BigInteger jarg3);
  public final static native long g_hmac_copy(long jarg1);
  public final static native long g_hmac_ref(long jarg1);
  public final static native void g_hmac_unref(long jarg1);
  public final static native void g_hmac_update(long jarg1, long jarg2, long jarg3);
  public final static native String g_hmac_get_string(long jarg1);
  public final static native void g_hmac_get_digest(long jarg1, long jarg2, long jarg3);
  public final static native String g_compute_hmac_for_data(int jarg1, long jarg2, java.math.BigInteger jarg3, long jarg4, java.math.BigInteger jarg5);
  public final static native String g_compute_hmac_for_string(int jarg1, long jarg2, java.math.BigInteger jarg3, String jarg4, long jarg5);
  public final static native String g_compute_hmac_for_bytes(int jarg1, long jarg2, long jarg3);
  public final static native int G_HOOK_FLAG_ACTIVE_get();
  public final static native int G_HOOK_FLAG_IN_CALL_get();
  public final static native int G_HOOK_FLAG_MASK_get();
  public final static native int G_HOOK_FLAG_USER_SHIFT_get();
  public final static native void _GHookList_seq_id_set(long jarg1, _GHookList jarg1_, long jarg2);
  public final static native long _GHookList_seq_id_get(long jarg1, _GHookList jarg1_);
  public final static native void _GHookList_hook_size_set(long jarg1, _GHookList jarg1_, long jarg2);
  public final static native long _GHookList_hook_size_get(long jarg1, _GHookList jarg1_);
  public final static native void _GHookList_is_setup_set(long jarg1, _GHookList jarg1_, long jarg2);
  public final static native long _GHookList_is_setup_get(long jarg1, _GHookList jarg1_);
  public final static native void _GHookList_hooks_set(long jarg1, _GHookList jarg1_, long jarg2, _GHook jarg2_);
  public final static native long _GHookList_hooks_get(long jarg1, _GHookList jarg1_);
  public final static native void _GHookList_dummy3_set(long jarg1, _GHookList jarg1_, long jarg2);
  public final static native long _GHookList_dummy3_get(long jarg1, _GHookList jarg1_);
  public final static native void _GHookList_finalize_hook_set(long jarg1, _GHookList jarg1_, long jarg2);
  public final static native long _GHookList_finalize_hook_get(long jarg1, _GHookList jarg1_);
  public final static native void _GHookList_dummy_set(long jarg1, _GHookList jarg1_, long jarg2);
  public final static native long _GHookList_dummy_get(long jarg1, _GHookList jarg1_);
  public final static native long new__GHookList();
  public final static native void delete__GHookList(long jarg1);
  public final static native void _GHook_data_set(long jarg1, _GHook jarg1_, long jarg2);
  public final static native long _GHook_data_get(long jarg1, _GHook jarg1_);
  public final static native void _GHook_next_set(long jarg1, _GHook jarg1_, long jarg2, _GHook jarg2_);
  public final static native long _GHook_next_get(long jarg1, _GHook jarg1_);
  public final static native void _GHook_prev_set(long jarg1, _GHook jarg1_, long jarg2, _GHook jarg2_);
  public final static native long _GHook_prev_get(long jarg1, _GHook jarg1_);
  public final static native void _GHook_ref_count_set(long jarg1, _GHook jarg1_, long jarg2);
  public final static native long _GHook_ref_count_get(long jarg1, _GHook jarg1_);
  public final static native void _GHook_hook_id_set(long jarg1, _GHook jarg1_, long jarg2);
  public final static native long _GHook_hook_id_get(long jarg1, _GHook jarg1_);
  public final static native void _GHook_flags_set(long jarg1, _GHook jarg1_, long jarg2);
  public final static native long _GHook_flags_get(long jarg1, _GHook jarg1_);
  public final static native void _GHook_func_set(long jarg1, _GHook jarg1_, long jarg2);
  public final static native long _GHook_func_get(long jarg1, _GHook jarg1_);
  public final static native void _GHook_destroy_set(long jarg1, _GHook jarg1_, long jarg2);
  public final static native long _GHook_destroy_get(long jarg1, _GHook jarg1_);
  public final static native long new__GHook();
  public final static native void delete__GHook(long jarg1);
  public final static native void g_hook_list_init(long jarg1, _GHookList jarg1_, long jarg2);
  public final static native void g_hook_list_clear(long jarg1, _GHookList jarg1_);
  public final static native long g_hook_alloc(long jarg1, _GHookList jarg1_);
  public final static native void g_hook_free(long jarg1, _GHookList jarg1_, long jarg2, _GHook jarg2_);
  public final static native long g_hook_ref(long jarg1, _GHookList jarg1_, long jarg2, _GHook jarg2_);
  public final static native void g_hook_unref(long jarg1, _GHookList jarg1_, long jarg2, _GHook jarg2_);
  public final static native int g_hook_destroy(long jarg1, _GHookList jarg1_, long jarg2);
  public final static native void g_hook_destroy_link(long jarg1, _GHookList jarg1_, long jarg2, _GHook jarg2_);
  public final static native void g_hook_prepend(long jarg1, _GHookList jarg1_, long jarg2, _GHook jarg2_);
  public final static native void g_hook_insert_before(long jarg1, _GHookList jarg1_, long jarg2, _GHook jarg2_, long jarg3, _GHook jarg3_);
  public final static native void g_hook_insert_sorted(long jarg1, _GHookList jarg1_, long jarg2, _GHook jarg2_, long jarg3);
  public final static native long g_hook_get(long jarg1, _GHookList jarg1_, long jarg2);
  public final static native long g_hook_find(long jarg1, _GHookList jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native long g_hook_find_data(long jarg1, _GHookList jarg1_, int jarg2, long jarg3);
  public final static native long g_hook_find_func(long jarg1, _GHookList jarg1_, int jarg2, long jarg3);
  public final static native long g_hook_find_func_data(long jarg1, _GHookList jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native long g_hook_first_valid(long jarg1, _GHookList jarg1_, int jarg2);
  public final static native long g_hook_next_valid(long jarg1, _GHookList jarg1_, long jarg2, _GHook jarg2_, int jarg3);
  public final static native int g_hook_compare_ids(long jarg1, _GHook jarg1_, long jarg2, _GHook jarg2_);
  public final static native void g_hook_list_invoke(long jarg1, _GHookList jarg1_, int jarg2);
  public final static native void g_hook_list_invoke_check(long jarg1, _GHookList jarg1_, int jarg2);
  public final static native void g_hook_list_marshal(long jarg1, _GHookList jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void g_hook_list_marshal_check(long jarg1, _GHookList jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native int g_hostname_is_non_ascii(String jarg1);
  public final static native int g_hostname_is_ascii_encoded(String jarg1);
  public final static native int g_hostname_is_ip_address(String jarg1);
  public final static native String g_hostname_to_ascii(String jarg1);
  public final static native String g_hostname_to_unicode(String jarg1);
  public final static native void _GPollFD_fd_set(long jarg1, _GPollFD jarg1_, long jarg2);
  public final static native long _GPollFD_fd_get(long jarg1, _GPollFD jarg1_);
  public final static native void _GPollFD_events_set(long jarg1, _GPollFD jarg1_, int jarg2);
  public final static native int _GPollFD_events_get(long jarg1, _GPollFD jarg1_);
  public final static native void _GPollFD_revents_set(long jarg1, _GPollFD jarg1_, int jarg2);
  public final static native int _GPollFD_revents_get(long jarg1, _GPollFD jarg1_);
  public final static native long new__GPollFD();
  public final static native void delete__GPollFD(long jarg1);
  public final static native int g_poll(long jarg1, _GPollFD jarg1_, long jarg2, int jarg3);
  public final static native void _GSList_data_set(long jarg1, _GSList jarg1_, long jarg2);
  public final static native long _GSList_data_get(long jarg1, _GSList jarg1_);
  public final static native void _GSList_next_set(long jarg1, _GSList jarg1_, long jarg2, _GSList jarg2_);
  public final static native long _GSList_next_get(long jarg1, _GSList jarg1_);
  public final static native long new__GSList();
  public final static native void delete__GSList(long jarg1);
  public final static native long g_slist_alloc();
  public final static native void g_slist_free(long jarg1, _GSList jarg1_);
  public final static native void g_slist_free_1(long jarg1, _GSList jarg1_);
  public final static native void g_slist_free_full(long jarg1, _GSList jarg1_, long jarg2);
  public final static native long g_slist_append(long jarg1, _GSList jarg1_, long jarg2);
  public final static native long g_slist_prepend(long jarg1, _GSList jarg1_, long jarg2);
  public final static native long g_slist_insert(long jarg1, _GSList jarg1_, long jarg2, int jarg3);
  public final static native long g_slist_insert_sorted(long jarg1, _GSList jarg1_, long jarg2, long jarg3);
  public final static native long g_slist_insert_sorted_with_data(long jarg1, _GSList jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long g_slist_insert_before(long jarg1, _GSList jarg1_, long jarg2, _GSList jarg2_, long jarg3);
  public final static native long g_slist_concat(long jarg1, _GSList jarg1_, long jarg2, _GSList jarg2_);
  public final static native long g_slist_remove(long jarg1, _GSList jarg1_, long jarg2);
  public final static native long g_slist_remove_all(long jarg1, _GSList jarg1_, long jarg2);
  public final static native long g_slist_remove_link(long jarg1, _GSList jarg1_, long jarg2, _GSList jarg2_);
  public final static native long g_slist_delete_link(long jarg1, _GSList jarg1_, long jarg2, _GSList jarg2_);
  public final static native long g_slist_reverse(long jarg1, _GSList jarg1_);
  public final static native long g_slist_copy(long jarg1, _GSList jarg1_);
  public final static native long g_slist_copy_deep(long jarg1, _GSList jarg1_, long jarg2, long jarg3);
  public final static native long g_slist_nth(long jarg1, _GSList jarg1_, long jarg2);
  public final static native long g_slist_find(long jarg1, _GSList jarg1_, long jarg2);
  public final static native long g_slist_find_custom(long jarg1, _GSList jarg1_, long jarg2, long jarg3);
  public final static native int g_slist_position(long jarg1, _GSList jarg1_, long jarg2, _GSList jarg2_);
  public final static native int g_slist_index(long jarg1, _GSList jarg1_, long jarg2);
  public final static native long g_slist_last(long jarg1, _GSList jarg1_);
  public final static native long g_slist_length(long jarg1, _GSList jarg1_);
  public final static native void g_slist_foreach(long jarg1, _GSList jarg1_, long jarg2, long jarg3);
  public final static native long g_slist_sort(long jarg1, _GSList jarg1_, long jarg2);
  public final static native long g_slist_sort_with_data(long jarg1, _GSList jarg1_, long jarg2, long jarg3);
  public final static native long g_slist_nth_data(long jarg1, _GSList jarg1_, long jarg2);
  public final static native int G_IO_IN_get();
  public final static native int G_IO_OUT_get();
  public final static native int G_IO_PRI_get();
  public final static native int G_IO_ERR_get();
  public final static native int G_IO_HUP_get();
  public final static native int G_IO_NVAL_get();
  public final static native void _GSource_callback_data_set(long jarg1, _GSource jarg1_, long jarg2);
  public final static native long _GSource_callback_data_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_callback_funcs_set(long jarg1, _GSource jarg1_, long jarg2, _GSourceCallbackFuncs jarg2_);
  public final static native long _GSource_callback_funcs_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_source_funcs_set(long jarg1, _GSource jarg1_, long jarg2, _GSourceFuncs jarg2_);
  public final static native long _GSource_source_funcs_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_ref_count_set(long jarg1, _GSource jarg1_, long jarg2);
  public final static native long _GSource_ref_count_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_context_set(long jarg1, _GSource jarg1_, long jarg2);
  public final static native long _GSource_context_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_priority_set(long jarg1, _GSource jarg1_, int jarg2);
  public final static native int _GSource_priority_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_flags_set(long jarg1, _GSource jarg1_, long jarg2);
  public final static native long _GSource_flags_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_source_id_set(long jarg1, _GSource jarg1_, long jarg2);
  public final static native long _GSource_source_id_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_poll_fds_set(long jarg1, _GSource jarg1_, long jarg2, _GSList jarg2_);
  public final static native long _GSource_poll_fds_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_prev_set(long jarg1, _GSource jarg1_, long jarg2, _GSource jarg2_);
  public final static native long _GSource_prev_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_next_set(long jarg1, _GSource jarg1_, long jarg2, _GSource jarg2_);
  public final static native long _GSource_next_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_name_set(long jarg1, _GSource jarg1_, String jarg2);
  public final static native String _GSource_name_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_priv_set(long jarg1, _GSource jarg1_, long jarg2);
  public final static native long _GSource_priv_get(long jarg1, _GSource jarg1_);
  public final static native long new__GSource();
  public final static native void delete__GSource(long jarg1);
  public final static native void _GSourceCallbackFuncs_ref_set(long jarg1, _GSourceCallbackFuncs jarg1_, long jarg2);
  public final static native long _GSourceCallbackFuncs_ref_get(long jarg1, _GSourceCallbackFuncs jarg1_);
  public final static native void _GSourceCallbackFuncs_unref_set(long jarg1, _GSourceCallbackFuncs jarg1_, long jarg2);
  public final static native long _GSourceCallbackFuncs_unref_get(long jarg1, _GSourceCallbackFuncs jarg1_);
  public final static native void _GSourceCallbackFuncs_get_set(long jarg1, _GSourceCallbackFuncs jarg1_, long jarg2);
  public final static native long _GSourceCallbackFuncs_get_get(long jarg1, _GSourceCallbackFuncs jarg1_);
  public final static native long new__GSourceCallbackFuncs();
  public final static native void delete__GSourceCallbackFuncs(long jarg1);
  public final static native void _GSourceFuncs_prepare_set(long jarg1, _GSourceFuncs jarg1_, long jarg2);
  public final static native long _GSourceFuncs_prepare_get(long jarg1, _GSourceFuncs jarg1_);
  public final static native void _GSourceFuncs_check_set(long jarg1, _GSourceFuncs jarg1_, long jarg2);
  public final static native long _GSourceFuncs_check_get(long jarg1, _GSourceFuncs jarg1_);
  public final static native void _GSourceFuncs_dispatch_set(long jarg1, _GSourceFuncs jarg1_, long jarg2);
  public final static native long _GSourceFuncs_dispatch_get(long jarg1, _GSourceFuncs jarg1_);
  public final static native void _GSourceFuncs_finalize_set(long jarg1, _GSourceFuncs jarg1_, long jarg2);
  public final static native long _GSourceFuncs_finalize_get(long jarg1, _GSourceFuncs jarg1_);
  public final static native void _GSourceFuncs_closure_callback_set(long jarg1, _GSourceFuncs jarg1_, long jarg2);
  public final static native long _GSourceFuncs_closure_callback_get(long jarg1, _GSourceFuncs jarg1_);
  public final static native void _GSourceFuncs_closure_marshal_set(long jarg1, _GSourceFuncs jarg1_, long jarg2);
  public final static native long _GSourceFuncs_closure_marshal_get(long jarg1, _GSourceFuncs jarg1_);
  public final static native long new__GSourceFuncs();
  public final static native void delete__GSourceFuncs(long jarg1);
  public final static native int G_PRIORITY_HIGH_get();
  public final static native int G_PRIORITY_DEFAULT_get();
  public final static native int G_PRIORITY_HIGH_IDLE_get();
  public final static native int G_PRIORITY_DEFAULT_IDLE_get();
  public final static native int G_PRIORITY_LOW_get();
  public final static native int G_SOURCE_REMOVE_get();
  public final static native int G_SOURCE_CONTINUE_get();
  public final static native long g_main_context_new();
  public final static native long g_main_context_ref(long jarg1);
  public final static native void g_main_context_unref(long jarg1);
  public final static native long g_main_context_default();
  public final static native int g_main_context_iteration(long jarg1, int jarg2);
  public final static native int g_main_context_pending(long jarg1);
  public final static native long g_main_context_find_source_by_id(long jarg1, long jarg2);
  public final static native long g_main_context_find_source_by_user_data(long jarg1, long jarg2);
  public final static native long g_main_context_find_source_by_funcs_user_data(long jarg1, long jarg2, _GSourceFuncs jarg2_, long jarg3);
  public final static native void g_main_context_wakeup(long jarg1);
  public final static native int g_main_context_acquire(long jarg1);
  public final static native void g_main_context_release(long jarg1);
  public final static native int g_main_context_is_owner(long jarg1);
  public final static native int g_main_context_wait(long jarg1, long jarg2, _GCond jarg2_, long jarg3, _GMutex jarg3_);
  public final static native int g_main_context_prepare(long jarg1, long jarg2);
  public final static native int g_main_context_query(long jarg1, int jarg2, long jarg3, long jarg4, _GPollFD jarg4_, int jarg5);
  public final static native int g_main_context_check(long jarg1, int jarg2, long jarg3, _GPollFD jarg3_, int jarg4);
  public final static native void g_main_context_dispatch(long jarg1);
  public final static native void g_main_context_set_poll_func(long jarg1, long jarg2);
  public final static native long g_main_context_get_poll_func(long jarg1);
  public final static native void g_main_context_add_poll(long jarg1, long jarg2, _GPollFD jarg2_, int jarg3);
  public final static native void g_main_context_remove_poll(long jarg1, long jarg2, _GPollFD jarg2_);
  public final static native int g_main_depth();
  public final static native long g_main_current_source();
  public final static native void g_main_context_push_thread_default(long jarg1);
  public final static native void g_main_context_pop_thread_default(long jarg1);
  public final static native long g_main_context_get_thread_default();
  public final static native long g_main_context_ref_thread_default();
  public final static native long g_main_loop_new(long jarg1, int jarg2);
  public final static native void g_main_loop_run(long jarg1);
  public final static native void g_main_loop_quit(long jarg1);
  public final static native long g_main_loop_ref(long jarg1);
  public final static native void g_main_loop_unref(long jarg1);
  public final static native int g_main_loop_is_running(long jarg1);
  public final static native long g_main_loop_get_context(long jarg1);
  public final static native long g_source_new(long jarg1, _GSourceFuncs jarg1_, long jarg2);
  public final static native long g_source_ref(long jarg1, _GSource jarg1_);
  public final static native void g_source_unref(long jarg1, _GSource jarg1_);
  public final static native long g_source_attach(long jarg1, _GSource jarg1_, long jarg2);
  public final static native void g_source_destroy(long jarg1, _GSource jarg1_);
  public final static native void g_source_set_priority(long jarg1, _GSource jarg1_, int jarg2);
  public final static native int g_source_get_priority(long jarg1, _GSource jarg1_);
  public final static native void g_source_set_can_recurse(long jarg1, _GSource jarg1_, int jarg2);
  public final static native int g_source_get_can_recurse(long jarg1, _GSource jarg1_);
  public final static native long g_source_get_id(long jarg1, _GSource jarg1_);
  public final static native long g_source_get_context(long jarg1, _GSource jarg1_);
  public final static native void g_source_set_callback(long jarg1, _GSource jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void g_source_set_funcs(long jarg1, _GSource jarg1_, long jarg2, _GSourceFuncs jarg2_);
  public final static native int g_source_is_destroyed(long jarg1, _GSource jarg1_);
  public final static native void g_source_set_name(long jarg1, _GSource jarg1_, String jarg2);
  public final static native String g_source_get_name(long jarg1, _GSource jarg1_);
  public final static native void g_source_set_name_by_id(long jarg1, String jarg2);
  public final static native void g_source_set_ready_time(long jarg1, _GSource jarg1_, long jarg2);
  public final static native long g_source_get_ready_time(long jarg1, _GSource jarg1_);
  public final static native void g_source_set_callback_indirect(long jarg1, _GSource jarg1_, long jarg2, long jarg3, _GSourceCallbackFuncs jarg3_);
  public final static native void g_source_add_poll(long jarg1, _GSource jarg1_, long jarg2, _GPollFD jarg2_);
  public final static native void g_source_remove_poll(long jarg1, _GSource jarg1_, long jarg2, _GPollFD jarg2_);
  public final static native void g_source_add_child_source(long jarg1, _GSource jarg1_, long jarg2, _GSource jarg2_);
  public final static native void g_source_remove_child_source(long jarg1, _GSource jarg1_, long jarg2, _GSource jarg2_);
  public final static native void g_source_get_current_time(long jarg1, _GSource jarg1_, long jarg2, _GTimeVal jarg2_);
  public final static native long g_source_get_time(long jarg1, _GSource jarg1_);
  public final static native long g_idle_source_new();
  public final static native long g_child_watch_source_new(long jarg1);
  public final static native long g_timeout_source_new(long jarg1);
  public final static native long g_timeout_source_new_seconds(long jarg1);
  public final static native void g_get_current_time(long jarg1, _GTimeVal jarg1_);
  public final static native long g_get_monotonic_time();
  public final static native long g_get_real_time();
  public final static native int g_source_remove(long jarg1);
  public final static native int g_source_remove_by_user_data(long jarg1);
  public final static native int g_source_remove_by_funcs_user_data(long jarg1, _GSourceFuncs jarg1_, long jarg2);
  public final static native long g_timeout_add_full(int jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long g_timeout_add(long jarg1, long jarg2, long jarg3);
  public final static native long g_timeout_add_seconds_full(int jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long g_timeout_add_seconds(long jarg1, long jarg2, long jarg3);
  public final static native long g_child_watch_add_full(int jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long g_child_watch_add(long jarg1, long jarg2, long jarg3);
  public final static native long g_idle_add(long jarg1, long jarg2);
  public final static native long g_idle_add_full(int jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int g_idle_remove_by_data(long jarg1);
  public final static native void g_main_context_invoke_full(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void g_main_context_invoke(long jarg1, long jarg2, long jarg3);
  public final static native void g_timeout_funcs_set(long jarg1, _GSourceFuncs jarg1_);
  public final static native long g_timeout_funcs_get();
  public final static native void g_child_watch_funcs_set(long jarg1, _GSourceFuncs jarg1_);
  public final static native long g_child_watch_funcs_get();
  public final static native void g_idle_funcs_set(long jarg1, _GSourceFuncs jarg1_);
  public final static native long g_idle_funcs_get();
  public final static native int G_UNICODE_SCRIPT_INVALID_CODE_get();
  public final static native int G_UNICODE_SCRIPT_COMMON_get();
  public final static native long g_unicode_script_to_iso15924(int jarg1);
  public final static native int g_unicode_script_from_iso15924(long jarg1);
  public final static native int g_unichar_isalnum(long jarg1);
  public final static native int g_unichar_isalpha(long jarg1);
  public final static native int g_unichar_iscntrl(long jarg1);
  public final static native int g_unichar_isdigit(long jarg1);
  public final static native int g_unichar_isgraph(long jarg1);
  public final static native int g_unichar_islower(long jarg1);
  public final static native int g_unichar_isprint(long jarg1);
  public final static native int g_unichar_ispunct(long jarg1);
  public final static native int g_unichar_isspace(long jarg1);
  public final static native int g_unichar_isupper(long jarg1);
  public final static native int g_unichar_isxdigit(long jarg1);
  public final static native int g_unichar_istitle(long jarg1);
  public final static native int g_unichar_isdefined(long jarg1);
  public final static native int g_unichar_iswide(long jarg1);
  public final static native int g_unichar_iswide_cjk(long jarg1);
  public final static native int g_unichar_iszerowidth(long jarg1);
  public final static native int g_unichar_ismark(long jarg1);
  public final static native long g_unichar_toupper(long jarg1);
  public final static native long g_unichar_tolower(long jarg1);
  public final static native long g_unichar_totitle(long jarg1);
  public final static native int g_unichar_digit_value(long jarg1);
  public final static native int g_unichar_xdigit_value(long jarg1);
  public final static native int g_unichar_type(long jarg1);
  public final static native int g_unichar_break_type(long jarg1);
  public final static native int g_unichar_combining_class(long jarg1);
  public final static native int g_unichar_get_mirror_char(long jarg1, long jarg2);
  public final static native int g_unichar_get_script(long jarg1);
  public final static native int g_unichar_validate(long jarg1);
  public final static native int g_unichar_compose(long jarg1, long jarg2, long jarg3);
  public final static native int g_unichar_decompose(long jarg1, long jarg2, long jarg3);
  public final static native java.math.BigInteger g_unichar_fully_decompose(long jarg1, int jarg2, long jarg3, java.math.BigInteger jarg4);
  public final static native int G_UNICHAR_MAX_DECOMPOSITION_LENGTH_get();
  public final static native void g_unicode_canonical_ordering(long jarg1, java.math.BigInteger jarg2);
  public final static native long g_unicode_canonical_decomposition(long jarg1, long jarg2);
  public final static native String g_utf8_skip_get();
  public final static native long g_utf8_get_char(String jarg1);
  public final static native long g_utf8_get_char_validated(String jarg1, long jarg2);
  public final static native String g_utf8_offset_to_pointer(String jarg1, int jarg2);
  public final static native int g_utf8_pointer_to_offset(String jarg1, String jarg2);
  public final static native String g_utf8_prev_char(String jarg1);
  public final static native String g_utf8_find_next_char(String jarg1, String jarg2);
  public final static native String g_utf8_find_prev_char(String jarg1, String jarg2);
  public final static native int g_utf8_strlen(String jarg1, long jarg2);
  public final static native String g_utf8_substring(String jarg1, int jarg2, int jarg3);
  public final static native String g_utf8_strncpy(String jarg1, String jarg2, java.math.BigInteger jarg3);
  public final static native String g_utf8_strchr(String jarg1, long jarg2, long jarg3);
  public final static native String g_utf8_strrchr(String jarg1, long jarg2, long jarg3);
  public final static native String g_utf8_strreverse(String jarg1, long jarg2);
  public final static native long g_utf8_to_utf16(String jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long g_utf8_to_ucs4(String jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long g_utf8_to_ucs4_fast(String jarg1, int jarg2, long jarg3);
  public final static native long g_utf16_to_ucs4(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native String g_utf16_to_utf8(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long g_ucs4_to_utf16(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native String g_ucs4_to_utf8(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int g_unichar_to_utf8(long jarg1, String jarg2);
  public final static native int g_utf8_validate(String jarg1, long jarg2, long jarg3);
  public final static native String g_utf8_strup(String jarg1, long jarg2);
  public final static native String g_utf8_strdown(String jarg1, long jarg2);
  public final static native String g_utf8_casefold(String jarg1, long jarg2);
  public final static native int G_NORMALIZE_NFD_get();
  public final static native int G_NORMALIZE_NFC_get();
  public final static native int G_NORMALIZE_NFKD_get();
  public final static native int G_NORMALIZE_NFKC_get();
  public final static native String g_utf8_normalize(String jarg1, long jarg2, int jarg3);
  public final static native int g_utf8_collate(String jarg1, String jarg2);
  public final static native String g_utf8_collate_key(String jarg1, long jarg2);
  public final static native String g_utf8_collate_key_for_filename(String jarg1, long jarg2);
  public final static native String g_utf8_make_valid(String jarg1, long jarg2);
  public final static native void _GString_str_set(long jarg1, _GString jarg1_, String jarg2);
  public final static native String _GString_str_get(long jarg1, _GString jarg1_);
  public final static native void _GString_len_set(long jarg1, _GString jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GString_len_get(long jarg1, _GString jarg1_);
  public final static native void _GString_allocated_len_set(long jarg1, _GString jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GString_allocated_len_get(long jarg1, _GString jarg1_);
  public final static native long new__GString();
  public final static native void delete__GString(long jarg1);
  public final static native long g_string_new(String jarg1);
  public final static native long g_string_new_len(String jarg1, long jarg2);
  public final static native long g_string_sized_new(java.math.BigInteger jarg1);
  public final static native String g_string_free(long jarg1, _GString jarg1_, int jarg2);
  public final static native long g_string_free_to_bytes(long jarg1, _GString jarg1_);
  public final static native int g_string_equal(long jarg1, _GString jarg1_, long jarg2, _GString jarg2_);
  public final static native long g_string_hash(long jarg1, _GString jarg1_);
  public final static native long g_string_assign(long jarg1, _GString jarg1_, String jarg2);
  public final static native long g_string_truncate(long jarg1, _GString jarg1_, java.math.BigInteger jarg2);
  public final static native long g_string_set_size(long jarg1, _GString jarg1_, java.math.BigInteger jarg2);
  public final static native long g_string_insert_len(long jarg1, _GString jarg1_, long jarg2, String jarg3, long jarg4);
  public final static native long g_string_append(long jarg1, _GString jarg1_, String jarg2);
  public final static native long g_string_append_len(long jarg1, _GString jarg1_, String jarg2, long jarg3);
  public final static native long g_string_append_c(long jarg1, _GString jarg1_, char jarg2);
  public final static native long g_string_append_unichar(long jarg1, _GString jarg1_, long jarg2);
  public final static native long g_string_prepend(long jarg1, _GString jarg1_, String jarg2);
  public final static native long g_string_prepend_c(long jarg1, _GString jarg1_, char jarg2);
  public final static native long g_string_prepend_unichar(long jarg1, _GString jarg1_, long jarg2);
  public final static native long g_string_prepend_len(long jarg1, _GString jarg1_, String jarg2, long jarg3);
  public final static native long g_string_insert(long jarg1, _GString jarg1_, long jarg2, String jarg3);
  public final static native long g_string_insert_c(long jarg1, _GString jarg1_, long jarg2, char jarg3);
  public final static native long g_string_insert_unichar(long jarg1, _GString jarg1_, long jarg2, long jarg3);
  public final static native long g_string_overwrite(long jarg1, _GString jarg1_, java.math.BigInteger jarg2, String jarg3);
  public final static native long g_string_overwrite_len(long jarg1, _GString jarg1_, java.math.BigInteger jarg2, String jarg3, long jarg4);
  public final static native long g_string_erase(long jarg1, _GString jarg1_, long jarg2, long jarg3);
  public final static native long g_string_ascii_down(long jarg1, _GString jarg1_);
  public final static native long g_string_ascii_up(long jarg1, _GString jarg1_);
  public final static native void g_string_vprintf(long jarg1, _GString jarg1_, String jarg2, long jarg3);
  public final static native void g_string_printf(long jarg1, _GString jarg1_, String jarg2);
  public final static native void g_string_append_vprintf(long jarg1, _GString jarg1_, String jarg2, long jarg3);
  public final static native void g_string_append_printf(long jarg1, _GString jarg1_, String jarg2);
  public final static native long g_string_append_uri_escaped(long jarg1, _GString jarg1_, String jarg2, String jarg3, int jarg4);
  public final static native long g_string_append_c_inline(long jarg1, _GString jarg1_, char jarg2);
  public final static native long g_string_down(long jarg1, _GString jarg1_);
  public final static native long g_string_up(long jarg1, _GString jarg1_);
  public final static native int G_IO_FLAG_APPEND_get();
  public final static native int G_IO_FLAG_NONBLOCK_get();
  public final static native int G_IO_FLAG_IS_READABLE_get();
  public final static native int G_IO_FLAG_IS_WRITABLE_get();
  public final static native int G_IO_FLAG_IS_WRITEABLE_get();
  public final static native int G_IO_FLAG_IS_SEEKABLE_get();
  public final static native int G_IO_FLAG_MASK_get();
  public final static native int G_IO_FLAG_GET_MASK_get();
  public final static native int G_IO_FLAG_SET_MASK_get();
  public final static native void _GIOChannel_ref_count_set(long jarg1, _GIOChannel jarg1_, int jarg2);
  public final static native int _GIOChannel_ref_count_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_funcs_set(long jarg1, _GIOChannel jarg1_, long jarg2, _GIOFuncs jarg2_);
  public final static native long _GIOChannel_funcs_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_encoding_set(long jarg1, _GIOChannel jarg1_, String jarg2);
  public final static native String _GIOChannel_encoding_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_read_cd_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_read_cd_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_write_cd_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_write_cd_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_line_term_set(long jarg1, _GIOChannel jarg1_, String jarg2);
  public final static native String _GIOChannel_line_term_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_line_term_len_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_line_term_len_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_buf_size_set(long jarg1, _GIOChannel jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GIOChannel_buf_size_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_read_buf_set(long jarg1, _GIOChannel jarg1_, long jarg2, _GString jarg2_);
  public final static native long _GIOChannel_read_buf_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_encoded_read_buf_set(long jarg1, _GIOChannel jarg1_, long jarg2, _GString jarg2_);
  public final static native long _GIOChannel_encoded_read_buf_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_write_buf_set(long jarg1, _GIOChannel jarg1_, long jarg2, _GString jarg2_);
  public final static native long _GIOChannel_write_buf_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_partial_write_buf_set(long jarg1, _GIOChannel jarg1_, String jarg2);
  public final static native String _GIOChannel_partial_write_buf_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_use_buffer_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_use_buffer_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_do_encode_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_do_encode_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_close_on_unref_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_close_on_unref_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_is_readable_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_is_readable_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_is_writeable_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_is_writeable_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_is_seekable_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_is_seekable_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_reserved1_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_reserved1_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_reserved2_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_reserved2_get(long jarg1, _GIOChannel jarg1_);
  public final static native long new__GIOChannel();
  public final static native void delete__GIOChannel(long jarg1);
  public final static native void _GIOFuncs_io_read_set(long jarg1, _GIOFuncs jarg1_, long jarg2);
  public final static native long _GIOFuncs_io_read_get(long jarg1, _GIOFuncs jarg1_);
  public final static native void _GIOFuncs_io_write_set(long jarg1, _GIOFuncs jarg1_, long jarg2);
  public final static native long _GIOFuncs_io_write_get(long jarg1, _GIOFuncs jarg1_);
  public final static native void _GIOFuncs_io_seek_set(long jarg1, _GIOFuncs jarg1_, long jarg2);
  public final static native long _GIOFuncs_io_seek_get(long jarg1, _GIOFuncs jarg1_);
  public final static native void _GIOFuncs_io_close_set(long jarg1, _GIOFuncs jarg1_, long jarg2);
  public final static native long _GIOFuncs_io_close_get(long jarg1, _GIOFuncs jarg1_);
  public final static native void _GIOFuncs_io_create_watch_set(long jarg1, _GIOFuncs jarg1_, long jarg2);
  public final static native long _GIOFuncs_io_create_watch_get(long jarg1, _GIOFuncs jarg1_);
  public final static native void _GIOFuncs_io_free_set(long jarg1, _GIOFuncs jarg1_, long jarg2);
  public final static native long _GIOFuncs_io_free_get(long jarg1, _GIOFuncs jarg1_);
  public final static native void _GIOFuncs_io_set_flags_set(long jarg1, _GIOFuncs jarg1_, long jarg2);
  public final static native long _GIOFuncs_io_set_flags_get(long jarg1, _GIOFuncs jarg1_);
  public final static native void _GIOFuncs_io_get_flags_set(long jarg1, _GIOFuncs jarg1_, long jarg2);
  public final static native long _GIOFuncs_io_get_flags_get(long jarg1, _GIOFuncs jarg1_);
  public final static native long new__GIOFuncs();
  public final static native void delete__GIOFuncs(long jarg1);
  public final static native void g_io_channel_init(long jarg1, _GIOChannel jarg1_);
  public final static native long g_io_channel_ref(long jarg1, _GIOChannel jarg1_);
  public final static native void g_io_channel_unref(long jarg1, _GIOChannel jarg1_);
  public final static native int g_io_channel_read(long jarg1, _GIOChannel jarg1_, String jarg2, java.math.BigInteger jarg3, long jarg4);
  public final static native int g_io_channel_write(long jarg1, _GIOChannel jarg1_, String jarg2, java.math.BigInteger jarg3, long jarg4);
  public final static native int g_io_channel_seek(long jarg1, _GIOChannel jarg1_, long jarg2, int jarg3);
  public final static native void g_io_channel_close(long jarg1, _GIOChannel jarg1_);
  public final static native int g_io_channel_shutdown(long jarg1, _GIOChannel jarg1_, int jarg2, long jarg3);
  public final static native long g_io_add_watch_full(long jarg1, _GIOChannel jarg1_, int jarg2, int jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long g_io_create_watch(long jarg1, _GIOChannel jarg1_, int jarg2);
  public final static native long g_io_add_watch(long jarg1, _GIOChannel jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void g_io_channel_set_buffer_size(long jarg1, _GIOChannel jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger g_io_channel_get_buffer_size(long jarg1, _GIOChannel jarg1_);
  public final static native int g_io_channel_get_buffer_condition(long jarg1, _GIOChannel jarg1_);
  public final static native int g_io_channel_set_flags(long jarg1, _GIOChannel jarg1_, int jarg2, long jarg3);
  public final static native int g_io_channel_get_flags(long jarg1, _GIOChannel jarg1_);
  public final static native void g_io_channel_set_line_term(long jarg1, _GIOChannel jarg1_, String jarg2, int jarg3);
  public final static native String g_io_channel_get_line_term(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native void g_io_channel_set_buffered(long jarg1, _GIOChannel jarg1_, int jarg2);
  public final static native int g_io_channel_get_buffered(long jarg1, _GIOChannel jarg1_);
  public final static native int g_io_channel_set_encoding(long jarg1, _GIOChannel jarg1_, String jarg2, long jarg3);
  public final static native String g_io_channel_get_encoding(long jarg1, _GIOChannel jarg1_);
  public final static native void g_io_channel_set_close_on_unref(long jarg1, _GIOChannel jarg1_, int jarg2);
  public final static native int g_io_channel_get_close_on_unref(long jarg1, _GIOChannel jarg1_);
  public final static native int g_io_channel_flush(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native int g_io_channel_read_line(long jarg1, _GIOChannel jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int g_io_channel_read_line_string(long jarg1, _GIOChannel jarg1_, long jarg2, _GString jarg2_, long jarg3, long jarg4);
  public final static native int g_io_channel_read_to_end(long jarg1, _GIOChannel jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native int g_io_channel_read_chars(long jarg1, _GIOChannel jarg1_, String jarg2, java.math.BigInteger jarg3, long jarg4, long jarg5);
  public final static native int g_io_channel_read_unichar(long jarg1, _GIOChannel jarg1_, long jarg2, long jarg3);
  public final static native int g_io_channel_write_chars(long jarg1, _GIOChannel jarg1_, String jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int g_io_channel_write_unichar(long jarg1, _GIOChannel jarg1_, long jarg2, long jarg3);
  public final static native int g_io_channel_seek_position(long jarg1, _GIOChannel jarg1_, long jarg2, int jarg3, long jarg4);
  public final static native long g_io_channel_new_file(String jarg1, String jarg2, long jarg3);
  public final static native long g_io_channel_error_quark();
  public final static native int g_io_channel_error_from_errno(int jarg1);
  public final static native long g_io_channel_unix_new(int jarg1);
  public final static native int g_io_channel_unix_get_fd(long jarg1, _GIOChannel jarg1_);
  public final static native void g_io_watch_funcs_set(long jarg1, _GSourceFuncs jarg1_);
  public final static native long g_io_watch_funcs_get();
  public final static native int G_WIN32_MSG_HANDLE_get();
  public final static native void g_io_channel_win32_make_pollfd(long jarg1, _GIOChannel jarg1_, int jarg2, long jarg3, _GPollFD jarg3_);
  public final static native int g_io_channel_win32_poll(long jarg1, _GPollFD jarg1_, int jarg2, int jarg3);
  public final static native long g_io_channel_win32_new_messages(java.math.BigInteger jarg1);
  public final static native long g_io_channel_win32_new_fd(int jarg1);
  public final static native int g_io_channel_win32_get_fd(long jarg1, _GIOChannel jarg1_);
  public final static native long g_io_channel_win32_new_socket(int jarg1);
  public final static native void g_io_channel_win32_set_debug(long jarg1, _GIOChannel jarg1_, int jarg2);
  public final static native long g_io_channel_new_file_utf8(String jarg1, String jarg2, long jarg3);
  public final static native long g_key_file_error_quark();
  public final static native int G_KEY_FILE_NONE_get();
  public final static native int G_KEY_FILE_KEEP_COMMENTS_get();
  public final static native int G_KEY_FILE_KEEP_TRANSLATIONS_get();
  public final static native long g_key_file_new();
  public final static native long g_key_file_ref(long jarg1);
  public final static native void g_key_file_unref(long jarg1);
  public final static native void g_key_file_free(long jarg1);
  public final static native void g_key_file_set_list_separator(long jarg1, char jarg2);
  public final static native int g_key_file_load_from_file(long jarg1, String jarg2, int jarg3, long jarg4);
  public final static native int g_key_file_load_from_data(long jarg1, String jarg2, java.math.BigInteger jarg3, int jarg4, long jarg5);
  public final static native int g_key_file_load_from_bytes(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native int g_key_file_load_from_dirs(long jarg1, String jarg2, long jarg3, long jarg4, int jarg5, long jarg6);
  public final static native int g_key_file_load_from_data_dirs(long jarg1, String jarg2, long jarg3, int jarg4, long jarg5);
  public final static native String g_key_file_to_data(long jarg1, long jarg2, long jarg3);
  public final static native int g_key_file_save_to_file(long jarg1, String jarg2, long jarg3);
  public final static native String g_key_file_get_start_group(long jarg1);
  public final static native long g_key_file_get_groups(long jarg1, long jarg2);
  public final static native long g_key_file_get_keys(long jarg1, String jarg2, long jarg3, long jarg4);
  public final static native int g_key_file_has_group(long jarg1, String jarg2);
  public final static native int g_key_file_has_key(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native String g_key_file_get_value(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native void g_key_file_set_value(long jarg1, String jarg2, String jarg3, String jarg4);
  public final static native String g_key_file_get_string(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native void g_key_file_set_string(long jarg1, String jarg2, String jarg3, String jarg4);
  public final static native String g_key_file_get_locale_string(long jarg1, String jarg2, String jarg3, String jarg4, long jarg5);
  public final static native void g_key_file_set_locale_string(long jarg1, String jarg2, String jarg3, String jarg4, String jarg5);
  public final static native int g_key_file_get_boolean(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native void g_key_file_set_boolean(long jarg1, String jarg2, String jarg3, int jarg4);
  public final static native int g_key_file_get_integer(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native void g_key_file_set_integer(long jarg1, String jarg2, String jarg3, int jarg4);
  public final static native long g_key_file_get_int64(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native void g_key_file_set_int64(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native java.math.BigInteger g_key_file_get_uint64(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native void g_key_file_set_uint64(long jarg1, String jarg2, String jarg3, java.math.BigInteger jarg4);
  public final static native double g_key_file_get_double(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native void g_key_file_set_double(long jarg1, String jarg2, String jarg3, double jarg4);
  public final static native long g_key_file_get_string_list(long jarg1, String jarg2, String jarg3, long jarg4, long jarg5);
  public final static native void g_key_file_set_string_list(long jarg1, String jarg2, String jarg3, long jarg4, java.math.BigInteger jarg5);
  public final static native long g_key_file_get_locale_string_list(long jarg1, String jarg2, String jarg3, String jarg4, long jarg5, long jarg6);
  public final static native void g_key_file_set_locale_string_list(long jarg1, String jarg2, String jarg3, String jarg4, long jarg5, java.math.BigInteger jarg6);
  public final static native long g_key_file_get_boolean_list(long jarg1, String jarg2, String jarg3, long jarg4, long jarg5);
  public final static native void g_key_file_set_boolean_list(long jarg1, String jarg2, String jarg3, long jarg4, java.math.BigInteger jarg5);
  public final static native long g_key_file_get_integer_list(long jarg1, String jarg2, String jarg3, long jarg4, long jarg5);
  public final static native void g_key_file_set_double_list(long jarg1, String jarg2, String jarg3, long jarg4, java.math.BigInteger jarg5);
  public final static native long g_key_file_get_double_list(long jarg1, String jarg2, String jarg3, long jarg4, long jarg5);
  public final static native void g_key_file_set_integer_list(long jarg1, String jarg2, String jarg3, long jarg4, java.math.BigInteger jarg5);
  public final static native int g_key_file_set_comment(long jarg1, String jarg2, String jarg3, String jarg4, long jarg5);
  public final static native String g_key_file_get_comment(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native int g_key_file_remove_comment(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native int g_key_file_remove_key(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native int g_key_file_remove_group(long jarg1, String jarg2, long jarg3);
  public final static native String G_KEY_FILE_DESKTOP_GROUP_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_TYPE_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_VERSION_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_NAME_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_GENERIC_NAME_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_NO_DISPLAY_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_COMMENT_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_ICON_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_HIDDEN_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_TRY_EXEC_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_EXEC_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_PATH_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_TERMINAL_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_MIME_TYPE_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_CATEGORIES_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_URL_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_ACTIONS_get();
  public final static native String G_KEY_FILE_DESKTOP_TYPE_APPLICATION_get();
  public final static native String G_KEY_FILE_DESKTOP_TYPE_LINK_get();
  public final static native String G_KEY_FILE_DESKTOP_TYPE_DIRECTORY_get();
  public final static native long g_mapped_file_new(String jarg1, int jarg2, long jarg3);
  public final static native long g_mapped_file_new_from_fd(int jarg1, int jarg2, long jarg3);
  public final static native java.math.BigInteger g_mapped_file_get_length(long jarg1);
  public final static native String g_mapped_file_get_contents(long jarg1);
  public final static native long g_mapped_file_get_bytes(long jarg1);
  public final static native long g_mapped_file_ref(long jarg1);
  public final static native void g_mapped_file_unref(long jarg1);
  public final static native void g_mapped_file_free(long jarg1);
  public final static native long g_markup_error_quark();
  public final static native int G_MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG_get();
  public final static native int G_MARKUP_TREAT_CDATA_AS_TEXT_get();
  public final static native int G_MARKUP_PREFIX_ERROR_POSITION_get();
  public final static native int G_MARKUP_IGNORE_QUALIFIED_get();
  public final static native void _GMarkupParser_start_element_set(long jarg1, _GMarkupParser jarg1_, long jarg2);
  public final static native long _GMarkupParser_start_element_get(long jarg1, _GMarkupParser jarg1_);
  public final static native void _GMarkupParser_end_element_set(long jarg1, _GMarkupParser jarg1_, long jarg2);
  public final static native long _GMarkupParser_end_element_get(long jarg1, _GMarkupParser jarg1_);
  public final static native void _GMarkupParser_text_set(long jarg1, _GMarkupParser jarg1_, long jarg2);
  public final static native long _GMarkupParser_text_get(long jarg1, _GMarkupParser jarg1_);
  public final static native void _GMarkupParser_passthrough_set(long jarg1, _GMarkupParser jarg1_, long jarg2);
  public final static native long _GMarkupParser_passthrough_get(long jarg1, _GMarkupParser jarg1_);
  public final static native void _GMarkupParser_error_set(long jarg1, _GMarkupParser jarg1_, long jarg2);
  public final static native long _GMarkupParser_error_get(long jarg1, _GMarkupParser jarg1_);
  public final static native long new__GMarkupParser();
  public final static native void delete__GMarkupParser(long jarg1);
  public final static native long g_markup_parse_context_new(long jarg1, _GMarkupParser jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native long g_markup_parse_context_ref(long jarg1);
  public final static native void g_markup_parse_context_unref(long jarg1);
  public final static native void g_markup_parse_context_free(long jarg1);
  public final static native int g_markup_parse_context_parse(long jarg1, String jarg2, long jarg3, long jarg4);
  public final static native void g_markup_parse_context_push(long jarg1, long jarg2, _GMarkupParser jarg2_, long jarg3);
  public final static native long g_markup_parse_context_pop(long jarg1);
  public final static native int g_markup_parse_context_end_parse(long jarg1, long jarg2);
  public final static native String g_markup_parse_context_get_element(long jarg1);
  public final static native long g_markup_parse_context_get_element_stack(long jarg1);
  public final static native void g_markup_parse_context_get_position(long jarg1, long jarg2, long jarg3);
  public final static native long g_markup_parse_context_get_user_data(long jarg1);
  public final static native String g_markup_escape_text(String jarg1, long jarg2);
  public final static native String g_markup_printf_escaped(String jarg1);
  public final static native String g_markup_vprintf_escaped(String jarg1, long jarg2);
  public final static native int G_MARKUP_COLLECT_OPTIONAL_get();
  public final static native int g_markup_collect_attributes(String jarg1, long jarg2, long jarg3, long jarg4, int jarg5, String jarg6);
  public final static native int g_variant_type_string_is_valid(String jarg1);
  public final static native int g_variant_type_string_scan(String jarg1, String jarg2, long jarg3);
  public final static native void g_variant_type_free(long jarg1);
  public final static native long g_variant_type_copy(long jarg1);
  public final static native long g_variant_type_new(String jarg1);
  public final static native java.math.BigInteger g_variant_type_get_string_length(long jarg1);
  public final static native String g_variant_type_peek_string(long jarg1);
  public final static native String g_variant_type_dup_string(long jarg1);
  public final static native int g_variant_type_is_definite(long jarg1);
  public final static native int g_variant_type_is_container(long jarg1);
  public final static native int g_variant_type_is_basic(long jarg1);
  public final static native int g_variant_type_is_maybe(long jarg1);
  public final static native int g_variant_type_is_array(long jarg1);
  public final static native int g_variant_type_is_tuple(long jarg1);
  public final static native int g_variant_type_is_dict_entry(long jarg1);
  public final static native int g_variant_type_is_variant(long jarg1);
  public final static native long g_variant_type_hash(long jarg1);
  public final static native int g_variant_type_equal(long jarg1, long jarg2);
  public final static native int g_variant_type_is_subtype_of(long jarg1, long jarg2);
  public final static native long g_variant_type_element(long jarg1);
  public final static native long g_variant_type_first(long jarg1);
  public final static native long g_variant_type_next(long jarg1);
  public final static native java.math.BigInteger g_variant_type_n_items(long jarg1);
  public final static native long g_variant_type_key(long jarg1);
  public final static native long g_variant_type_value(long jarg1);
  public final static native long g_variant_type_new_array(long jarg1);
  public final static native long g_variant_type_new_maybe(long jarg1);
  public final static native long g_variant_type_new_tuple(long jarg1, int jarg2);
  public final static native long g_variant_type_new_dict_entry(long jarg1, long jarg2);
  public final static native long g_variant_type_checked_(String jarg1);
  public final static native int G_VARIANT_CLASS_BOOLEAN_get();
  public final static native int G_VARIANT_CLASS_BYTE_get();
  public final static native int G_VARIANT_CLASS_INT16_get();
  public final static native int G_VARIANT_CLASS_UINT16_get();
  public final static native int G_VARIANT_CLASS_INT32_get();
  public final static native int G_VARIANT_CLASS_UINT32_get();
  public final static native int G_VARIANT_CLASS_INT64_get();
  public final static native int G_VARIANT_CLASS_UINT64_get();
  public final static native int G_VARIANT_CLASS_HANDLE_get();
  public final static native int G_VARIANT_CLASS_DOUBLE_get();
  public final static native int G_VARIANT_CLASS_STRING_get();
  public final static native int G_VARIANT_CLASS_OBJECT_PATH_get();
  public final static native int G_VARIANT_CLASS_SIGNATURE_get();
  public final static native int G_VARIANT_CLASS_VARIANT_get();
  public final static native int G_VARIANT_CLASS_MAYBE_get();
  public final static native int G_VARIANT_CLASS_ARRAY_get();
  public final static native int G_VARIANT_CLASS_TUPLE_get();
  public final static native int G_VARIANT_CLASS_DICT_ENTRY_get();
  public final static native void g_variant_unref(long jarg1);
  public final static native long g_variant_ref(long jarg1);
  public final static native long g_variant_ref_sink(long jarg1);
  public final static native int g_variant_is_floating(long jarg1);
  public final static native long g_variant_take_ref(long jarg1);
  public final static native long g_variant_get_type(long jarg1);
  public final static native String g_variant_get_type_string(long jarg1);
  public final static native int g_variant_is_of_type(long jarg1, long jarg2);
  public final static native int g_variant_is_container(long jarg1);
  public final static native int g_variant_classify(long jarg1);
  public final static native long g_variant_new_boolean(int jarg1);
  public final static native long g_variant_new_byte(short jarg1);
  public final static native long g_variant_new_int16(short jarg1);
  public final static native long g_variant_new_uint16(int jarg1);
  public final static native long g_variant_new_int32(int jarg1);
  public final static native long g_variant_new_uint32(long jarg1);
  public final static native long g_variant_new_int64(long jarg1);
  public final static native long g_variant_new_uint64(java.math.BigInteger jarg1);
  public final static native long g_variant_new_handle(int jarg1);
  public final static native long g_variant_new_double(double jarg1);
  public final static native long g_variant_new_string(String jarg1);
  public final static native long g_variant_new_take_string(String jarg1);
  public final static native long g_variant_new_printf(String jarg1);
  public final static native long g_variant_new_object_path(String jarg1);
  public final static native int g_variant_is_object_path(String jarg1);
  public final static native long g_variant_new_signature(String jarg1);
  public final static native int g_variant_is_signature(String jarg1);
  public final static native long g_variant_new_variant(long jarg1);
  public final static native long g_variant_new_strv(long jarg1, long jarg2);
  public final static native long g_variant_new_objv(long jarg1, long jarg2);
  public final static native long g_variant_new_bytestring(String jarg1);
  public final static native long g_variant_new_bytestring_array(long jarg1, long jarg2);
  public final static native long g_variant_new_fixed_array(long jarg1, long jarg2, java.math.BigInteger jarg3, java.math.BigInteger jarg4);
  public final static native int g_variant_get_boolean(long jarg1);
  public final static native short g_variant_get_byte(long jarg1);
  public final static native short g_variant_get_int16(long jarg1);
  public final static native int g_variant_get_uint16(long jarg1);
  public final static native int g_variant_get_int32(long jarg1);
  public final static native long g_variant_get_uint32(long jarg1);
  public final static native long g_variant_get_int64(long jarg1);
  public final static native java.math.BigInteger g_variant_get_uint64(long jarg1);
  public final static native int g_variant_get_handle(long jarg1);
  public final static native double g_variant_get_double(long jarg1);
  public final static native long g_variant_get_variant(long jarg1);
  public final static native String g_variant_get_string(long jarg1, long jarg2);
  public final static native String g_variant_dup_string(long jarg1, long jarg2);
  public final static native long g_variant_get_strv(long jarg1, long jarg2);
  public final static native long g_variant_dup_strv(long jarg1, long jarg2);
  public final static native long g_variant_get_objv(long jarg1, long jarg2);
  public final static native long g_variant_dup_objv(long jarg1, long jarg2);
  public final static native String g_variant_get_bytestring(long jarg1);
  public final static native String g_variant_dup_bytestring(long jarg1, long jarg2);
  public final static native long g_variant_get_bytestring_array(long jarg1, long jarg2);
  public final static native long g_variant_dup_bytestring_array(long jarg1, long jarg2);
  public final static native long g_variant_new_maybe(long jarg1, long jarg2);
  public final static native long g_variant_new_array(long jarg1, long jarg2, java.math.BigInteger jarg3);
  public final static native long g_variant_new_tuple(long jarg1, java.math.BigInteger jarg2);
  public final static native long g_variant_new_dict_entry(long jarg1, long jarg2);
  public final static native long g_variant_get_maybe(long jarg1);
  public final static native java.math.BigInteger g_variant_n_children(long jarg1);
  public final static native void g_variant_get_child(long jarg1, java.math.BigInteger jarg2, String jarg3);
  public final static native long g_variant_get_child_value(long jarg1, java.math.BigInteger jarg2);
  public final static native int g_variant_lookup(long jarg1, String jarg2, String jarg3);
  public final static native long g_variant_lookup_value(long jarg1, String jarg2, long jarg3);
  public final static native long g_variant_get_fixed_array(long jarg1, long jarg2, java.math.BigInteger jarg3);
  public final static native java.math.BigInteger g_variant_get_size(long jarg1);
  public final static native long g_variant_get_data(long jarg1);
  public final static native long g_variant_get_data_as_bytes(long jarg1);
  public final static native void g_variant_store(long jarg1, long jarg2);
  public final static native String g_variant_print(long jarg1, int jarg2);
  public final static native long g_variant_print_string(long jarg1, long jarg2, _GString jarg2_, int jarg3);
  public final static native long g_variant_hash(long jarg1);
  public final static native int g_variant_equal(long jarg1, long jarg2);
  public final static native long g_variant_get_normal_form(long jarg1);
  public final static native int g_variant_is_normal_form(long jarg1);
  public final static native long g_variant_byteswap(long jarg1);
  public final static native long g_variant_new_from_bytes(long jarg1, long jarg2, int jarg3);
  public final static native long g_variant_new_from_data(long jarg1, long jarg2, java.math.BigInteger jarg3, int jarg4, long jarg5, long jarg6);
  public final static native void _GVariantIter_x_set(long jarg1, _GVariantIter jarg1_, long jarg2);
  public final static native long _GVariantIter_x_get(long jarg1, _GVariantIter jarg1_);
  public final static native long new__GVariantIter();
  public final static native void delete__GVariantIter(long jarg1);
  public final static native long g_variant_iter_new(long jarg1);
  public final static native java.math.BigInteger g_variant_iter_init(long jarg1, _GVariantIter jarg1_, long jarg2);
  public final static native long g_variant_iter_copy(long jarg1, _GVariantIter jarg1_);
  public final static native java.math.BigInteger g_variant_iter_n_children(long jarg1, _GVariantIter jarg1_);
  public final static native void g_variant_iter_free(long jarg1, _GVariantIter jarg1_);
  public final static native long g_variant_iter_next_value(long jarg1, _GVariantIter jarg1_);
  public final static native int g_variant_iter_next(long jarg1, _GVariantIter jarg1_, String jarg2);
  public final static native int g_variant_iter_loop(long jarg1, _GVariantIter jarg1_, String jarg2);
  public final static native long _GVariantBuilder_u_get(long jarg1, _GVariantBuilder jarg1_);
  public final static native long new__GVariantBuilder();
  public final static native void delete__GVariantBuilder(long jarg1);
  public final static native long _GVariantBuilder_u_s_get(long jarg1, _GVariantBuilder_u jarg1_);
  public final static native void _GVariantBuilder_u_x_set(long jarg1, _GVariantBuilder_u jarg1_, long jarg2);
  public final static native long _GVariantBuilder_u_x_get(long jarg1, _GVariantBuilder_u jarg1_);
  public final static native long new__GVariantBuilder_u();
  public final static native void delete__GVariantBuilder_u(long jarg1);
  public final static native void _GVariantBuilder_u_s_partial_magic_set(long jarg1, _GVariantBuilder_u_s jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GVariantBuilder_u_s_partial_magic_get(long jarg1, _GVariantBuilder_u_s jarg1_);
  public final static native void _GVariantBuilder_u_s_type_set(long jarg1, _GVariantBuilder_u_s jarg1_, long jarg2);
  public final static native long _GVariantBuilder_u_s_type_get(long jarg1, _GVariantBuilder_u_s jarg1_);
  public final static native void _GVariantBuilder_u_s_y_set(long jarg1, _GVariantBuilder_u_s jarg1_, long jarg2);
  public final static native long _GVariantBuilder_u_s_y_get(long jarg1, _GVariantBuilder_u_s jarg1_);
  public final static native long new__GVariantBuilder_u_s();
  public final static native void delete__GVariantBuilder_u_s(long jarg1);
  public final static native long g_variant_parser_get_error_quark();
  public final static native long g_variant_parse_error_quark();
  public final static native long g_variant_builder_new(long jarg1);
  public final static native void g_variant_builder_unref(long jarg1, _GVariantBuilder jarg1_);
  public final static native long g_variant_builder_ref(long jarg1, _GVariantBuilder jarg1_);
  public final static native void g_variant_builder_init(long jarg1, _GVariantBuilder jarg1_, long jarg2);
  public final static native long g_variant_builder_end(long jarg1, _GVariantBuilder jarg1_);
  public final static native void g_variant_builder_clear(long jarg1, _GVariantBuilder jarg1_);
  public final static native void g_variant_builder_open(long jarg1, _GVariantBuilder jarg1_, long jarg2);
  public final static native void g_variant_builder_close(long jarg1, _GVariantBuilder jarg1_);
  public final static native void g_variant_builder_add_value(long jarg1, _GVariantBuilder jarg1_, long jarg2);
  public final static native void g_variant_builder_add(long jarg1, _GVariantBuilder jarg1_, String jarg2);
  public final static native void g_variant_builder_add_parsed(long jarg1, _GVariantBuilder jarg1_, String jarg2);
  public final static native long g_variant_new(String jarg1);
  public final static native void g_variant_get(long jarg1, String jarg2);
  public final static native long g_variant_new_va(String jarg1, long jarg2, long jarg3);
  public final static native void g_variant_get_va(long jarg1, String jarg2, long jarg3, long jarg4);
  public final static native int g_variant_check_format_string(long jarg1, String jarg2, int jarg3);
  public final static native long g_variant_parse(long jarg1, String jarg2, String jarg3, long jarg4, long jarg5);
  public final static native long g_variant_new_parsed(String jarg1);
  public final static native long g_variant_new_parsed_va(String jarg1, long jarg2);
  public final static native String g_variant_parse_error_print_context(long jarg1, _GError jarg1_, String jarg2);
  public final static native int g_variant_compare(long jarg1, long jarg2);
  public final static native long _GVariantDict_u_get(long jarg1, _GVariantDict jarg1_);
  public final static native long new__GVariantDict();
  public final static native void delete__GVariantDict(long jarg1);
  public final static native long _GVariantDict_u_s_get(long jarg1, _GVariantDict_u jarg1_);
  public final static native void _GVariantDict_u_x_set(long jarg1, _GVariantDict_u jarg1_, long jarg2);
  public final static native long _GVariantDict_u_x_get(long jarg1, _GVariantDict_u jarg1_);
  public final static native long new__GVariantDict_u();
  public final static native void delete__GVariantDict_u(long jarg1);
  public final static native void _GVariantDict_u_s_asv_set(long jarg1, _GVariantDict_u_s jarg1_, long jarg2);
  public final static native long _GVariantDict_u_s_asv_get(long jarg1, _GVariantDict_u_s jarg1_);
  public final static native void _GVariantDict_u_s_partial_magic_set(long jarg1, _GVariantDict_u_s jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GVariantDict_u_s_partial_magic_get(long jarg1, _GVariantDict_u_s jarg1_);
  public final static native void _GVariantDict_u_s_y_set(long jarg1, _GVariantDict_u_s jarg1_, long jarg2);
  public final static native long _GVariantDict_u_s_y_get(long jarg1, _GVariantDict_u_s jarg1_);
  public final static native long new__GVariantDict_u_s();
  public final static native void delete__GVariantDict_u_s(long jarg1);
  public final static native long g_variant_dict_new(long jarg1);
  public final static native void g_variant_dict_init(long jarg1, _GVariantDict jarg1_, long jarg2);
  public final static native int g_variant_dict_lookup(long jarg1, _GVariantDict jarg1_, String jarg2, String jarg3);
  public final static native long g_variant_dict_lookup_value(long jarg1, _GVariantDict jarg1_, String jarg2, long jarg3);
  public final static native int g_variant_dict_contains(long jarg1, _GVariantDict jarg1_, String jarg2);
  public final static native void g_variant_dict_insert(long jarg1, _GVariantDict jarg1_, String jarg2, String jarg3);
  public final static native void g_variant_dict_insert_value(long jarg1, _GVariantDict jarg1_, String jarg2, long jarg3);
  public final static native int g_variant_dict_remove(long jarg1, _GVariantDict jarg1_, String jarg2);
  public final static native void g_variant_dict_clear(long jarg1, _GVariantDict jarg1_);
  public final static native long g_variant_dict_end(long jarg1, _GVariantDict jarg1_);
  public final static native long g_variant_dict_ref(long jarg1, _GVariantDict jarg1_);
  public final static native void g_variant_dict_unref(long jarg1, _GVariantDict jarg1_);
  public final static native java.math.BigInteger g_printf_string_upper_bound(String jarg1, long jarg2);
  public final static native int G_LOG_LEVEL_USER_SHIFT_get();
  public final static native int G_LOG_FLAG_RECURSION_get();
  public final static native int G_LOG_FLAG_FATAL_get();
  public final static native int G_LOG_LEVEL_ERROR_get();
  public final static native int G_LOG_LEVEL_CRITICAL_get();
  public final static native int G_LOG_LEVEL_WARNING_get();
  public final static native int G_LOG_LEVEL_MESSAGE_get();
  public final static native int G_LOG_LEVEL_INFO_get();
  public final static native int G_LOG_LEVEL_DEBUG_get();
  public final static native int G_LOG_LEVEL_MASK_get();
  public final static native long g_log_set_handler(String jarg1, int jarg2, long jarg3, long jarg4);
  public final static native long g_log_set_handler_full(String jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void g_log_remove_handler(String jarg1, long jarg2);
  public final static native void g_log_default_handler(String jarg1, int jarg2, String jarg3, long jarg4);
  public final static native long g_log_set_default_handler(long jarg1, long jarg2);
  public final static native void g_log(String jarg1, int jarg2, String jarg3);
  public final static native void g_logv(String jarg1, int jarg2, String jarg3, long jarg4);
  public final static native int g_log_set_fatal_mask(String jarg1, int jarg2);
  public final static native int g_log_set_always_fatal(int jarg1);
  public final static native int G_LOG_WRITER_HANDLED_get();
  public final static native int G_LOG_WRITER_UNHANDLED_get();
  public final static native void _GLogField_key_set(long jarg1, _GLogField jarg1_, String jarg2);
  public final static native String _GLogField_key_get(long jarg1, _GLogField jarg1_);
  public final static native void _GLogField_value_set(long jarg1, _GLogField jarg1_, long jarg2);
  public final static native long _GLogField_value_get(long jarg1, _GLogField jarg1_);
  public final static native void _GLogField_length_set(long jarg1, _GLogField jarg1_, long jarg2);
  public final static native long _GLogField_length_get(long jarg1, _GLogField jarg1_);
  public final static native long new__GLogField();
  public final static native void delete__GLogField(long jarg1);
  public final static native void g_log_structured(String jarg1, int jarg2);
  public final static native void g_log_structured_array(int jarg1, long jarg2, _GLogField jarg2_, java.math.BigInteger jarg3);
  public final static native void g_log_variant(String jarg1, int jarg2, long jarg3);
  public final static native void g_log_set_writer_func(long jarg1, long jarg2, long jarg3);
  public final static native int g_log_writer_supports_color(int jarg1);
  public final static native int g_log_writer_is_journald(int jarg1);
  public final static native String g_log_writer_format_fields(int jarg1, long jarg2, _GLogField jarg2_, java.math.BigInteger jarg3, int jarg4);
  public final static native int g_log_writer_journald(int jarg1, long jarg2, _GLogField jarg2_, java.math.BigInteger jarg3, long jarg4);
  public final static native int g_log_writer_standard_streams(int jarg1, long jarg2, _GLogField jarg2_, java.math.BigInteger jarg3, long jarg4);
  public final static native int g_log_writer_default(int jarg1, long jarg2, _GLogField jarg2_, java.math.BigInteger jarg3, long jarg4);
  public final static native void g_return_if_fail_warning(String jarg1, String jarg2, String jarg3);
  public final static native void g_warn_message(String jarg1, String jarg2, int jarg3, String jarg4, String jarg5);
  public final static native void g_assert_warning(String jarg1, String jarg2, int jarg3, String jarg4, String jarg5);
  public final static native void g_print(String jarg1);
  public final static native long g_set_print_handler(long jarg1);
  public final static native void g_printerr(String jarg1);
  public final static native long g_set_printerr_handler(long jarg1);
  public final static native int G_OPTION_FLAG_NONE_get();
  public final static native int G_OPTION_FLAG_HIDDEN_get();
  public final static native int G_OPTION_FLAG_IN_MAIN_get();
  public final static native int G_OPTION_FLAG_REVERSE_get();
  public final static native int G_OPTION_FLAG_NO_ARG_get();
  public final static native int G_OPTION_FLAG_FILENAME_get();
  public final static native int G_OPTION_FLAG_OPTIONAL_ARG_get();
  public final static native int G_OPTION_FLAG_NOALIAS_get();
  public final static native long g_option_error_quark();
  public final static native void _GOptionEntry_long_name_set(long jarg1, _GOptionEntry jarg1_, String jarg2);
  public final static native String _GOptionEntry_long_name_get(long jarg1, _GOptionEntry jarg1_);
  public final static native void _GOptionEntry_short_name_set(long jarg1, _GOptionEntry jarg1_, char jarg2);
  public final static native char _GOptionEntry_short_name_get(long jarg1, _GOptionEntry jarg1_);
  public final static native void _GOptionEntry_flags_set(long jarg1, _GOptionEntry jarg1_, int jarg2);
  public final static native int _GOptionEntry_flags_get(long jarg1, _GOptionEntry jarg1_);
  public final static native void _GOptionEntry_arg_set(long jarg1, _GOptionEntry jarg1_, int jarg2);
  public final static native int _GOptionEntry_arg_get(long jarg1, _GOptionEntry jarg1_);
  public final static native void _GOptionEntry_arg_data_set(long jarg1, _GOptionEntry jarg1_, long jarg2);
  public final static native long _GOptionEntry_arg_data_get(long jarg1, _GOptionEntry jarg1_);
  public final static native void _GOptionEntry_description_set(long jarg1, _GOptionEntry jarg1_, String jarg2);
  public final static native String _GOptionEntry_description_get(long jarg1, _GOptionEntry jarg1_);
  public final static native void _GOptionEntry_arg_description_set(long jarg1, _GOptionEntry jarg1_, String jarg2);
  public final static native String _GOptionEntry_arg_description_get(long jarg1, _GOptionEntry jarg1_);
  public final static native long new__GOptionEntry();
  public final static native void delete__GOptionEntry(long jarg1);
  public final static native String G_OPTION_REMAINING_get();
  public final static native long g_option_context_new(String jarg1);
  public final static native void g_option_context_set_summary(long jarg1, String jarg2);
  public final static native String g_option_context_get_summary(long jarg1);
  public final static native void g_option_context_set_description(long jarg1, String jarg2);
  public final static native String g_option_context_get_description(long jarg1);
  public final static native void g_option_context_free(long jarg1);
  public final static native void g_option_context_set_help_enabled(long jarg1, int jarg2);
  public final static native int g_option_context_get_help_enabled(long jarg1);
  public final static native void g_option_context_set_ignore_unknown_options(long jarg1, int jarg2);
  public final static native int g_option_context_get_ignore_unknown_options(long jarg1);
  public final static native void g_option_context_set_strict_posix(long jarg1, int jarg2);
  public final static native int g_option_context_get_strict_posix(long jarg1);
  public final static native void g_option_context_add_main_entries(long jarg1, long jarg2, _GOptionEntry jarg2_, String jarg3);
  public final static native int g_option_context_parse(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int g_option_context_parse_strv(long jarg1, long jarg2, long jarg3);
  public final static native void g_option_context_set_translate_func(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void g_option_context_set_translation_domain(long jarg1, String jarg2);
  public final static native void g_option_context_add_group(long jarg1, long jarg2);
  public final static native void g_option_context_set_main_group(long jarg1, long jarg2);
  public final static native long g_option_context_get_main_group(long jarg1);
  public final static native String g_option_context_get_help(long jarg1, int jarg2, long jarg3);
  public final static native long g_option_group_new(String jarg1, String jarg2, String jarg3, long jarg4, long jarg5);
  public final static native void g_option_group_set_parse_hooks(long jarg1, long jarg2, long jarg3);
  public final static native void g_option_group_set_error_hook(long jarg1, long jarg2);
  public final static native void g_option_group_free(long jarg1);
  public final static native long g_option_group_ref(long jarg1);
  public final static native void g_option_group_unref(long jarg1);
  public final static native void g_option_group_add_entries(long jarg1, long jarg2, _GOptionEntry jarg2_);
  public final static native void g_option_group_set_translate_func(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void g_option_group_set_translation_domain(long jarg1, String jarg2);
  public final static native long g_pattern_spec_new(String jarg1);
  public final static native void g_pattern_spec_free(long jarg1);
  public final static native int g_pattern_spec_equal(long jarg1, long jarg2);
  public final static native int g_pattern_match(long jarg1, long jarg2, String jarg3, String jarg4);
  public final static native int g_pattern_match_string(long jarg1, String jarg2);
  public final static native int g_pattern_match_simple(String jarg1, String jarg2);
  public final static native long g_spaced_primes_closest(long jarg1);
  public final static native void g_qsort_with_data(long jarg1, int jarg2, java.math.BigInteger jarg3, long jarg4, long jarg5);
  public final static native void _GQueue_head_set(long jarg1, _GQueue jarg1_, long jarg2, _GList jarg2_);
  public final static native long _GQueue_head_get(long jarg1, _GQueue jarg1_);
  public final static native void _GQueue_tail_set(long jarg1, _GQueue jarg1_, long jarg2, _GList jarg2_);
  public final static native long _GQueue_tail_get(long jarg1, _GQueue jarg1_);
  public final static native void _GQueue_length_set(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native long _GQueue_length_get(long jarg1, _GQueue jarg1_);
  public final static native long new__GQueue();
  public final static native void delete__GQueue(long jarg1);
  public final static native long g_queue_new();
  public final static native void g_queue_free(long jarg1, _GQueue jarg1_);
  public final static native void g_queue_free_full(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native void g_queue_init(long jarg1, _GQueue jarg1_);
  public final static native void g_queue_clear(long jarg1, _GQueue jarg1_);
  public final static native int g_queue_is_empty(long jarg1, _GQueue jarg1_);
  public final static native long g_queue_get_length(long jarg1, _GQueue jarg1_);
  public final static native void g_queue_reverse(long jarg1, _GQueue jarg1_);
  public final static native long g_queue_copy(long jarg1, _GQueue jarg1_);
  public final static native void g_queue_foreach(long jarg1, _GQueue jarg1_, long jarg2, long jarg3);
  public final static native long g_queue_find(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native long g_queue_find_custom(long jarg1, _GQueue jarg1_, long jarg2, long jarg3);
  public final static native void g_queue_sort(long jarg1, _GQueue jarg1_, long jarg2, long jarg3);
  public final static native void g_queue_push_head(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native void g_queue_push_tail(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native void g_queue_push_nth(long jarg1, _GQueue jarg1_, long jarg2, int jarg3);
  public final static native long g_queue_pop_head(long jarg1, _GQueue jarg1_);
  public final static native long g_queue_pop_tail(long jarg1, _GQueue jarg1_);
  public final static native long g_queue_pop_nth(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native long g_queue_peek_head(long jarg1, _GQueue jarg1_);
  public final static native long g_queue_peek_tail(long jarg1, _GQueue jarg1_);
  public final static native long g_queue_peek_nth(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native int g_queue_index(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native int g_queue_remove(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native long g_queue_remove_all(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native void g_queue_insert_before(long jarg1, _GQueue jarg1_, long jarg2, _GList jarg2_, long jarg3);
  public final static native void g_queue_insert_after(long jarg1, _GQueue jarg1_, long jarg2, _GList jarg2_, long jarg3);
  public final static native void g_queue_insert_sorted(long jarg1, _GQueue jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void g_queue_push_head_link(long jarg1, _GQueue jarg1_, long jarg2, _GList jarg2_);
  public final static native void g_queue_push_tail_link(long jarg1, _GQueue jarg1_, long jarg2, _GList jarg2_);
  public final static native void g_queue_push_nth_link(long jarg1, _GQueue jarg1_, int jarg2, long jarg3, _GList jarg3_);
  public final static native long g_queue_pop_head_link(long jarg1, _GQueue jarg1_);
  public final static native long g_queue_pop_tail_link(long jarg1, _GQueue jarg1_);
  public final static native long g_queue_pop_nth_link(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native long g_queue_peek_head_link(long jarg1, _GQueue jarg1_);
  public final static native long g_queue_peek_tail_link(long jarg1, _GQueue jarg1_);
  public final static native long g_queue_peek_nth_link(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native int g_queue_link_index(long jarg1, _GQueue jarg1_, long jarg2, _GList jarg2_);
  public final static native void g_queue_unlink(long jarg1, _GQueue jarg1_, long jarg2, _GList jarg2_);
  public final static native void g_queue_delete_link(long jarg1, _GQueue jarg1_, long jarg2, _GList jarg2_);
  public final static native long g_rand_new_with_seed(long jarg1);
  public final static native long g_rand_new_with_seed_array(long jarg1, long jarg2);
  public final static native long g_rand_new();
  public final static native void g_rand_free(long jarg1);
  public final static native long g_rand_copy(long jarg1);
  public final static native void g_rand_set_seed(long jarg1, long jarg2);
  public final static native void g_rand_set_seed_array(long jarg1, long jarg2, long jarg3);
  public final static native long g_rand_int(long jarg1);
  public final static native int g_rand_int_range(long jarg1, int jarg2, int jarg3);
  public final static native double g_rand_double(long jarg1);
  public final static native double g_rand_double_range(long jarg1, double jarg2, double jarg3);
  public final static native void g_random_set_seed(long jarg1);
  public final static native long g_random_int();
  public final static native int g_random_int_range(int jarg1, int jarg2);
  public final static native double g_random_double();
  public final static native double g_random_double_range(double jarg1, double jarg2);
  public final static native int G_REGEX_ERROR_STRAY_BACKSLASH_get();
  public final static native int G_REGEX_ERROR_MISSING_CONTROL_CHAR_get();
  public final static native int G_REGEX_ERROR_UNRECOGNIZED_ESCAPE_get();
  public final static native int G_REGEX_ERROR_QUANTIFIERS_OUT_OF_ORDER_get();
  public final static native int G_REGEX_ERROR_QUANTIFIER_TOO_BIG_get();
  public final static native int G_REGEX_ERROR_UNTERMINATED_CHARACTER_CLASS_get();
  public final static native int G_REGEX_ERROR_INVALID_ESCAPE_IN_CHARACTER_CLASS_get();
  public final static native int G_REGEX_ERROR_RANGE_OUT_OF_ORDER_get();
  public final static native int G_REGEX_ERROR_NOTHING_TO_REPEAT_get();
  public final static native int G_REGEX_ERROR_UNRECOGNIZED_CHARACTER_get();
  public final static native int G_REGEX_ERROR_POSIX_NAMED_CLASS_OUTSIDE_CLASS_get();
  public final static native int G_REGEX_ERROR_UNMATCHED_PARENTHESIS_get();
  public final static native int G_REGEX_ERROR_INEXISTENT_SUBPATTERN_REFERENCE_get();
  public final static native int G_REGEX_ERROR_UNTERMINATED_COMMENT_get();
  public final static native int G_REGEX_ERROR_EXPRESSION_TOO_LARGE_get();
  public final static native int G_REGEX_ERROR_MEMORY_ERROR_get();
  public final static native int G_REGEX_ERROR_VARIABLE_LENGTH_LOOKBEHIND_get();
  public final static native int G_REGEX_ERROR_MALFORMED_CONDITION_get();
  public final static native int G_REGEX_ERROR_TOO_MANY_CONDITIONAL_BRANCHES_get();
  public final static native int G_REGEX_ERROR_ASSERTION_EXPECTED_get();
  public final static native int G_REGEX_ERROR_UNKNOWN_POSIX_CLASS_NAME_get();
  public final static native int G_REGEX_ERROR_POSIX_COLLATING_ELEMENTS_NOT_SUPPORTED_get();
  public final static native int G_REGEX_ERROR_HEX_CODE_TOO_LARGE_get();
  public final static native int G_REGEX_ERROR_INVALID_CONDITION_get();
  public final static native int G_REGEX_ERROR_SINGLE_BYTE_MATCH_IN_LOOKBEHIND_get();
  public final static native int G_REGEX_ERROR_INFINITE_LOOP_get();
  public final static native int G_REGEX_ERROR_MISSING_SUBPATTERN_NAME_TERMINATOR_get();
  public final static native int G_REGEX_ERROR_DUPLICATE_SUBPATTERN_NAME_get();
  public final static native int G_REGEX_ERROR_MALFORMED_PROPERTY_get();
  public final static native int G_REGEX_ERROR_UNKNOWN_PROPERTY_get();
  public final static native int G_REGEX_ERROR_SUBPATTERN_NAME_TOO_LONG_get();
  public final static native int G_REGEX_ERROR_TOO_MANY_SUBPATTERNS_get();
  public final static native int G_REGEX_ERROR_INVALID_OCTAL_VALUE_get();
  public final static native int G_REGEX_ERROR_TOO_MANY_BRANCHES_IN_DEFINE_get();
  public final static native int G_REGEX_ERROR_DEFINE_REPETION_get();
  public final static native int G_REGEX_ERROR_INCONSISTENT_NEWLINE_OPTIONS_get();
  public final static native int G_REGEX_ERROR_MISSING_BACK_REFERENCE_get();
  public final static native int G_REGEX_ERROR_INVALID_RELATIVE_REFERENCE_get();
  public final static native int G_REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_FORBIDDEN_get();
  public final static native int G_REGEX_ERROR_UNKNOWN_BACKTRACKING_CONTROL_VERB_get();
  public final static native int G_REGEX_ERROR_NUMBER_TOO_BIG_get();
  public final static native int G_REGEX_ERROR_MISSING_SUBPATTERN_NAME_get();
  public final static native int G_REGEX_ERROR_MISSING_DIGIT_get();
  public final static native int G_REGEX_ERROR_INVALID_DATA_CHARACTER_get();
  public final static native int G_REGEX_ERROR_EXTRA_SUBPATTERN_NAME_get();
  public final static native int G_REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_REQUIRED_get();
  public final static native int G_REGEX_ERROR_INVALID_CONTROL_CHAR_get();
  public final static native int G_REGEX_ERROR_MISSING_NAME_get();
  public final static native int G_REGEX_ERROR_NOT_SUPPORTED_IN_CLASS_get();
  public final static native int G_REGEX_ERROR_TOO_MANY_FORWARD_REFERENCES_get();
  public final static native int G_REGEX_ERROR_NAME_TOO_LONG_get();
  public final static native int G_REGEX_ERROR_CHARACTER_VALUE_TOO_LARGE_get();
  public final static native long g_regex_error_quark();
  public final static native int G_REGEX_CASELESS_get();
  public final static native int G_REGEX_MULTILINE_get();
  public final static native int G_REGEX_DOTALL_get();
  public final static native int G_REGEX_EXTENDED_get();
  public final static native int G_REGEX_ANCHORED_get();
  public final static native int G_REGEX_DOLLAR_ENDONLY_get();
  public final static native int G_REGEX_UNGREEDY_get();
  public final static native int G_REGEX_RAW_get();
  public final static native int G_REGEX_NO_AUTO_CAPTURE_get();
  public final static native int G_REGEX_OPTIMIZE_get();
  public final static native int G_REGEX_FIRSTLINE_get();
  public final static native int G_REGEX_DUPNAMES_get();
  public final static native int G_REGEX_NEWLINE_CR_get();
  public final static native int G_REGEX_NEWLINE_LF_get();
  public final static native int G_REGEX_NEWLINE_CRLF_get();
  public final static native int G_REGEX_NEWLINE_ANYCRLF_get();
  public final static native int G_REGEX_BSR_ANYCRLF_get();
  public final static native int G_REGEX_JAVASCRIPT_COMPAT_get();
  public final static native int G_REGEX_MATCH_ANCHORED_get();
  public final static native int G_REGEX_MATCH_NOTBOL_get();
  public final static native int G_REGEX_MATCH_NOTEOL_get();
  public final static native int G_REGEX_MATCH_NOTEMPTY_get();
  public final static native int G_REGEX_MATCH_PARTIAL_get();
  public final static native int G_REGEX_MATCH_NEWLINE_CR_get();
  public final static native int G_REGEX_MATCH_NEWLINE_LF_get();
  public final static native int G_REGEX_MATCH_NEWLINE_CRLF_get();
  public final static native int G_REGEX_MATCH_NEWLINE_ANY_get();
  public final static native int G_REGEX_MATCH_NEWLINE_ANYCRLF_get();
  public final static native int G_REGEX_MATCH_BSR_ANYCRLF_get();
  public final static native int G_REGEX_MATCH_BSR_ANY_get();
  public final static native int G_REGEX_MATCH_PARTIAL_SOFT_get();
  public final static native int G_REGEX_MATCH_PARTIAL_HARD_get();
  public final static native int G_REGEX_MATCH_NOTEMPTY_ATSTART_get();
  public final static native long g_regex_new(String jarg1, int jarg2, int jarg3, long jarg4);
  public final static native long g_regex_ref(long jarg1);
  public final static native void g_regex_unref(long jarg1);
  public final static native String g_regex_get_pattern(long jarg1);
  public final static native int g_regex_get_max_backref(long jarg1);
  public final static native int g_regex_get_capture_count(long jarg1);
  public final static native int g_regex_get_has_cr_or_lf(long jarg1);
  public final static native int g_regex_get_max_lookbehind(long jarg1);
  public final static native int g_regex_get_string_number(long jarg1, String jarg2);
  public final static native String g_regex_escape_string(String jarg1, int jarg2);
  public final static native String g_regex_escape_nul(String jarg1, int jarg2);
  public final static native int g_regex_get_compile_flags(long jarg1);
  public final static native int g_regex_get_match_flags(long jarg1);
  public final static native int g_regex_match_simple(String jarg1, String jarg2, int jarg3, int jarg4);
  public final static native int g_regex_match(long jarg1, String jarg2, int jarg3, long jarg4);
  public final static native int g_regex_match_full(long jarg1, String jarg2, long jarg3, int jarg4, int jarg5, long jarg6, long jarg7);
  public final static native int g_regex_match_all(long jarg1, String jarg2, int jarg3, long jarg4);
  public final static native int g_regex_match_all_full(long jarg1, String jarg2, long jarg3, int jarg4, int jarg5, long jarg6, long jarg7);
  public final static native long g_regex_split_simple(String jarg1, String jarg2, int jarg3, int jarg4);
  public final static native long g_regex_split(long jarg1, String jarg2, int jarg3);
  public final static native long g_regex_split_full(long jarg1, String jarg2, long jarg3, int jarg4, int jarg5, int jarg6, long jarg7);
  public final static native String g_regex_replace(long jarg1, String jarg2, long jarg3, int jarg4, String jarg5, int jarg6, long jarg7);
  public final static native String g_regex_replace_literal(long jarg1, String jarg2, long jarg3, int jarg4, String jarg5, int jarg6, long jarg7);
  public final static native String g_regex_replace_eval(long jarg1, String jarg2, long jarg3, int jarg4, int jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int g_regex_check_replacement(String jarg1, long jarg2, long jarg3);
  public final static native long g_match_info_get_regex(long jarg1);
  public final static native String g_match_info_get_string(long jarg1);
  public final static native long g_match_info_ref(long jarg1);
  public final static native void g_match_info_unref(long jarg1);
  public final static native void g_match_info_free(long jarg1);
  public final static native int g_match_info_next(long jarg1, long jarg2);
  public final static native int g_match_info_matches(long jarg1);
  public final static native int g_match_info_get_match_count(long jarg1);
  public final static native int g_match_info_is_partial_match(long jarg1);
  public final static native String g_match_info_expand_references(long jarg1, String jarg2, long jarg3);
  public final static native String g_match_info_fetch(long jarg1, int jarg2);
  public final static native int g_match_info_fetch_pos(long jarg1, int jarg2, long jarg3, long jarg4);
  public final static native String g_match_info_fetch_named(long jarg1, String jarg2);
  public final static native int g_match_info_fetch_named_pos(long jarg1, String jarg2, long jarg3, long jarg4);
  public final static native long g_match_info_fetch_all(long jarg1);
  public final static native String G_CSET_A_2_Z_get();
  public final static native String G_CSET_a_2_z_get();
  public final static native String G_CSET_DIGITS_get();
  public final static native String G_CSET_LATINC_get();
  public final static native String G_CSET_LATINS_get();
  public final static native int G_TOKEN_EOF_get();
  public final static native int G_TOKEN_LEFT_PAREN_get();
  public final static native int G_TOKEN_RIGHT_PAREN_get();
  public final static native int G_TOKEN_LEFT_CURLY_get();
  public final static native int G_TOKEN_RIGHT_CURLY_get();
  public final static native int G_TOKEN_LEFT_BRACE_get();
  public final static native int G_TOKEN_RIGHT_BRACE_get();
  public final static native int G_TOKEN_EQUAL_SIGN_get();
  public final static native int G_TOKEN_COMMA_get();
  public final static native int G_TOKEN_NONE_get();
  public final static native void _GTokenValue_v_symbol_set(long jarg1, _GTokenValue jarg1_, long jarg2);
  public final static native long _GTokenValue_v_symbol_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_identifier_set(long jarg1, _GTokenValue jarg1_, String jarg2);
  public final static native String _GTokenValue_v_identifier_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_binary_set(long jarg1, _GTokenValue jarg1_, long jarg2);
  public final static native long _GTokenValue_v_binary_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_octal_set(long jarg1, _GTokenValue jarg1_, long jarg2);
  public final static native long _GTokenValue_v_octal_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_int_set(long jarg1, _GTokenValue jarg1_, long jarg2);
  public final static native long _GTokenValue_v_int_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_int64_set(long jarg1, _GTokenValue jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GTokenValue_v_int64_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_float_set(long jarg1, _GTokenValue jarg1_, double jarg2);
  public final static native double _GTokenValue_v_float_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_hex_set(long jarg1, _GTokenValue jarg1_, long jarg2);
  public final static native long _GTokenValue_v_hex_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_string_set(long jarg1, _GTokenValue jarg1_, String jarg2);
  public final static native String _GTokenValue_v_string_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_comment_set(long jarg1, _GTokenValue jarg1_, String jarg2);
  public final static native String _GTokenValue_v_comment_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_char_set(long jarg1, _GTokenValue jarg1_, short jarg2);
  public final static native short _GTokenValue_v_char_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_error_set(long jarg1, _GTokenValue jarg1_, long jarg2);
  public final static native long _GTokenValue_v_error_get(long jarg1, _GTokenValue jarg1_);
  public final static native long new__GTokenValue();
  public final static native void delete__GTokenValue(long jarg1);
  public final static native void _GScannerConfig_cset_skip_characters_set(long jarg1, _GScannerConfig jarg1_, String jarg2);
  public final static native String _GScannerConfig_cset_skip_characters_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_cset_identifier_first_set(long jarg1, _GScannerConfig jarg1_, String jarg2);
  public final static native String _GScannerConfig_cset_identifier_first_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_cset_identifier_nth_set(long jarg1, _GScannerConfig jarg1_, String jarg2);
  public final static native String _GScannerConfig_cset_identifier_nth_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_cpair_comment_single_set(long jarg1, _GScannerConfig jarg1_, String jarg2);
  public final static native String _GScannerConfig_cpair_comment_single_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_case_sensitive_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_case_sensitive_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_skip_comment_multi_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_skip_comment_multi_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_skip_comment_single_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_skip_comment_single_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_comment_multi_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_comment_multi_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_identifier_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_identifier_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_identifier_1char_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_identifier_1char_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_identifier_NULL_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_identifier_NULL_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_symbols_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_symbols_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_binary_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_binary_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_octal_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_octal_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_float_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_float_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_hex_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_hex_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_hex_dollar_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_hex_dollar_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_string_sq_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_string_sq_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_string_dq_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_string_dq_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_numbers_2_int_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_numbers_2_int_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_int_2_float_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_int_2_float_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_identifier_2_string_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_identifier_2_string_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_char_2_token_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_char_2_token_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_symbol_2_token_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_symbol_2_token_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scope_0_fallback_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scope_0_fallback_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_store_int64_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_store_int64_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_padding_dummy_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_padding_dummy_get(long jarg1, _GScannerConfig jarg1_);
  public final static native long new__GScannerConfig();
  public final static native void delete__GScannerConfig(long jarg1);
  public final static native void _GScanner_user_data_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_user_data_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_max_parse_errors_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_max_parse_errors_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_parse_errors_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_parse_errors_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_input_name_set(long jarg1, _GScanner jarg1_, String jarg2);
  public final static native String _GScanner_input_name_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_qdata_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_qdata_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_config_set(long jarg1, _GScanner jarg1_, long jarg2, _GScannerConfig jarg2_);
  public final static native long _GScanner_config_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_token_set(long jarg1, _GScanner jarg1_, int jarg2);
  public final static native int _GScanner_token_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_value_set(long jarg1, _GScanner jarg1_, long jarg2, _GTokenValue jarg2_);
  public final static native long _GScanner_value_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_line_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_line_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_position_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_position_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_next_token_set(long jarg1, _GScanner jarg1_, int jarg2);
  public final static native int _GScanner_next_token_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_next_value_set(long jarg1, _GScanner jarg1_, long jarg2, _GTokenValue jarg2_);
  public final static native long _GScanner_next_value_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_next_line_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_next_line_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_next_position_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_next_position_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_symbol_table_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_symbol_table_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_input_fd_set(long jarg1, _GScanner jarg1_, int jarg2);
  public final static native int _GScanner_input_fd_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_text_set(long jarg1, _GScanner jarg1_, String jarg2);
  public final static native String _GScanner_text_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_text_end_set(long jarg1, _GScanner jarg1_, String jarg2);
  public final static native String _GScanner_text_end_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_buffer_set(long jarg1, _GScanner jarg1_, String jarg2);
  public final static native String _GScanner_buffer_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_scope_id_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_scope_id_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_msg_handler_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_msg_handler_get(long jarg1, _GScanner jarg1_);
  public final static native long new__GScanner();
  public final static native void delete__GScanner(long jarg1);
  public final static native long g_scanner_new(long jarg1, _GScannerConfig jarg1_);
  public final static native void g_scanner_destroy(long jarg1, _GScanner jarg1_);
  public final static native void g_scanner_input_file(long jarg1, _GScanner jarg1_, int jarg2);
  public final static native void g_scanner_sync_file_offset(long jarg1, _GScanner jarg1_);
  public final static native void g_scanner_input_text(long jarg1, _GScanner jarg1_, String jarg2, long jarg3);
  public final static native int g_scanner_get_next_token(long jarg1, _GScanner jarg1_);
  public final static native int g_scanner_peek_next_token(long jarg1, _GScanner jarg1_);
  public final static native int g_scanner_cur_token(long jarg1, _GScanner jarg1_);
  public final static native long g_scanner_cur_value(long jarg1, _GScanner jarg1_);
  public final static native long g_scanner_cur_line(long jarg1, _GScanner jarg1_);
  public final static native long g_scanner_cur_position(long jarg1, _GScanner jarg1_);
  public final static native int g_scanner_eof(long jarg1, _GScanner jarg1_);
  public final static native long g_scanner_set_scope(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native void g_scanner_scope_add_symbol(long jarg1, _GScanner jarg1_, long jarg2, String jarg3, long jarg4);
  public final static native void g_scanner_scope_remove_symbol(long jarg1, _GScanner jarg1_, long jarg2, String jarg3);
  public final static native long g_scanner_scope_lookup_symbol(long jarg1, _GScanner jarg1_, long jarg2, String jarg3);
  public final static native void g_scanner_scope_foreach_symbol(long jarg1, _GScanner jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long g_scanner_lookup_symbol(long jarg1, _GScanner jarg1_, String jarg2);
  public final static native void g_scanner_unexp_token(long jarg1, _GScanner jarg1_, int jarg2, String jarg3, String jarg4, String jarg5, String jarg6, int jarg7);
  public final static native void g_scanner_error(long jarg1, _GScanner jarg1_, String jarg2);
  public final static native void g_scanner_warn(long jarg1, _GScanner jarg1_, String jarg2);
  public final static native long g_sequence_new(long jarg1);
  public final static native void g_sequence_free(long jarg1);
  public final static native int g_sequence_get_length(long jarg1);
  public final static native void g_sequence_foreach(long jarg1, long jarg2, long jarg3);
  public final static native void g_sequence_foreach_range(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void g_sequence_sort(long jarg1, long jarg2, long jarg3);
  public final static native void g_sequence_sort_iter(long jarg1, long jarg2, long jarg3);
  public final static native int g_sequence_is_empty(long jarg1);
  public final static native long g_sequence_get_begin_iter(long jarg1);
  public final static native long g_sequence_get_end_iter(long jarg1);
  public final static native long g_sequence_get_iter_at_pos(long jarg1, int jarg2);
  public final static native long g_sequence_append(long jarg1, long jarg2);
  public final static native long g_sequence_prepend(long jarg1, long jarg2);
  public final static native long g_sequence_insert_before(long jarg1, long jarg2);
  public final static native void g_sequence_move(long jarg1, long jarg2);
  public final static native void g_sequence_swap(long jarg1, long jarg2);
  public final static native long g_sequence_insert_sorted(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long g_sequence_insert_sorted_iter(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void g_sequence_sort_changed(long jarg1, long jarg2, long jarg3);
  public final static native void g_sequence_sort_changed_iter(long jarg1, long jarg2, long jarg3);
  public final static native void g_sequence_remove(long jarg1);
  public final static native void g_sequence_remove_range(long jarg1, long jarg2);
  public final static native void g_sequence_move_range(long jarg1, long jarg2, long jarg3);
  public final static native long g_sequence_search(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long g_sequence_search_iter(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long g_sequence_lookup(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long g_sequence_lookup_iter(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long g_sequence_get(long jarg1);
  public final static native void g_sequence_set(long jarg1, long jarg2);
  public final static native int g_sequence_iter_is_begin(long jarg1);
  public final static native int g_sequence_iter_is_end(long jarg1);
  public final static native long g_sequence_iter_next(long jarg1);
  public final static native long g_sequence_iter_prev(long jarg1);
  public final static native int g_sequence_iter_get_position(long jarg1);
  public final static native long g_sequence_iter_move(long jarg1, int jarg2);
  public final static native long g_sequence_iter_get_sequence(long jarg1);
  public final static native int g_sequence_iter_compare(long jarg1, long jarg2);
  public final static native long g_sequence_range_get_midpoint(long jarg1, long jarg2);
  public final static native long g_shell_error_quark();
  public final static native String g_shell_quote(String jarg1);
  public final static native String g_shell_unquote(String jarg1, long jarg2);
  public final static native int g_shell_parse_argv(String jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long g_slice_alloc(java.math.BigInteger jarg1);
  public final static native long g_slice_alloc0(java.math.BigInteger jarg1);
  public final static native long g_slice_copy(java.math.BigInteger jarg1, long jarg2);
  public final static native void g_slice_free1(java.math.BigInteger jarg1, long jarg2);
  public final static native void g_slice_free_chain_with_offset(java.math.BigInteger jarg1, long jarg2, java.math.BigInteger jarg3);
  public final static native int G_SLICE_CONFIG_ALWAYS_MALLOC_get();
  public final static native void g_slice_set_config(int jarg1, long jarg2);
  public final static native long g_slice_get_config(int jarg1);
  public final static native long g_slice_get_config_state(int jarg1, long jarg2, long jarg3);
  public final static native int G_SPAWN_ERROR_2BIG_get();
  public final static native int G_SPAWN_DEFAULT_get();
  public final static native int G_SPAWN_LEAVE_DESCRIPTORS_OPEN_get();
  public final static native int G_SPAWN_DO_NOT_REAP_CHILD_get();
  public final static native int G_SPAWN_SEARCH_PATH_get();
  public final static native int G_SPAWN_STDOUT_TO_DEV_NULL_get();
  public final static native int G_SPAWN_STDERR_TO_DEV_NULL_get();
  public final static native int G_SPAWN_CHILD_INHERITS_STDIN_get();
  public final static native int G_SPAWN_FILE_AND_ARGV_ZERO_get();
  public final static native int G_SPAWN_SEARCH_PATH_FROM_ENVP_get();
  public final static native int G_SPAWN_CLOEXEC_PIPES_get();
  public final static native long g_spawn_error_quark();
  public final static native long g_spawn_exit_error_quark();
  public final static native int g_spawn_async(String jarg1, long jarg2, long jarg3, int jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int g_spawn_async_with_pipes(String jarg1, long jarg2, long jarg3, int jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11);
  public final static native int g_spawn_sync(String jarg1, long jarg2, long jarg3, int jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10);
  public final static native int g_spawn_command_line_sync(String jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int g_spawn_command_line_async(String jarg1, long jarg2);
  public final static native int g_spawn_check_exit_status(int jarg1, long jarg2);
  public final static native void g_spawn_close_pid(long jarg1);
  public final static native int g_spawn_async_utf8(String jarg1, long jarg2, long jarg3, int jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int g_spawn_async_with_pipes_utf8(String jarg1, long jarg2, long jarg3, int jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11);
  public final static native int g_spawn_sync_utf8(String jarg1, long jarg2, long jarg3, int jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10);
  public final static native int g_spawn_command_line_sync_utf8(String jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int g_spawn_command_line_async_utf8(String jarg1, long jarg2);
  public final static native int G_ASCII_ALNUM_get();
  public final static native int G_ASCII_ALPHA_get();
  public final static native int G_ASCII_CNTRL_get();
  public final static native int G_ASCII_DIGIT_get();
  public final static native int G_ASCII_GRAPH_get();
  public final static native int G_ASCII_LOWER_get();
  public final static native int G_ASCII_PRINT_get();
  public final static native int G_ASCII_PUNCT_get();
  public final static native int G_ASCII_SPACE_get();
  public final static native int G_ASCII_UPPER_get();
  public final static native int G_ASCII_XDIGIT_get();
  public final static native long g_ascii_table_get();
  public final static native char g_ascii_tolower(char jarg1);
  public final static native char g_ascii_toupper(char jarg1);
  public final static native int g_ascii_digit_value(char jarg1);
  public final static native int g_ascii_xdigit_value(char jarg1);
  public final static native String G_STR_DELIMITERS_get();
  public final static native String g_strdelimit(String jarg1, String jarg2, char jarg3);
  public final static native String g_strcanon(String jarg1, String jarg2, char jarg3);
  public final static native String g_strerror(int jarg1);
  public final static native String g_strsignal(int jarg1);
  public final static native String g_strreverse(String jarg1);
  public final static native java.math.BigInteger g_strlcpy(String jarg1, String jarg2, java.math.BigInteger jarg3);
  public final static native java.math.BigInteger g_strlcat(String jarg1, String jarg2, java.math.BigInteger jarg3);
  public final static native String g_strstr_len(String jarg1, long jarg2, String jarg3);
  public final static native String g_strrstr(String jarg1, String jarg2);
  public final static native String g_strrstr_len(String jarg1, long jarg2, String jarg3);
  public final static native int g_str_has_suffix(String jarg1, String jarg2);
  public final static native int g_str_has_prefix(String jarg1, String jarg2);
  public final static native double g_strtod(String jarg1, long jarg2);
  public final static native double g_ascii_strtod(String jarg1, long jarg2);
  public final static native java.math.BigInteger g_ascii_strtoull(String jarg1, long jarg2, long jarg3);
  public final static native long g_ascii_strtoll(String jarg1, long jarg2, long jarg3);
  public final static native int G_ASCII_DTOSTR_BUF_SIZE_get();
  public final static native String g_ascii_dtostr(String jarg1, int jarg2, double jarg3);
  public final static native String g_ascii_formatd(String jarg1, int jarg2, String jarg3, double jarg4);
  public final static native String g_strchug(String jarg1);
  public final static native String g_strchomp(String jarg1);
  public final static native int g_ascii_strcasecmp(String jarg1, String jarg2);
  public final static native int g_ascii_strncasecmp(String jarg1, String jarg2, java.math.BigInteger jarg3);
  public final static native String g_ascii_strdown(String jarg1, long jarg2);
  public final static native String g_ascii_strup(String jarg1, long jarg2);
  public final static native int g_str_is_ascii(String jarg1);
  public final static native int g_strcasecmp(String jarg1, String jarg2);
  public final static native int g_strncasecmp(String jarg1, String jarg2, long jarg3);
  public final static native String g_strdown(String jarg1);
  public final static native String g_strup(String jarg1);
  public final static native String g_strdup(String jarg1);
  public final static native String g_strdup_printf(String jarg1);
  public final static native String g_strdup_vprintf(String jarg1, long jarg2);
  public final static native String g_strndup(String jarg1, java.math.BigInteger jarg2);
  public final static native String g_strnfill(java.math.BigInteger jarg1, char jarg2);
  public final static native String g_strconcat(String jarg1);
  public final static native String g_strjoin(String jarg1);
  public final static native String g_strcompress(String jarg1);
  public final static native String g_strescape(String jarg1, String jarg2);
  public final static native long g_memdup(long jarg1, long jarg2);
  public final static native long g_strsplit(String jarg1, String jarg2, int jarg3);
  public final static native long g_strsplit_set(String jarg1, String jarg2, int jarg3);
  public final static native String g_strjoinv(String jarg1, long jarg2);
  public final static native void g_strfreev(long jarg1);
  public final static native long g_strdupv(long jarg1);
  public final static native long g_strv_length(long jarg1);
  public final static native String g_stpcpy(String jarg1, String jarg2);
  public final static native String g_str_to_ascii(String jarg1, String jarg2);
  public final static native long g_str_tokenize_and_fold(String jarg1, String jarg2, long jarg3);
  public final static native int g_str_match_string(String jarg1, String jarg2, int jarg3);
  public final static native int g_strv_contains(long jarg1, String jarg2);
  public final static native long g_string_chunk_new(java.math.BigInteger jarg1);
  public final static native void g_string_chunk_free(long jarg1);
  public final static native void g_string_chunk_clear(long jarg1);
  public final static native String g_string_chunk_insert(long jarg1, String jarg2);
  public final static native String g_string_chunk_insert_len(long jarg1, String jarg2, long jarg3);
  public final static native String g_string_chunk_insert_const(long jarg1, String jarg2);
  public final static native int g_strcmp0(String jarg1, String jarg2);
  public final static native void g_test_minimized_result(double jarg1, String jarg2);
  public final static native void g_test_maximized_result(double jarg1, String jarg2);
  public final static native void g_test_init(long jarg1, long jarg2);
  public final static native int g_test_subprocess();
  public final static native int g_test_run();
  public final static native void g_test_add_func(String jarg1, long jarg2);
  public final static native void g_test_add_data_func(String jarg1, long jarg2, long jarg3);
  public final static native void g_test_add_data_func_full(String jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void g_test_fail();
  public final static native void g_test_incomplete(String jarg1);
  public final static native void g_test_skip(String jarg1);
  public final static native int g_test_failed();
  public final static native void g_test_set_nonfatal_assertions();
  public final static native void g_test_message(String jarg1);
  public final static native void g_test_bug_base(String jarg1);
  public final static native void g_test_bug(String jarg1);
  public final static native void g_test_timer_start();
  public final static native double g_test_timer_elapsed();
  public final static native double g_test_timer_last();
  public final static native void g_test_queue_free(long jarg1);
  public final static native void g_test_queue_destroy(long jarg1, long jarg2);
  public final static native int G_TEST_TRAP_SILENCE_STDOUT_get();
  public final static native int G_TEST_TRAP_SILENCE_STDERR_get();
  public final static native int G_TEST_TRAP_INHERIT_STDIN_get();
  public final static native int g_test_trap_fork(java.math.BigInteger jarg1, int jarg2);
  public final static native int G_TEST_SUBPROCESS_INHERIT_STDIN_get();
  public final static native int G_TEST_SUBPROCESS_INHERIT_STDOUT_get();
  public final static native int G_TEST_SUBPROCESS_INHERIT_STDERR_get();
  public final static native void g_test_trap_subprocess(String jarg1, java.math.BigInteger jarg2, int jarg3);
  public final static native int g_test_trap_has_passed();
  public final static native int g_test_trap_reached_timeout();
  public final static native int g_test_rand_int();
  public final static native int g_test_rand_int_range(int jarg1, int jarg2);
  public final static native double g_test_rand_double();
  public final static native double g_test_rand_double_range(double jarg1, double jarg2);
  public final static native long g_test_create_case(String jarg1, java.math.BigInteger jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long g_test_create_suite(String jarg1);
  public final static native long g_test_get_root();
  public final static native void g_test_suite_add(long jarg1, long jarg2);
  public final static native void g_test_suite_add_suite(long jarg1, long jarg2);
  public final static native int g_test_run_suite(long jarg1);
  public final static native void g_test_trap_assertions(String jarg1, String jarg2, int jarg3, String jarg4, java.math.BigInteger jarg5, String jarg6);
  public final static native void g_assertion_message(String jarg1, String jarg2, int jarg3, String jarg4, String jarg5);
  public final static native void g_assertion_message_expr(String jarg1, String jarg2, int jarg3, String jarg4, String jarg5);
  public final static native void g_assertion_message_cmpstr(String jarg1, String jarg2, int jarg3, String jarg4, String jarg5, String jarg6, String jarg7, String jarg8);
  public final static native void g_assertion_message_cmpnum(String jarg1, String jarg2, int jarg3, String jarg4, String jarg5, long jarg6, String jarg7, long jarg8, char jarg9);
  public final static native void g_assertion_message_error(String jarg1, String jarg2, int jarg3, String jarg4, String jarg5, long jarg6, _GError jarg6_, long jarg7, int jarg8);
  public final static native void g_test_add_vtable(String jarg1, java.math.BigInteger jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void GTestConfig_test_initialized_set(long jarg1, GTestConfig jarg1_, int jarg2);
  public final static native int GTestConfig_test_initialized_get(long jarg1, GTestConfig jarg1_);
  public final static native void GTestConfig_test_quick_set(long jarg1, GTestConfig jarg1_, int jarg2);
  public final static native int GTestConfig_test_quick_get(long jarg1, GTestConfig jarg1_);
  public final static native void GTestConfig_test_perf_set(long jarg1, GTestConfig jarg1_, int jarg2);
  public final static native int GTestConfig_test_perf_get(long jarg1, GTestConfig jarg1_);
  public final static native void GTestConfig_test_verbose_set(long jarg1, GTestConfig jarg1_, int jarg2);
  public final static native int GTestConfig_test_verbose_get(long jarg1, GTestConfig jarg1_);
  public final static native void GTestConfig_test_quiet_set(long jarg1, GTestConfig jarg1_, int jarg2);
  public final static native int GTestConfig_test_quiet_get(long jarg1, GTestConfig jarg1_);
  public final static native void GTestConfig_test_undefined_set(long jarg1, GTestConfig jarg1_, int jarg2);
  public final static native int GTestConfig_test_undefined_get(long jarg1, GTestConfig jarg1_);
  public final static native long new_GTestConfig();
  public final static native void delete_GTestConfig(long jarg1);
  public final static native long g_test_config_vars_get();
  public final static native void GTestLogMsg_log_type_set(long jarg1, GTestLogMsg jarg1_, int jarg2);
  public final static native int GTestLogMsg_log_type_get(long jarg1, GTestLogMsg jarg1_);
  public final static native void GTestLogMsg_n_strings_set(long jarg1, GTestLogMsg jarg1_, long jarg2);
  public final static native long GTestLogMsg_n_strings_get(long jarg1, GTestLogMsg jarg1_);
  public final static native void GTestLogMsg_strings_set(long jarg1, GTestLogMsg jarg1_, long jarg2);
  public final static native long GTestLogMsg_strings_get(long jarg1, GTestLogMsg jarg1_);
  public final static native void GTestLogMsg_n_nums_set(long jarg1, GTestLogMsg jarg1_, long jarg2);
  public final static native long GTestLogMsg_n_nums_get(long jarg1, GTestLogMsg jarg1_);
  public final static native void GTestLogMsg_nums_set(long jarg1, GTestLogMsg jarg1_, long jarg2);
  public final static native long GTestLogMsg_nums_get(long jarg1, GTestLogMsg jarg1_);
  public final static native long new_GTestLogMsg();
  public final static native void delete_GTestLogMsg(long jarg1);
  public final static native void GTestLogBuffer_data_set(long jarg1, GTestLogBuffer jarg1_, long jarg2, _GString jarg2_);
  public final static native long GTestLogBuffer_data_get(long jarg1, GTestLogBuffer jarg1_);
  public final static native void GTestLogBuffer_msgs_set(long jarg1, GTestLogBuffer jarg1_, long jarg2, _GSList jarg2_);
  public final static native long GTestLogBuffer_msgs_get(long jarg1, GTestLogBuffer jarg1_);
  public final static native long new_GTestLogBuffer();
  public final static native void delete_GTestLogBuffer(long jarg1);
  public final static native String g_test_log_type_name(int jarg1);
  public final static native long g_test_log_buffer_new();
  public final static native void g_test_log_buffer_free(long jarg1, GTestLogBuffer jarg1_);
  public final static native void g_test_log_buffer_push(long jarg1, GTestLogBuffer jarg1_, long jarg2, long jarg3);
  public final static native long g_test_log_buffer_pop(long jarg1, GTestLogBuffer jarg1_);
  public final static native void g_test_log_msg_free(long jarg1, GTestLogMsg jarg1_);
  public final static native void g_test_log_set_fatal_handler(long jarg1, long jarg2);
  public final static native void g_test_expect_message(String jarg1, int jarg2, String jarg3);
  public final static native void g_test_assert_expected_messages_internal(String jarg1, String jarg2, int jarg3, String jarg4);
  public final static native String g_test_build_filename(int jarg1, String jarg2);
  public final static native String g_test_get_dir(int jarg1);
  public final static native String g_test_get_filename(int jarg1, String jarg2);
  public final static native void _GThreadPool_func_set(long jarg1, _GThreadPool jarg1_, long jarg2);
  public final static native long _GThreadPool_func_get(long jarg1, _GThreadPool jarg1_);
  public final static native void _GThreadPool_user_data_set(long jarg1, _GThreadPool jarg1_, long jarg2);
  public final static native long _GThreadPool_user_data_get(long jarg1, _GThreadPool jarg1_);
  public final static native void _GThreadPool_exclusive_set(long jarg1, _GThreadPool jarg1_, int jarg2);
  public final static native int _GThreadPool_exclusive_get(long jarg1, _GThreadPool jarg1_);
  public final static native long new__GThreadPool();
  public final static native void delete__GThreadPool(long jarg1);
  public final static native long g_thread_pool_new(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5);
  public final static native void g_thread_pool_free(long jarg1, _GThreadPool jarg1_, int jarg2, int jarg3);
  public final static native int g_thread_pool_push(long jarg1, _GThreadPool jarg1_, long jarg2, long jarg3);
  public final static native long g_thread_pool_unprocessed(long jarg1, _GThreadPool jarg1_);
  public final static native void g_thread_pool_set_sort_function(long jarg1, _GThreadPool jarg1_, long jarg2, long jarg3);
  public final static native int g_thread_pool_move_to_front(long jarg1, _GThreadPool jarg1_, long jarg2);
  public final static native int g_thread_pool_set_max_threads(long jarg1, _GThreadPool jarg1_, int jarg2, long jarg3);
  public final static native int g_thread_pool_get_max_threads(long jarg1, _GThreadPool jarg1_);
  public final static native long g_thread_pool_get_num_threads(long jarg1, _GThreadPool jarg1_);
  public final static native void g_thread_pool_set_max_unused_threads(int jarg1);
  public final static native int g_thread_pool_get_max_unused_threads();
  public final static native long g_thread_pool_get_num_unused_threads();
  public final static native void g_thread_pool_stop_unused_threads();
  public final static native void g_thread_pool_set_max_idle_time(long jarg1);
  public final static native long g_thread_pool_get_max_idle_time();
  public final static native int G_USEC_PER_SEC_get();
  public final static native long g_timer_new();
  public final static native void g_timer_destroy(long jarg1);
  public final static native void g_timer_start(long jarg1);
  public final static native void g_timer_stop(long jarg1);
  public final static native void g_timer_reset(long jarg1);
  public final static native void g_timer_continue(long jarg1);
  public final static native double g_timer_elapsed(long jarg1, long jarg2);
  public final static native void g_usleep(long jarg1);
  public final static native void g_time_val_add(long jarg1, _GTimeVal jarg1_, int jarg2);
  public final static native int g_time_val_from_iso8601(String jarg1, long jarg2, _GTimeVal jarg2_);
  public final static native String g_time_val_to_iso8601(long jarg1, _GTimeVal jarg1_);
  public final static native void _GTrashStack_next_set(long jarg1, _GTrashStack jarg1_, long jarg2, _GTrashStack jarg2_);
  public final static native long _GTrashStack_next_get(long jarg1, _GTrashStack jarg1_);
  public final static native long new__GTrashStack();
  public final static native void delete__GTrashStack(long jarg1);
  public final static native void g_trash_stack_push(long jarg1, long jarg2);
  public final static native long g_trash_stack_pop(long jarg1);
  public final static native long g_trash_stack_peek(long jarg1);
  public final static native long g_trash_stack_height(long jarg1);
  public final static native long g_tree_new(long jarg1);
  public final static native long g_tree_new_with_data(long jarg1, long jarg2);
  public final static native long g_tree_new_full(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long g_tree_ref(long jarg1);
  public final static native void g_tree_unref(long jarg1);
  public final static native void g_tree_destroy(long jarg1);
  public final static native void g_tree_insert(long jarg1, long jarg2, long jarg3);
  public final static native void g_tree_replace(long jarg1, long jarg2, long jarg3);
  public final static native int g_tree_remove(long jarg1, long jarg2);
  public final static native int g_tree_steal(long jarg1, long jarg2);
  public final static native long g_tree_lookup(long jarg1, long jarg2);
  public final static native int g_tree_lookup_extended(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void g_tree_foreach(long jarg1, long jarg2, long jarg3);
  public final static native void g_tree_traverse(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native long g_tree_search(long jarg1, long jarg2, long jarg3);
  public final static native int g_tree_height(long jarg1);
  public final static native int g_tree_nnodes(long jarg1);
  public final static native String G_URI_RESERVED_CHARS_GENERIC_DELIMITERS_get();
  public final static native String G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS_get();
  public final static native String G_URI_RESERVED_CHARS_ALLOWED_IN_PATH_ELEMENT_get();
  public final static native String G_URI_RESERVED_CHARS_ALLOWED_IN_PATH_get();
  public final static native String G_URI_RESERVED_CHARS_ALLOWED_IN_USERINFO_get();
  public final static native String g_uri_unescape_string(String jarg1, String jarg2);
  public final static native String g_uri_unescape_segment(String jarg1, String jarg2, String jarg3);
  public final static native String g_uri_parse_scheme(String jarg1);
  public final static native String g_uri_escape_string(String jarg1, String jarg2, int jarg3);
  public final static native int g_uuid_string_is_valid(String jarg1);
  public final static native String g_uuid_string_random();
  public final static native long glib_major_version_get();
  public final static native long glib_minor_version_get();
  public final static native long glib_micro_version_get();
  public final static native long glib_interface_age_get();
  public final static native long glib_binary_age_get();
  public final static native String glib_check_version(long jarg1, long jarg2, long jarg3);
  public final static native int MAXPATHLEN_get();
  public final static native int g_win32_ftruncate(int jarg1, long jarg2);
  public final static native String g_win32_getlocale();
  public final static native String g_win32_error_message(int jarg1);
  public final static native String g_win32_get_package_installation_directory(String jarg1, String jarg2);
  public final static native String g_win32_get_package_installation_subdirectory(String jarg1, String jarg2, String jarg3);
  public final static native String g_win32_get_package_installation_directory_of_module(long jarg1);
  public final static native long g_win32_get_windows_version();
  public final static native String g_win32_locale_filename_from_utf8(String jarg1);
  public final static native long g_win32_get_command_line();
  public final static native String g_win32_get_package_installation_directory_utf8(String jarg1, String jarg2);
  public final static native String g_win32_get_package_installation_subdirectory_utf8(String jarg1, String jarg2, String jarg3);
  public final static native int g_win32_check_windows_version(int jarg1, int jarg2, int jarg3, int jarg4);
  public final static native int G_ALLOC_ONLY_get();
  public final static native int G_ALLOC_AND_FREE_get();
  public final static native int G_ALLOCATOR_LIST_get();
  public final static native int G_ALLOCATOR_SLIST_get();
  public final static native int G_ALLOCATOR_NODE_get();
  public final static native long g_mem_chunk_new(String jarg1, int jarg2, java.math.BigInteger jarg3, int jarg4);
  public final static native void g_mem_chunk_destroy(long jarg1);
  public final static native long g_mem_chunk_alloc(long jarg1);
  public final static native long g_mem_chunk_alloc0(long jarg1);
  public final static native void g_mem_chunk_free(long jarg1, long jarg2);
  public final static native void g_mem_chunk_clean(long jarg1);
  public final static native void g_mem_chunk_reset(long jarg1);
  public final static native void g_mem_chunk_print(long jarg1);
  public final static native void g_mem_chunk_info();
  public final static native void g_blow_chunks();
  public final static native long g_allocator_new(String jarg1, long jarg2);
  public final static native void g_allocator_free(long jarg1);
  public final static native void g_list_push_allocator(long jarg1);
  public final static native void g_list_pop_allocator();
  public final static native void g_slist_push_allocator(long jarg1);
  public final static native void g_slist_pop_allocator();
  public final static native void g_node_push_allocator(long jarg1);
  public final static native void g_node_pop_allocator();
  public final static native long g_cache_new(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7);
  public final static native void g_cache_destroy(long jarg1);
  public final static native long g_cache_insert(long jarg1, long jarg2);
  public final static native void g_cache_remove(long jarg1, long jarg2);
  public final static native void g_cache_key_foreach(long jarg1, long jarg2, long jarg3);
  public final static native void g_cache_value_foreach(long jarg1, long jarg2, long jarg3);
  public final static native void _GCompletion_items_set(long jarg1, _GCompletion jarg1_, long jarg2, _GList jarg2_);
  public final static native long _GCompletion_items_get(long jarg1, _GCompletion jarg1_);
  public final static native void _GCompletion_func_set(long jarg1, _GCompletion jarg1_, long jarg2);
  public final static native long _GCompletion_func_get(long jarg1, _GCompletion jarg1_);
  public final static native void _GCompletion_prefix_set(long jarg1, _GCompletion jarg1_, String jarg2);
  public final static native String _GCompletion_prefix_get(long jarg1, _GCompletion jarg1_);
  public final static native void _GCompletion_cache_set(long jarg1, _GCompletion jarg1_, long jarg2, _GList jarg2_);
  public final static native long _GCompletion_cache_get(long jarg1, _GCompletion jarg1_);
  public final static native void _GCompletion_strncmp_func_set(long jarg1, _GCompletion jarg1_, long jarg2);
  public final static native long _GCompletion_strncmp_func_get(long jarg1, _GCompletion jarg1_);
  public final static native long new__GCompletion();
  public final static native void delete__GCompletion(long jarg1);
  public final static native long g_completion_new(long jarg1);
  public final static native void g_completion_add_items(long jarg1, _GCompletion jarg1_, long jarg2, _GList jarg2_);
  public final static native void g_completion_remove_items(long jarg1, _GCompletion jarg1_, long jarg2, _GList jarg2_);
  public final static native void g_completion_clear_items(long jarg1, _GCompletion jarg1_);
  public final static native long g_completion_complete(long jarg1, _GCompletion jarg1_, String jarg2, long jarg3);
  public final static native long g_completion_complete_utf8(long jarg1, _GCompletion jarg1_, String jarg2, long jarg3);
  public final static native void g_completion_set_compare(long jarg1, _GCompletion jarg1_, long jarg2);
  public final static native void g_completion_free(long jarg1, _GCompletion jarg1_);
  public final static native void _GTuples_len_set(long jarg1, _GTuples jarg1_, long jarg2);
  public final static native long _GTuples_len_get(long jarg1, _GTuples jarg1_);
  public final static native long new__GTuples();
  public final static native void delete__GTuples(long jarg1);
  public final static native long g_relation_new(int jarg1);
  public final static native void g_relation_destroy(long jarg1);
  public final static native void g_relation_index(long jarg1, int jarg2, long jarg3, long jarg4);
  public final static native void g_relation_insert(long jarg1);
  public final static native int g_relation_delete(long jarg1, long jarg2, int jarg3);
  public final static native long g_relation_select(long jarg1, long jarg2, int jarg3);
  public final static native int g_relation_count(long jarg1, long jarg2, int jarg3);
  public final static native int g_relation_exists(long jarg1);
  public final static native void g_relation_print(long jarg1);
  public final static native void g_tuples_destroy(long jarg1, _GTuples jarg1_);
  public final static native long g_tuples_index(long jarg1, _GTuples jarg1_, int jarg2, int jarg3);
  public final static native void _GThread_func_set(long jarg1, _GThread jarg1_, long jarg2);
  public final static native long _GThread_func_get(long jarg1, _GThread jarg1_);
  public final static native void _GThread_data_set(long jarg1, _GThread jarg1_, long jarg2);
  public final static native long _GThread_data_get(long jarg1, _GThread jarg1_);
  public final static native void _GThread_joinable_set(long jarg1, _GThread jarg1_, int jarg2);
  public final static native int _GThread_joinable_get(long jarg1, _GThread jarg1_);
  public final static native void _GThread_priority_set(long jarg1, _GThread jarg1_, int jarg2);
  public final static native int _GThread_priority_get(long jarg1, _GThread jarg1_);
  public final static native long new__GThread();
  public final static native void delete__GThread(long jarg1);
  public final static native void _GThreadFunctions_mutex_new_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_mutex_new_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_mutex_lock_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_mutex_lock_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_mutex_trylock_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_mutex_trylock_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_mutex_unlock_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_mutex_unlock_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_mutex_free_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_mutex_free_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_cond_new_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_cond_new_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_cond_signal_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_cond_signal_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_cond_broadcast_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_cond_broadcast_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_cond_wait_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_cond_wait_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_cond_timed_wait_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_cond_timed_wait_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_cond_free_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_cond_free_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_private_new_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_private_new_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_private_get_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_private_get_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_private_set_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_private_set_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_thread_create_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_thread_create_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_thread_yield_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_thread_yield_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_thread_join_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_thread_join_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_thread_exit_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_thread_exit_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_thread_set_priority_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_thread_set_priority_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_thread_self_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_thread_self_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_thread_equal_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_thread_equal_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native long new__GThreadFunctions();
  public final static native void delete__GThreadFunctions(long jarg1);
  public final static native void g_thread_functions_for_glib_use_set(long jarg1, _GThreadFunctions jarg1_);
  public final static native long g_thread_functions_for_glib_use_get();
  public final static native void g_thread_use_default_impl_set(int jarg1);
  public final static native int g_thread_use_default_impl_get();
  public final static native void g_thread_gettime_set(long jarg1);
  public final static native long g_thread_gettime_get();
  public final static native long g_thread_create(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native long g_thread_create_full(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5, int jarg6, long jarg7);
  public final static native void g_thread_set_priority(long jarg1, _GThread jarg1_, int jarg2);
  public final static native void g_thread_foreach(long jarg1, long jarg2);
  public final static native void GStaticMutex_mutex_set(long jarg1, GStaticMutex jarg1_, long jarg2, _GMutex jarg2_);
  public final static native long GStaticMutex_mutex_get(long jarg1, GStaticMutex jarg1_);
  public final static native long new_GStaticMutex();
  public final static native void delete_GStaticMutex(long jarg1);
  public final static native void g_static_mutex_init(long jarg1, GStaticMutex jarg1_);
  public final static native void g_static_mutex_free(long jarg1, GStaticMutex jarg1_);
  public final static native long g_static_mutex_get_mutex_impl(long jarg1, GStaticMutex jarg1_);
  public final static native void _GStaticRecMutex_mutex_set(long jarg1, _GStaticRecMutex jarg1_, long jarg2, GStaticMutex jarg2_);
  public final static native long _GStaticRecMutex_mutex_get(long jarg1, _GStaticRecMutex jarg1_);
  public final static native void _GStaticRecMutex_depth_set(long jarg1, _GStaticRecMutex jarg1_, long jarg2);
  public final static native long _GStaticRecMutex_depth_get(long jarg1, _GStaticRecMutex jarg1_);
  public final static native long _GStaticRecMutex_unused_get(long jarg1, _GStaticRecMutex jarg1_);
  public final static native long new__GStaticRecMutex();
  public final static native void delete__GStaticRecMutex(long jarg1);
  public final static native void _GStaticRecMutex_unused_owner_set(long jarg1, _GStaticRecMutex_unused jarg1_, long jarg2);
  public final static native long _GStaticRecMutex_unused_owner_get(long jarg1, _GStaticRecMutex_unused jarg1_);
  public final static native void _GStaticRecMutex_unused_dummy_set(long jarg1, _GStaticRecMutex_unused jarg1_, double jarg2);
  public final static native double _GStaticRecMutex_unused_dummy_get(long jarg1, _GStaticRecMutex_unused jarg1_);
  public final static native long new__GStaticRecMutex_unused();
  public final static native void delete__GStaticRecMutex_unused(long jarg1);
  public final static native void g_static_rec_mutex_init(long jarg1, _GStaticRecMutex jarg1_);
  public final static native void g_static_rec_mutex_lock(long jarg1, _GStaticRecMutex jarg1_);
  public final static native int g_static_rec_mutex_trylock(long jarg1, _GStaticRecMutex jarg1_);
  public final static native void g_static_rec_mutex_unlock(long jarg1, _GStaticRecMutex jarg1_);
  public final static native void g_static_rec_mutex_lock_full(long jarg1, _GStaticRecMutex jarg1_, long jarg2);
  public final static native long g_static_rec_mutex_unlock_full(long jarg1, _GStaticRecMutex jarg1_);
  public final static native void g_static_rec_mutex_free(long jarg1, _GStaticRecMutex jarg1_);
  public final static native void _GStaticRWLock_mutex_set(long jarg1, _GStaticRWLock jarg1_, long jarg2, GStaticMutex jarg2_);
  public final static native long _GStaticRWLock_mutex_get(long jarg1, _GStaticRWLock jarg1_);
  public final static native void _GStaticRWLock_read_cond_set(long jarg1, _GStaticRWLock jarg1_, long jarg2, _GCond jarg2_);
  public final static native long _GStaticRWLock_read_cond_get(long jarg1, _GStaticRWLock jarg1_);
  public final static native void _GStaticRWLock_write_cond_set(long jarg1, _GStaticRWLock jarg1_, long jarg2, _GCond jarg2_);
  public final static native long _GStaticRWLock_write_cond_get(long jarg1, _GStaticRWLock jarg1_);
  public final static native void _GStaticRWLock_read_counter_set(long jarg1, _GStaticRWLock jarg1_, long jarg2);
  public final static native long _GStaticRWLock_read_counter_get(long jarg1, _GStaticRWLock jarg1_);
  public final static native void _GStaticRWLock_have_writer_set(long jarg1, _GStaticRWLock jarg1_, int jarg2);
  public final static native int _GStaticRWLock_have_writer_get(long jarg1, _GStaticRWLock jarg1_);
  public final static native void _GStaticRWLock_want_to_read_set(long jarg1, _GStaticRWLock jarg1_, long jarg2);
  public final static native long _GStaticRWLock_want_to_read_get(long jarg1, _GStaticRWLock jarg1_);
  public final static native void _GStaticRWLock_want_to_write_set(long jarg1, _GStaticRWLock jarg1_, long jarg2);
  public final static native long _GStaticRWLock_want_to_write_get(long jarg1, _GStaticRWLock jarg1_);
  public final static native long new__GStaticRWLock();
  public final static native void delete__GStaticRWLock(long jarg1);
  public final static native void g_static_rw_lock_init(long jarg1, _GStaticRWLock jarg1_);
  public final static native void g_static_rw_lock_reader_lock(long jarg1, _GStaticRWLock jarg1_);
  public final static native int g_static_rw_lock_reader_trylock(long jarg1, _GStaticRWLock jarg1_);
  public final static native void g_static_rw_lock_reader_unlock(long jarg1, _GStaticRWLock jarg1_);
  public final static native void g_static_rw_lock_writer_lock(long jarg1, _GStaticRWLock jarg1_);
  public final static native int g_static_rw_lock_writer_trylock(long jarg1, _GStaticRWLock jarg1_);
  public final static native void g_static_rw_lock_writer_unlock(long jarg1, _GStaticRWLock jarg1_);
  public final static native void g_static_rw_lock_free(long jarg1, _GStaticRWLock jarg1_);
  public final static native long g_private_new(long jarg1);
  public final static native void _GStaticPrivate_index_set(long jarg1, _GStaticPrivate jarg1_, long jarg2);
  public final static native long _GStaticPrivate_index_get(long jarg1, _GStaticPrivate jarg1_);
  public final static native long new__GStaticPrivate();
  public final static native void delete__GStaticPrivate(long jarg1);
  public final static native void g_static_private_init(long jarg1, _GStaticPrivate jarg1_);
  public final static native long g_static_private_get(long jarg1, _GStaticPrivate jarg1_);
  public final static native void g_static_private_set(long jarg1, _GStaticPrivate jarg1_, long jarg2, long jarg3);
  public final static native void g_static_private_free(long jarg1, _GStaticPrivate jarg1_);
  public final static native int g_once_init_enter_impl(long jarg1);
  public final static native void g_thread_init(long jarg1);
  public final static native void g_thread_init_with_errorcheck_mutexes(long jarg1);
  public final static native int g_thread_get_initialized();
  public final static native void g_threads_got_initialized_set(int jarg1);
  public final static native int g_threads_got_initialized_get();
  public final static native long g_mutex_new();
  public final static native void g_mutex_free(long jarg1, _GMutex jarg1_);
  public final static native long g_cond_new();
  public final static native void g_cond_free(long jarg1, _GCond jarg1_);
  public final static native int g_cond_timed_wait(long jarg1, _GCond jarg1_, long jarg2, _GMutex jarg2_, long jarg3, _GTimeVal jarg3_);
  public final static native void g_autoptr_cleanup_generic_gfree(long jarg1);
  public final static native void g_autoptr_cleanup_gstring_free(long jarg1, _GString jarg1_);
  public final static native int PANGO_VERSION_MAJOR_get();
  public final static native int PANGO_VERSION_MINOR_get();
  public final static native int PANGO_VERSION_MICRO_get();
  public final static native String PANGO_VERSION_STRING_get();
  public final static native int PANGO_VERSION_1_2_get();
  public final static native int PANGO_VERSION_1_4_get();
  public final static native int PANGO_VERSION_1_6_get();
  public final static native int PANGO_VERSION_1_8_get();
  public final static native int PANGO_VERSION_1_10_get();
  public final static native int PANGO_VERSION_1_12_get();
  public final static native int PANGO_VERSION_1_14_get();
  public final static native int PANGO_VERSION_1_16_get();
  public final static native int PANGO_VERSION_1_18_get();
  public final static native int PANGO_VERSION_1_20_get();
  public final static native int PANGO_VERSION_1_22_get();
  public final static native int PANGO_VERSION_1_24_get();
  public final static native int PANGO_VERSION_1_26_get();
  public final static native int PANGO_VERSION_1_28_get();
  public final static native int PANGO_VERSION_1_30_get();
  public final static native int PANGO_VERSION_1_32_get();
  public final static native int PANGO_VERSION_1_34_get();
  public final static native int PANGO_VERSION_1_36_get();
  public final static native int PANGO_VERSION_1_38_get();
  public final static native int PANGO_VERSION_1_40_get();
  public final static native int PANGO_VERSION_1_42_get();
  public final static native int PANGO_VERSION_CUR_STABLE_get();
  public final static native int PANGO_VERSION_PREV_STABLE_get();
  public final static native int PANGO_VERSION_MIN_REQUIRED_get();
  public final static native int PANGO_VERSION_MAX_ALLOWED_get();
  public final static native long pango_coverage_new();
  public final static native long pango_coverage_ref(long jarg1);
  public final static native void pango_coverage_unref(long jarg1);
  public final static native long pango_coverage_copy(long jarg1);
  public final static native int pango_coverage_get(long jarg1, int jarg2);
  public final static native void pango_coverage_set(long jarg1, int jarg2, int jarg3);
  public final static native void pango_coverage_max(long jarg1, long jarg2);
  public final static native void pango_coverage_to_bytes(long jarg1, long jarg2, long jarg3);
  public final static native long pango_coverage_from_bytes(long jarg1, int jarg2);
  public final static native int G_TYPE_FUNDAMENTAL_SHIFT_get();
  public final static native int G_TYPE_RESERVED_GLIB_FIRST_get();
  public final static native int G_TYPE_RESERVED_GLIB_LAST_get();
  public final static native int G_TYPE_RESERVED_BSE_FIRST_get();
  public final static native int G_TYPE_RESERVED_BSE_LAST_get();
  public final static native int G_TYPE_RESERVED_USER_FIRST_get();
  public final static native void _GTypeClass_g_type_set(long jarg1, _GTypeClass jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GTypeClass_g_type_get(long jarg1, _GTypeClass jarg1_);
  public final static native long new__GTypeClass();
  public final static native void delete__GTypeClass(long jarg1);
  public final static native void _GTypeInstance_g_class_set(long jarg1, _GTypeInstance jarg1_, long jarg2, _GTypeClass jarg2_);
  public final static native long _GTypeInstance_g_class_get(long jarg1, _GTypeInstance jarg1_);
  public final static native long new__GTypeInstance();
  public final static native void delete__GTypeInstance(long jarg1);
  public final static native void _GTypeInterface_g_type_set(long jarg1, _GTypeInterface jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GTypeInterface_g_type_get(long jarg1, _GTypeInterface jarg1_);
  public final static native void _GTypeInterface_g_instance_type_set(long jarg1, _GTypeInterface jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GTypeInterface_g_instance_type_get(long jarg1, _GTypeInterface jarg1_);
  public final static native long new__GTypeInterface();
  public final static native void delete__GTypeInterface(long jarg1);
  public final static native void _GTypeQuery_type_set(long jarg1, _GTypeQuery jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GTypeQuery_type_get(long jarg1, _GTypeQuery jarg1_);
  public final static native void _GTypeQuery_type_name_set(long jarg1, _GTypeQuery jarg1_, String jarg2);
  public final static native String _GTypeQuery_type_name_get(long jarg1, _GTypeQuery jarg1_);
  public final static native void _GTypeQuery_class_size_set(long jarg1, _GTypeQuery jarg1_, long jarg2);
  public final static native long _GTypeQuery_class_size_get(long jarg1, _GTypeQuery jarg1_);
  public final static native void _GTypeQuery_instance_size_set(long jarg1, _GTypeQuery jarg1_, long jarg2);
  public final static native long _GTypeQuery_instance_size_get(long jarg1, _GTypeQuery jarg1_);
  public final static native long new__GTypeQuery();
  public final static native void delete__GTypeQuery(long jarg1);
  public final static native int G_TYPE_DEBUG_NONE_get();
  public final static native int G_TYPE_DEBUG_OBJECTS_get();
  public final static native int G_TYPE_DEBUG_SIGNALS_get();
  public final static native int G_TYPE_DEBUG_INSTANCE_COUNT_get();
  public final static native int G_TYPE_DEBUG_MASK_get();
  public final static native void g_type_init();
  public final static native void g_type_init_with_debug_flags(int jarg1);
  public final static native String g_type_name(java.math.BigInteger jarg1);
  public final static native long g_type_qname(java.math.BigInteger jarg1);
  public final static native java.math.BigInteger g_type_from_name(String jarg1);
  public final static native java.math.BigInteger g_type_parent(java.math.BigInteger jarg1);
  public final static native long g_type_depth(java.math.BigInteger jarg1);
  public final static native java.math.BigInteger g_type_next_base(java.math.BigInteger jarg1, java.math.BigInteger jarg2);
  public final static native int g_type_is_a(java.math.BigInteger jarg1, java.math.BigInteger jarg2);
  public final static native long g_type_class_ref(java.math.BigInteger jarg1);
  public final static native long g_type_class_peek(java.math.BigInteger jarg1);
  public final static native long g_type_class_peek_static(java.math.BigInteger jarg1);
  public final static native void g_type_class_unref(long jarg1);
  public final static native long g_type_class_peek_parent(long jarg1);
  public final static native long g_type_interface_peek(long jarg1, java.math.BigInteger jarg2);
  public final static native long g_type_interface_peek_parent(long jarg1);
  public final static native long g_type_default_interface_ref(java.math.BigInteger jarg1);
  public final static native long g_type_default_interface_peek(java.math.BigInteger jarg1);
  public final static native void g_type_default_interface_unref(long jarg1);
  public final static native long g_type_children(java.math.BigInteger jarg1, long jarg2);
  public final static native long g_type_interfaces(java.math.BigInteger jarg1, long jarg2);
  public final static native void g_type_set_qdata(java.math.BigInteger jarg1, long jarg2, long jarg3);
  public final static native long g_type_get_qdata(java.math.BigInteger jarg1, long jarg2);
  public final static native void g_type_query(java.math.BigInteger jarg1, long jarg2, _GTypeQuery jarg2_);
  public final static native int g_type_get_instance_count(java.math.BigInteger jarg1);
  public final static native int G_TYPE_FLAG_CLASSED_get();
  public final static native int G_TYPE_FLAG_INSTANTIATABLE_get();
  public final static native int G_TYPE_FLAG_DERIVABLE_get();
  public final static native int G_TYPE_FLAG_DEEP_DERIVABLE_get();
  public final static native int G_TYPE_FLAG_ABSTRACT_get();
  public final static native int G_TYPE_FLAG_VALUE_ABSTRACT_get();
  public final static native void _GTypeInfo_class_size_set(long jarg1, _GTypeInfo jarg1_, int jarg2);
  public final static native int _GTypeInfo_class_size_get(long jarg1, _GTypeInfo jarg1_);
  public final static native void _GTypeInfo_base_init_set(long jarg1, _GTypeInfo jarg1_, long jarg2);
  public final static native long _GTypeInfo_base_init_get(long jarg1, _GTypeInfo jarg1_);
  public final static native void _GTypeInfo_base_finalize_set(long jarg1, _GTypeInfo jarg1_, long jarg2);
  public final static native long _GTypeInfo_base_finalize_get(long jarg1, _GTypeInfo jarg1_);
  public final static native void _GTypeInfo_class_init_set(long jarg1, _GTypeInfo jarg1_, long jarg2);
  public final static native long _GTypeInfo_class_init_get(long jarg1, _GTypeInfo jarg1_);
  public final static native void _GTypeInfo_class_finalize_set(long jarg1, _GTypeInfo jarg1_, long jarg2);
  public final static native long _GTypeInfo_class_finalize_get(long jarg1, _GTypeInfo jarg1_);
  public final static native void _GTypeInfo_class_data_set(long jarg1, _GTypeInfo jarg1_, long jarg2);
  public final static native long _GTypeInfo_class_data_get(long jarg1, _GTypeInfo jarg1_);
  public final static native void _GTypeInfo_instance_size_set(long jarg1, _GTypeInfo jarg1_, int jarg2);
  public final static native int _GTypeInfo_instance_size_get(long jarg1, _GTypeInfo jarg1_);
  public final static native void _GTypeInfo_n_preallocs_set(long jarg1, _GTypeInfo jarg1_, int jarg2);
  public final static native int _GTypeInfo_n_preallocs_get(long jarg1, _GTypeInfo jarg1_);
  public final static native void _GTypeInfo_instance_init_set(long jarg1, _GTypeInfo jarg1_, long jarg2);
  public final static native long _GTypeInfo_instance_init_get(long jarg1, _GTypeInfo jarg1_);
  public final static native void _GTypeInfo_value_table_set(long jarg1, _GTypeInfo jarg1_, long jarg2, _GTypeValueTable jarg2_);
  public final static native long _GTypeInfo_value_table_get(long jarg1, _GTypeInfo jarg1_);
  public final static native long new__GTypeInfo();
  public final static native void delete__GTypeInfo(long jarg1);
  public final static native void _GTypeFundamentalInfo_type_flags_set(long jarg1, _GTypeFundamentalInfo jarg1_, int jarg2);
  public final static native int _GTypeFundamentalInfo_type_flags_get(long jarg1, _GTypeFundamentalInfo jarg1_);
  public final static native long new__GTypeFundamentalInfo();
  public final static native void delete__GTypeFundamentalInfo(long jarg1);
  public final static native void _GInterfaceInfo_interface_init_set(long jarg1, _GInterfaceInfo jarg1_, long jarg2);
  public final static native long _GInterfaceInfo_interface_init_get(long jarg1, _GInterfaceInfo jarg1_);
  public final static native void _GInterfaceInfo_interface_finalize_set(long jarg1, _GInterfaceInfo jarg1_, long jarg2);
  public final static native long _GInterfaceInfo_interface_finalize_get(long jarg1, _GInterfaceInfo jarg1_);
  public final static native void _GInterfaceInfo_interface_data_set(long jarg1, _GInterfaceInfo jarg1_, long jarg2);
  public final static native long _GInterfaceInfo_interface_data_get(long jarg1, _GInterfaceInfo jarg1_);
  public final static native long new__GInterfaceInfo();
  public final static native void delete__GInterfaceInfo(long jarg1);
  public final static native void _GTypeValueTable_value_init_set(long jarg1, _GTypeValueTable jarg1_, long jarg2);
  public final static native long _GTypeValueTable_value_init_get(long jarg1, _GTypeValueTable jarg1_);
  public final static native void _GTypeValueTable_value_free_set(long jarg1, _GTypeValueTable jarg1_, long jarg2);
  public final static native long _GTypeValueTable_value_free_get(long jarg1, _GTypeValueTable jarg1_);
  public final static native void _GTypeValueTable_value_copy_set(long jarg1, _GTypeValueTable jarg1_, long jarg2);
  public final static native long _GTypeValueTable_value_copy_get(long jarg1, _GTypeValueTable jarg1_);
  public final static native void _GTypeValueTable_value_peek_pointer_set(long jarg1, _GTypeValueTable jarg1_, long jarg2);
  public final static native long _GTypeValueTable_value_peek_pointer_get(long jarg1, _GTypeValueTable jarg1_);
  public final static native void _GTypeValueTable_collect_format_set(long jarg1, _GTypeValueTable jarg1_, String jarg2);
  public final static native String _GTypeValueTable_collect_format_get(long jarg1, _GTypeValueTable jarg1_);
  public final static native void _GTypeValueTable_collect_value_set(long jarg1, _GTypeValueTable jarg1_, long jarg2);
  public final static native long _GTypeValueTable_collect_value_get(long jarg1, _GTypeValueTable jarg1_);
  public final static native void _GTypeValueTable_lcopy_format_set(long jarg1, _GTypeValueTable jarg1_, String jarg2);
  public final static native String _GTypeValueTable_lcopy_format_get(long jarg1, _GTypeValueTable jarg1_);
  public final static native void _GTypeValueTable_lcopy_value_set(long jarg1, _GTypeValueTable jarg1_, long jarg2);
  public final static native long _GTypeValueTable_lcopy_value_get(long jarg1, _GTypeValueTable jarg1_);
  public final static native long new__GTypeValueTable();
  public final static native void delete__GTypeValueTable(long jarg1);
  public final static native java.math.BigInteger g_type_register_static(java.math.BigInteger jarg1, String jarg2, long jarg3, _GTypeInfo jarg3_, int jarg4);
  public final static native java.math.BigInteger g_type_register_static_simple(java.math.BigInteger jarg1, String jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native java.math.BigInteger g_type_register_dynamic(java.math.BigInteger jarg1, String jarg2, long jarg3, int jarg4);
  public final static native java.math.BigInteger g_type_register_fundamental(java.math.BigInteger jarg1, String jarg2, long jarg3, _GTypeInfo jarg3_, long jarg4, _GTypeFundamentalInfo jarg4_, int jarg5);
  public final static native void g_type_add_interface_static(java.math.BigInteger jarg1, java.math.BigInteger jarg2, long jarg3, _GInterfaceInfo jarg3_);
  public final static native void g_type_add_interface_dynamic(java.math.BigInteger jarg1, java.math.BigInteger jarg2, long jarg3);
  public final static native void g_type_interface_add_prerequisite(java.math.BigInteger jarg1, java.math.BigInteger jarg2);
  public final static native long g_type_interface_prerequisites(java.math.BigInteger jarg1, long jarg2);
  public final static native void g_type_class_add_private(long jarg1, java.math.BigInteger jarg2);
  public final static native int g_type_add_instance_private(java.math.BigInteger jarg1, java.math.BigInteger jarg2);
  public final static native long g_type_instance_get_private(long jarg1, _GTypeInstance jarg1_, java.math.BigInteger jarg2);
  public final static native void g_type_class_adjust_private_offset(long jarg1, long jarg2);
  public final static native void g_type_add_class_private(java.math.BigInteger jarg1, java.math.BigInteger jarg2);
  public final static native long g_type_class_get_private(long jarg1, _GTypeClass jarg1_, java.math.BigInteger jarg2);
  public final static native int g_type_class_get_instance_private_offset(long jarg1);
  public final static native void g_type_ensure(java.math.BigInteger jarg1);
  public final static native long g_type_get_type_registration_serial();
  public final static native long g_type_get_plugin(java.math.BigInteger jarg1);
  public final static native long g_type_interface_get_plugin(java.math.BigInteger jarg1, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger g_type_fundamental_next();
  public final static native java.math.BigInteger g_type_fundamental(java.math.BigInteger jarg1);
  public final static native long g_type_create_instance(java.math.BigInteger jarg1);
  public final static native void g_type_free_instance(long jarg1, _GTypeInstance jarg1_);
  public final static native void g_type_add_class_cache_func(long jarg1, long jarg2);
  public final static native void g_type_remove_class_cache_func(long jarg1, long jarg2);
  public final static native void g_type_class_unref_uncached(long jarg1);
  public final static native void g_type_add_interface_check(long jarg1, long jarg2);
  public final static native void g_type_remove_interface_check(long jarg1, long jarg2);
  public final static native long g_type_value_table_peek(java.math.BigInteger jarg1);
  public final static native int g_type_check_instance(long jarg1, _GTypeInstance jarg1_);
  public final static native long g_type_check_instance_cast(long jarg1, _GTypeInstance jarg1_, java.math.BigInteger jarg2);
  public final static native int g_type_check_instance_is_a(long jarg1, _GTypeInstance jarg1_, java.math.BigInteger jarg2);
  public final static native int g_type_check_instance_is_fundamentally_a(long jarg1, _GTypeInstance jarg1_, java.math.BigInteger jarg2);
  public final static native long g_type_check_class_cast(long jarg1, _GTypeClass jarg1_, java.math.BigInteger jarg2);
  public final static native int g_type_check_class_is_a(long jarg1, _GTypeClass jarg1_, java.math.BigInteger jarg2);
  public final static native int g_type_check_is_value_type(java.math.BigInteger jarg1);
  public final static native int g_type_check_value(long jarg1, _GValue jarg1_);
  public final static native int g_type_check_value_holds(long jarg1, _GValue jarg1_, java.math.BigInteger jarg2);
  public final static native int g_type_test_flags(java.math.BigInteger jarg1, long jarg2);
  public final static native String g_type_name_from_instance(long jarg1, _GTypeInstance jarg1_);
  public final static native String g_type_name_from_class(long jarg1, _GTypeClass jarg1_);
  public final static native void _GValue_g_type_set(long jarg1, _GValue jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GValue_g_type_get(long jarg1, _GValue jarg1_);
  public final static native long _GValue_data_get(long jarg1, _GValue jarg1_);
  public final static native long new__GValue();
  public final static native void delete__GValue(long jarg1);
  public final static native void _GValue_data_v_int_set(long jarg1, _GValue_data jarg1_, int jarg2);
  public final static native int _GValue_data_v_int_get(long jarg1, _GValue_data jarg1_);
  public final static native void _GValue_data_v_uint_set(long jarg1, _GValue_data jarg1_, long jarg2);
  public final static native long _GValue_data_v_uint_get(long jarg1, _GValue_data jarg1_);
  public final static native void _GValue_data_v_long_set(long jarg1, _GValue_data jarg1_, int jarg2);
  public final static native int _GValue_data_v_long_get(long jarg1, _GValue_data jarg1_);
  public final static native void _GValue_data_v_ulong_set(long jarg1, _GValue_data jarg1_, long jarg2);
  public final static native long _GValue_data_v_ulong_get(long jarg1, _GValue_data jarg1_);
  public final static native void _GValue_data_v_int64_set(long jarg1, _GValue_data jarg1_, long jarg2);
  public final static native long _GValue_data_v_int64_get(long jarg1, _GValue_data jarg1_);
  public final static native void _GValue_data_v_uint64_set(long jarg1, _GValue_data jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GValue_data_v_uint64_get(long jarg1, _GValue_data jarg1_);
  public final static native void _GValue_data_v_float_set(long jarg1, _GValue_data jarg1_, float jarg2);
  public final static native float _GValue_data_v_float_get(long jarg1, _GValue_data jarg1_);
  public final static native void _GValue_data_v_double_set(long jarg1, _GValue_data jarg1_, double jarg2);
  public final static native double _GValue_data_v_double_get(long jarg1, _GValue_data jarg1_);
  public final static native void _GValue_data_v_pointer_set(long jarg1, _GValue_data jarg1_, long jarg2);
  public final static native long _GValue_data_v_pointer_get(long jarg1, _GValue_data jarg1_);
  public final static native long new__GValue_data();
  public final static native void delete__GValue_data(long jarg1);
  public final static native long g_value_init(long jarg1, _GValue jarg1_, java.math.BigInteger jarg2);
  public final static native void g_value_copy(long jarg1, _GValue jarg1_, long jarg2, _GValue jarg2_);
  public final static native long g_value_reset(long jarg1, _GValue jarg1_);
  public final static native void g_value_unset(long jarg1, _GValue jarg1_);
  public final static native void g_value_set_instance(long jarg1, _GValue jarg1_, long jarg2);
  public final static native void g_value_init_from_instance(long jarg1, _GValue jarg1_, long jarg2);
  public final static native int g_value_fits_pointer(long jarg1, _GValue jarg1_);
  public final static native long g_value_peek_pointer(long jarg1, _GValue jarg1_);
  public final static native int g_value_type_compatible(java.math.BigInteger jarg1, java.math.BigInteger jarg2);
  public final static native int g_value_type_transformable(java.math.BigInteger jarg1, java.math.BigInteger jarg2);
  public final static native int g_value_transform(long jarg1, _GValue jarg1_, long jarg2, _GValue jarg2_);
  public final static native void g_value_register_transform_func(java.math.BigInteger jarg1, java.math.BigInteger jarg2, long jarg3);
  public final static native int G_VALUE_NOCOPY_CONTENTS_get();
  public final static native int G_PARAM_READABLE_get();
  public final static native int G_PARAM_WRITABLE_get();
  public final static native int G_PARAM_READWRITE_get();
  public final static native int G_PARAM_CONSTRUCT_get();
  public final static native int G_PARAM_CONSTRUCT_ONLY_get();
  public final static native int G_PARAM_LAX_VALIDATION_get();
  public final static native int G_PARAM_STATIC_NAME_get();
  public final static native int G_PARAM_PRIVATE_get();
  public final static native int G_PARAM_STATIC_NICK_get();
  public final static native int G_PARAM_STATIC_BLURB_get();
  public final static native int G_PARAM_EXPLICIT_NOTIFY_get();
  public final static native int G_PARAM_DEPRECATED_get();
  public final static native int G_PARAM_MASK_get();
  public final static native int G_PARAM_USER_SHIFT_get();
  public final static native void _GParamSpec_g_type_instance_set(long jarg1, _GParamSpec jarg1_, long jarg2, _GTypeInstance jarg2_);
  public final static native long _GParamSpec_g_type_instance_get(long jarg1, _GParamSpec jarg1_);
  public final static native void _GParamSpec_name_set(long jarg1, _GParamSpec jarg1_, String jarg2);
  public final static native String _GParamSpec_name_get(long jarg1, _GParamSpec jarg1_);
  public final static native void _GParamSpec_flags_set(long jarg1, _GParamSpec jarg1_, int jarg2);
  public final static native int _GParamSpec_flags_get(long jarg1, _GParamSpec jarg1_);
  public final static native void _GParamSpec_value_type_set(long jarg1, _GParamSpec jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GParamSpec_value_type_get(long jarg1, _GParamSpec jarg1_);
  public final static native void _GParamSpec_owner_type_set(long jarg1, _GParamSpec jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GParamSpec_owner_type_get(long jarg1, _GParamSpec jarg1_);
  public final static native void _GParamSpec__nick_set(long jarg1, _GParamSpec jarg1_, String jarg2);
  public final static native String _GParamSpec__nick_get(long jarg1, _GParamSpec jarg1_);
  public final static native void _GParamSpec__blurb_set(long jarg1, _GParamSpec jarg1_, String jarg2);
  public final static native String _GParamSpec__blurb_get(long jarg1, _GParamSpec jarg1_);
  public final static native void _GParamSpec_qdata_set(long jarg1, _GParamSpec jarg1_, long jarg2);
  public final static native long _GParamSpec_qdata_get(long jarg1, _GParamSpec jarg1_);
  public final static native void _GParamSpec_ref_count_set(long jarg1, _GParamSpec jarg1_, long jarg2);
  public final static native long _GParamSpec_ref_count_get(long jarg1, _GParamSpec jarg1_);
  public final static native void _GParamSpec_param_id_set(long jarg1, _GParamSpec jarg1_, long jarg2);
  public final static native long _GParamSpec_param_id_get(long jarg1, _GParamSpec jarg1_);
  public final static native long new__GParamSpec();
  public final static native void delete__GParamSpec(long jarg1);
  public final static native void _GParamSpecClass_g_type_class_set(long jarg1, _GParamSpecClass jarg1_, long jarg2, _GTypeClass jarg2_);
  public final static native long _GParamSpecClass_g_type_class_get(long jarg1, _GParamSpecClass jarg1_);
  public final static native void _GParamSpecClass_value_type_set(long jarg1, _GParamSpecClass jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GParamSpecClass_value_type_get(long jarg1, _GParamSpecClass jarg1_);
  public final static native void _GParamSpecClass_finalize_set(long jarg1, _GParamSpecClass jarg1_, long jarg2);
  public final static native long _GParamSpecClass_finalize_get(long jarg1, _GParamSpecClass jarg1_);
  public final static native void _GParamSpecClass_value_set_default_set(long jarg1, _GParamSpecClass jarg1_, long jarg2);
  public final static native long _GParamSpecClass_value_set_default_get(long jarg1, _GParamSpecClass jarg1_);
  public final static native void _GParamSpecClass_value_validate_set(long jarg1, _GParamSpecClass jarg1_, long jarg2);
  public final static native long _GParamSpecClass_value_validate_get(long jarg1, _GParamSpecClass jarg1_);
  public final static native void _GParamSpecClass_values_cmp_set(long jarg1, _GParamSpecClass jarg1_, long jarg2);
  public final static native long _GParamSpecClass_values_cmp_get(long jarg1, _GParamSpecClass jarg1_);
  public final static native void _GParamSpecClass_dummy_set(long jarg1, _GParamSpecClass jarg1_, long jarg2);
  public final static native long _GParamSpecClass_dummy_get(long jarg1, _GParamSpecClass jarg1_);
  public final static native long new__GParamSpecClass();
  public final static native void delete__GParamSpecClass(long jarg1);
  public final static native void _GParameter_name_set(long jarg1, _GParameter jarg1_, String jarg2);
  public final static native String _GParameter_name_get(long jarg1, _GParameter jarg1_);
  public final static native void _GParameter_value_set(long jarg1, _GParameter jarg1_, long jarg2, _GValue jarg2_);
  public final static native long _GParameter_value_get(long jarg1, _GParameter jarg1_);
  public final static native long new__GParameter();
  public final static native void delete__GParameter(long jarg1);
  public final static native long g_param_spec_ref(long jarg1, _GParamSpec jarg1_);
  public final static native void g_param_spec_unref(long jarg1, _GParamSpec jarg1_);
  public final static native void g_param_spec_sink(long jarg1, _GParamSpec jarg1_);
  public final static native long g_param_spec_ref_sink(long jarg1, _GParamSpec jarg1_);
  public final static native long g_param_spec_get_qdata(long jarg1, _GParamSpec jarg1_, long jarg2);
  public final static native void g_param_spec_set_qdata(long jarg1, _GParamSpec jarg1_, long jarg2, long jarg3);
  public final static native void g_param_spec_set_qdata_full(long jarg1, _GParamSpec jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long g_param_spec_steal_qdata(long jarg1, _GParamSpec jarg1_, long jarg2);
  public final static native long g_param_spec_get_redirect_target(long jarg1, _GParamSpec jarg1_);
  public final static native void g_param_value_set_default(long jarg1, _GParamSpec jarg1_, long jarg2, _GValue jarg2_);
  public final static native int g_param_value_defaults(long jarg1, _GParamSpec jarg1_, long jarg2, _GValue jarg2_);
  public final static native int g_param_value_validate(long jarg1, _GParamSpec jarg1_, long jarg2, _GValue jarg2_);
  public final static native int g_param_value_convert(long jarg1, _GParamSpec jarg1_, long jarg2, _GValue jarg2_, long jarg3, _GValue jarg3_, int jarg4);
  public final static native int g_param_values_cmp(long jarg1, _GParamSpec jarg1_, long jarg2, _GValue jarg2_, long jarg3, _GValue jarg3_);
  public final static native String g_param_spec_get_name(long jarg1, _GParamSpec jarg1_);
  public final static native String g_param_spec_get_nick(long jarg1, _GParamSpec jarg1_);
  public final static native String g_param_spec_get_blurb(long jarg1, _GParamSpec jarg1_);
  public final static native void g_value_set_param(long jarg1, _GValue jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long g_value_get_param(long jarg1, _GValue jarg1_);
  public final static native long g_value_dup_param(long jarg1, _GValue jarg1_);
  public final static native void g_value_take_param(long jarg1, _GValue jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native void g_value_set_param_take_ownership(long jarg1, _GValue jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long g_param_spec_get_default_value(long jarg1, _GParamSpec jarg1_);
  public final static native long g_param_spec_get_name_quark(long jarg1, _GParamSpec jarg1_);
  public final static native void _GParamSpecTypeInfo_instance_size_set(long jarg1, _GParamSpecTypeInfo jarg1_, int jarg2);
  public final static native int _GParamSpecTypeInfo_instance_size_get(long jarg1, _GParamSpecTypeInfo jarg1_);
  public final static native void _GParamSpecTypeInfo_n_preallocs_set(long jarg1, _GParamSpecTypeInfo jarg1_, int jarg2);
  public final static native int _GParamSpecTypeInfo_n_preallocs_get(long jarg1, _GParamSpecTypeInfo jarg1_);
  public final static native void _GParamSpecTypeInfo_instance_init_set(long jarg1, _GParamSpecTypeInfo jarg1_, long jarg2);
  public final static native long _GParamSpecTypeInfo_instance_init_get(long jarg1, _GParamSpecTypeInfo jarg1_);
  public final static native void _GParamSpecTypeInfo_value_type_set(long jarg1, _GParamSpecTypeInfo jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GParamSpecTypeInfo_value_type_get(long jarg1, _GParamSpecTypeInfo jarg1_);
  public final static native void _GParamSpecTypeInfo_finalize_set(long jarg1, _GParamSpecTypeInfo jarg1_, long jarg2);
  public final static native long _GParamSpecTypeInfo_finalize_get(long jarg1, _GParamSpecTypeInfo jarg1_);
  public final static native void _GParamSpecTypeInfo_value_set_default_set(long jarg1, _GParamSpecTypeInfo jarg1_, long jarg2);
  public final static native long _GParamSpecTypeInfo_value_set_default_get(long jarg1, _GParamSpecTypeInfo jarg1_);
  public final static native void _GParamSpecTypeInfo_value_validate_set(long jarg1, _GParamSpecTypeInfo jarg1_, long jarg2);
  public final static native long _GParamSpecTypeInfo_value_validate_get(long jarg1, _GParamSpecTypeInfo jarg1_);
  public final static native void _GParamSpecTypeInfo_values_cmp_set(long jarg1, _GParamSpecTypeInfo jarg1_, long jarg2);
  public final static native long _GParamSpecTypeInfo_values_cmp_get(long jarg1, _GParamSpecTypeInfo jarg1_);
  public final static native long new__GParamSpecTypeInfo();
  public final static native void delete__GParamSpecTypeInfo(long jarg1);
  public final static native java.math.BigInteger g_param_type_register_static(String jarg1, long jarg2, _GParamSpecTypeInfo jarg2_);
  public final static native long g_param_spec_internal(java.math.BigInteger jarg1, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native long g_param_spec_pool_new(int jarg1);
  public final static native void g_param_spec_pool_insert(long jarg1, long jarg2, _GParamSpec jarg2_, java.math.BigInteger jarg3);
  public final static native void g_param_spec_pool_remove(long jarg1, long jarg2, _GParamSpec jarg2_);
  public final static native long g_param_spec_pool_lookup(long jarg1, String jarg2, java.math.BigInteger jarg3, int jarg4);
  public final static native long g_param_spec_pool_list_owned(long jarg1, java.math.BigInteger jarg2);
  public final static native long g_param_spec_pool_list(long jarg1, java.math.BigInteger jarg2, long jarg3);
  public final static native void _GClosureNotifyData_data_set(long jarg1, _GClosureNotifyData jarg1_, long jarg2);
  public final static native long _GClosureNotifyData_data_get(long jarg1, _GClosureNotifyData jarg1_);
  public final static native void _GClosureNotifyData_notify_set(long jarg1, _GClosureNotifyData jarg1_, long jarg2);
  public final static native long _GClosureNotifyData_notify_get(long jarg1, _GClosureNotifyData jarg1_);
  public final static native long new__GClosureNotifyData();
  public final static native void delete__GClosureNotifyData(long jarg1);
  public final static native void _GClosure_ref_count_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_ref_count_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_meta_marshal_nouse_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_meta_marshal_nouse_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_n_guards_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_n_guards_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_n_fnotifiers_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_n_fnotifiers_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_n_inotifiers_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_n_inotifiers_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_in_inotify_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_in_inotify_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_floating_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_floating_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_derivative_flag_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_derivative_flag_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_in_marshal_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_in_marshal_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_is_invalid_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_is_invalid_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_marshal_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_marshal_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_data_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_data_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_notifiers_set(long jarg1, _GClosure jarg1_, long jarg2, _GClosureNotifyData jarg2_);
  public final static native long _GClosure_notifiers_get(long jarg1, _GClosure jarg1_);
  public final static native long new__GClosure();
  public final static native void delete__GClosure(long jarg1);
  public final static native void _GCClosure_closure_set(long jarg1, _GCClosure jarg1_, long jarg2, _GClosure jarg2_);
  public final static native long _GCClosure_closure_get(long jarg1, _GCClosure jarg1_);
  public final static native void _GCClosure_callback_set(long jarg1, _GCClosure jarg1_, long jarg2);
  public final static native long _GCClosure_callback_get(long jarg1, _GCClosure jarg1_);
  public final static native long new__GCClosure();
  public final static native void delete__GCClosure(long jarg1);
  public final static native long g_cclosure_new(long jarg1, long jarg2, long jarg3);
  public final static native long g_cclosure_new_swap(long jarg1, long jarg2, long jarg3);
  public final static native long g_signal_type_cclosure_new(java.math.BigInteger jarg1, long jarg2);
  public final static native long g_closure_ref(long jarg1, _GClosure jarg1_);
  public final static native void g_closure_sink(long jarg1, _GClosure jarg1_);
  public final static native void g_closure_unref(long jarg1, _GClosure jarg1_);
  public final static native long g_closure_new_simple(long jarg1, long jarg2);
  public final static native void g_closure_add_finalize_notifier(long jarg1, _GClosure jarg1_, long jarg2, long jarg3);
  public final static native void g_closure_remove_finalize_notifier(long jarg1, _GClosure jarg1_, long jarg2, long jarg3);
  public final static native void g_closure_add_invalidate_notifier(long jarg1, _GClosure jarg1_, long jarg2, long jarg3);
  public final static native void g_closure_remove_invalidate_notifier(long jarg1, _GClosure jarg1_, long jarg2, long jarg3);
  public final static native void g_closure_add_marshal_guards(long jarg1, _GClosure jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void g_closure_set_marshal(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native void g_closure_set_meta_marshal(long jarg1, _GClosure jarg1_, long jarg2, long jarg3);
  public final static native void g_closure_invalidate(long jarg1, _GClosure jarg1_);
  public final static native void g_closure_invoke(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5);
  public final static native void g_cclosure_marshal_generic(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_generic_va(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_VOID__VOID(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_VOID__VOIDv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_VOID__BOOLEAN(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_VOID__BOOLEANv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_VOID__CHAR(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_VOID__CHARv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_VOID__UCHAR(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_VOID__UCHARv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_VOID__INT(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_VOID__INTv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_VOID__UINT(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_VOID__UINTv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_VOID__LONG(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_VOID__LONGv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_VOID__ULONG(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_VOID__ULONGv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_VOID__ENUM(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_VOID__ENUMv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_VOID__FLAGS(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_VOID__FLAGSv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_VOID__FLOAT(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_VOID__FLOATv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_VOID__DOUBLE(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_VOID__DOUBLEv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_VOID__STRING(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_VOID__STRINGv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_VOID__PARAM(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_VOID__PARAMv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_VOID__BOXED(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_VOID__BOXEDv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_VOID__POINTER(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_VOID__POINTERv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_VOID__OBJECT(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_VOID__OBJECTv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_VOID__VARIANT(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_VOID__VARIANTv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_VOID__UINT_POINTER(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_VOID__UINT_POINTERv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_BOOLEAN__FLAGS(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_BOOLEAN__FLAGSv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_STRING__OBJECT_POINTER(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_STRING__OBJECT_POINTERv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native void g_cclosure_marshal_BOOLEAN__BOXED_BOXED(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7);
  public final static native int G_SIGNAL_RUN_FIRST_get();
  public final static native int G_SIGNAL_RUN_LAST_get();
  public final static native int G_SIGNAL_RUN_CLEANUP_get();
  public final static native int G_SIGNAL_NO_RECURSE_get();
  public final static native int G_SIGNAL_DETAILED_get();
  public final static native int G_SIGNAL_ACTION_get();
  public final static native int G_SIGNAL_NO_HOOKS_get();
  public final static native int G_SIGNAL_MUST_COLLECT_get();
  public final static native int G_SIGNAL_DEPRECATED_get();
  public final static native int G_SIGNAL_FLAGS_MASK_get();
  public final static native int G_CONNECT_AFTER_get();
  public final static native int G_CONNECT_SWAPPED_get();
  public final static native int G_SIGNAL_MATCH_ID_get();
  public final static native int G_SIGNAL_MATCH_DETAIL_get();
  public final static native int G_SIGNAL_MATCH_CLOSURE_get();
  public final static native int G_SIGNAL_MATCH_FUNC_get();
  public final static native int G_SIGNAL_MATCH_DATA_get();
  public final static native int G_SIGNAL_MATCH_UNBLOCKED_get();
  public final static native int G_SIGNAL_MATCH_MASK_get();
  public final static native void _GSignalInvocationHint_signal_id_set(long jarg1, _GSignalInvocationHint jarg1_, long jarg2);
  public final static native long _GSignalInvocationHint_signal_id_get(long jarg1, _GSignalInvocationHint jarg1_);
  public final static native void _GSignalInvocationHint_detail_set(long jarg1, _GSignalInvocationHint jarg1_, long jarg2);
  public final static native long _GSignalInvocationHint_detail_get(long jarg1, _GSignalInvocationHint jarg1_);
  public final static native void _GSignalInvocationHint_run_type_set(long jarg1, _GSignalInvocationHint jarg1_, int jarg2);
  public final static native int _GSignalInvocationHint_run_type_get(long jarg1, _GSignalInvocationHint jarg1_);
  public final static native long new__GSignalInvocationHint();
  public final static native void delete__GSignalInvocationHint(long jarg1);
  public final static native void _GSignalQuery_signal_id_set(long jarg1, _GSignalQuery jarg1_, long jarg2);
  public final static native long _GSignalQuery_signal_id_get(long jarg1, _GSignalQuery jarg1_);
  public final static native void _GSignalQuery_signal_name_set(long jarg1, _GSignalQuery jarg1_, String jarg2);
  public final static native String _GSignalQuery_signal_name_get(long jarg1, _GSignalQuery jarg1_);
  public final static native void _GSignalQuery_itype_set(long jarg1, _GSignalQuery jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GSignalQuery_itype_get(long jarg1, _GSignalQuery jarg1_);
  public final static native void _GSignalQuery_signal_flags_set(long jarg1, _GSignalQuery jarg1_, int jarg2);
  public final static native int _GSignalQuery_signal_flags_get(long jarg1, _GSignalQuery jarg1_);
  public final static native void _GSignalQuery_return_type_set(long jarg1, _GSignalQuery jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GSignalQuery_return_type_get(long jarg1, _GSignalQuery jarg1_);
  public final static native void _GSignalQuery_n_params_set(long jarg1, _GSignalQuery jarg1_, long jarg2);
  public final static native long _GSignalQuery_n_params_get(long jarg1, _GSignalQuery jarg1_);
  public final static native void _GSignalQuery_param_types_set(long jarg1, _GSignalQuery jarg1_, long jarg2);
  public final static native long _GSignalQuery_param_types_get(long jarg1, _GSignalQuery jarg1_);
  public final static native long new__GSignalQuery();
  public final static native void delete__GSignalQuery(long jarg1);
  public final static native long g_signal_newv(String jarg1, java.math.BigInteger jarg2, int jarg3, long jarg4, _GClosure jarg4_, long jarg5, long jarg6, long jarg7, java.math.BigInteger jarg8, long jarg9, long jarg10);
  public final static native long g_signal_new_valist(String jarg1, java.math.BigInteger jarg2, int jarg3, long jarg4, _GClosure jarg4_, long jarg5, long jarg6, long jarg7, java.math.BigInteger jarg8, long jarg9, long jarg10);
  public final static native long g_signal_new(String jarg1, java.math.BigInteger jarg2, int jarg3, long jarg4, long jarg5, long jarg6, long jarg7, java.math.BigInteger jarg8, long jarg9);
  public final static native long g_signal_new_class_handler(String jarg1, java.math.BigInteger jarg2, int jarg3, long jarg4, long jarg5, long jarg6, long jarg7, java.math.BigInteger jarg8, long jarg9);
  public final static native void g_signal_set_va_marshaller(long jarg1, java.math.BigInteger jarg2, long jarg3);
  public final static native void g_signal_emitv(long jarg1, _GValue jarg1_, long jarg2, long jarg3, long jarg4, _GValue jarg4_);
  public final static native void g_signal_emit_valist(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void g_signal_emit(long jarg1, long jarg2, long jarg3);
  public final static native void g_signal_emit_by_name(long jarg1, String jarg2);
  public final static native long g_signal_lookup(String jarg1, java.math.BigInteger jarg2);
  public final static native String g_signal_name(long jarg1);
  public final static native void g_signal_query(long jarg1, long jarg2, _GSignalQuery jarg2_);
  public final static native long g_signal_list_ids(java.math.BigInteger jarg1, long jarg2);
  public final static native int g_signal_parse_name(String jarg1, java.math.BigInteger jarg2, long jarg3, long jarg4, int jarg5);
  public final static native long g_signal_get_invocation_hint(long jarg1);
  public final static native void g_signal_stop_emission(long jarg1, long jarg2, long jarg3);
  public final static native void g_signal_stop_emission_by_name(long jarg1, String jarg2);
  public final static native long g_signal_add_emission_hook(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void g_signal_remove_emission_hook(long jarg1, long jarg2);
  public final static native int g_signal_has_handler_pending(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native long g_signal_connect_closure_by_id(long jarg1, long jarg2, long jarg3, long jarg4, _GClosure jarg4_, int jarg5);
  public final static native long g_signal_connect_closure(long jarg1, String jarg2, long jarg3, _GClosure jarg3_, int jarg4);
  public final static native long g_signal_connect_data(long jarg1, String jarg2, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native void g_signal_handler_block(long jarg1, long jarg2);
  public final static native void g_signal_handler_unblock(long jarg1, long jarg2);
  public final static native void g_signal_handler_disconnect(long jarg1, long jarg2);
  public final static native int g_signal_handler_is_connected(long jarg1, long jarg2);
  public final static native long g_signal_handler_find(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5, _GClosure jarg5_, long jarg6, long jarg7);
  public final static native long g_signal_handlers_block_matched(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5, _GClosure jarg5_, long jarg6, long jarg7);
  public final static native long g_signal_handlers_unblock_matched(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5, _GClosure jarg5_, long jarg6, long jarg7);
  public final static native long g_signal_handlers_disconnect_matched(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5, _GClosure jarg5_, long jarg6, long jarg7);
  public final static native void g_signal_override_class_closure(long jarg1, java.math.BigInteger jarg2, long jarg3, _GClosure jarg3_);
  public final static native void g_signal_override_class_handler(String jarg1, java.math.BigInteger jarg2, long jarg3);
  public final static native void g_signal_chain_from_overridden(long jarg1, _GValue jarg1_, long jarg2, _GValue jarg2_);
  public final static native void g_signal_chain_from_overridden_handler(long jarg1);
  public final static native int g_signal_accumulator_true_handled(long jarg1, _GSignalInvocationHint jarg1_, long jarg2, _GValue jarg2_, long jarg3, _GValue jarg3_, long jarg4);
  public final static native int g_signal_accumulator_first_wins(long jarg1, _GSignalInvocationHint jarg1_, long jarg2, _GValue jarg2_, long jarg3, _GValue jarg3_, long jarg4);
  public final static native void g_signal_handlers_destroy(long jarg1);
  public final static native java.math.BigInteger g_date_get_type();
  public final static native java.math.BigInteger g_strv_get_type();
  public final static native java.math.BigInteger g_gstring_get_type();
  public final static native java.math.BigInteger g_hash_table_get_type();
  public final static native java.math.BigInteger g_array_get_type();
  public final static native java.math.BigInteger g_byte_array_get_type();
  public final static native java.math.BigInteger g_ptr_array_get_type();
  public final static native java.math.BigInteger g_bytes_get_type();
  public final static native java.math.BigInteger g_variant_type_get_gtype();
  public final static native java.math.BigInteger g_regex_get_type();
  public final static native java.math.BigInteger g_match_info_get_type();
  public final static native java.math.BigInteger g_error_get_type();
  public final static native java.math.BigInteger g_date_time_get_type();
  public final static native java.math.BigInteger g_time_zone_get_type();
  public final static native java.math.BigInteger g_io_channel_get_type();
  public final static native java.math.BigInteger g_io_condition_get_type();
  public final static native java.math.BigInteger g_variant_builder_get_type();
  public final static native java.math.BigInteger g_variant_dict_get_type();
  public final static native java.math.BigInteger g_key_file_get_type();
  public final static native java.math.BigInteger g_main_loop_get_type();
  public final static native java.math.BigInteger g_main_context_get_type();
  public final static native java.math.BigInteger g_source_get_type();
  public final static native java.math.BigInteger g_pollfd_get_type();
  public final static native java.math.BigInteger g_thread_get_type();
  public final static native java.math.BigInteger g_checksum_get_type();
  public final static native java.math.BigInteger g_markup_parse_context_get_type();
  public final static native java.math.BigInteger g_mapped_file_get_type();
  public final static native java.math.BigInteger g_option_group_get_type();
  public final static native java.math.BigInteger g_variant_get_gtype();
  public final static native long g_boxed_copy(java.math.BigInteger jarg1, long jarg2);
  public final static native void g_boxed_free(java.math.BigInteger jarg1, long jarg2);
  public final static native void g_value_set_boxed(long jarg1, _GValue jarg1_, long jarg2);
  public final static native void g_value_set_static_boxed(long jarg1, _GValue jarg1_, long jarg2);
  public final static native void g_value_take_boxed(long jarg1, _GValue jarg1_, long jarg2);
  public final static native void g_value_set_boxed_take_ownership(long jarg1, _GValue jarg1_, long jarg2);
  public final static native long g_value_get_boxed(long jarg1, _GValue jarg1_);
  public final static native long g_value_dup_boxed(long jarg1, _GValue jarg1_);
  public final static native java.math.BigInteger g_boxed_type_register_static(String jarg1, long jarg2, long jarg3);
  public final static native java.math.BigInteger g_closure_get_type();
  public final static native java.math.BigInteger g_value_get_type();
  public final static native void _GObject_g_type_instance_set(long jarg1, _GObject jarg1_, long jarg2, _GTypeInstance jarg2_);
  public final static native long _GObject_g_type_instance_get(long jarg1, _GObject jarg1_);
  public final static native void _GObject_ref_count_set(long jarg1, _GObject jarg1_, long jarg2);
  public final static native long _GObject_ref_count_get(long jarg1, _GObject jarg1_);
  public final static native void _GObject_qdata_set(long jarg1, _GObject jarg1_, long jarg2);
  public final static native long _GObject_qdata_get(long jarg1, _GObject jarg1_);
  public final static native long new__GObject();
  public final static native void delete__GObject(long jarg1);
  public final static native void _GObjectClass_g_type_class_set(long jarg1, _GObjectClass jarg1_, long jarg2, _GTypeClass jarg2_);
  public final static native long _GObjectClass_g_type_class_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_construct_properties_set(long jarg1, _GObjectClass jarg1_, long jarg2, _GSList jarg2_);
  public final static native long _GObjectClass_construct_properties_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_constructor_set(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native long _GObjectClass_constructor_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_set_property_set(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native long _GObjectClass_set_property_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_get_property_set(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native long _GObjectClass_get_property_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_dispose_set(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native long _GObjectClass_dispose_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_finalize_set(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native long _GObjectClass_finalize_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_dispatch_properties_changed_set(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native long _GObjectClass_dispatch_properties_changed_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_notify_set(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native long _GObjectClass_notify_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_constructed_set(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native long _GObjectClass_constructed_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_flags_set(long jarg1, _GObjectClass jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GObjectClass_flags_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_pdummy_set(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native long _GObjectClass_pdummy_get(long jarg1, _GObjectClass jarg1_);
  public final static native long new__GObjectClass();
  public final static native void delete__GObjectClass(long jarg1);
  public final static native void _GObjectConstructParam_pspec_set(long jarg1, _GObjectConstructParam jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GObjectConstructParam_pspec_get(long jarg1, _GObjectConstructParam jarg1_);
  public final static native void _GObjectConstructParam_value_set(long jarg1, _GObjectConstructParam jarg1_, long jarg2, _GValue jarg2_);
  public final static native long _GObjectConstructParam_value_get(long jarg1, _GObjectConstructParam jarg1_);
  public final static native long new__GObjectConstructParam();
  public final static native void delete__GObjectConstructParam(long jarg1);
  public final static native java.math.BigInteger g_initially_unowned_get_type();
  public final static native void g_object_class_install_property(long jarg1, _GObjectClass jarg1_, long jarg2, long jarg3, _GParamSpec jarg3_);
  public final static native long g_object_class_find_property(long jarg1, _GObjectClass jarg1_, String jarg2);
  public final static native long g_object_class_list_properties(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native void g_object_class_override_property(long jarg1, _GObjectClass jarg1_, long jarg2, String jarg3);
  public final static native void g_object_class_install_properties(long jarg1, _GObjectClass jarg1_, long jarg2, long jarg3);
  public final static native void g_object_interface_install_property(long jarg1, long jarg2, _GParamSpec jarg2_);
  public final static native long g_object_interface_find_property(long jarg1, String jarg2);
  public final static native long g_object_interface_list_properties(long jarg1, long jarg2);
  public final static native java.math.BigInteger g_object_get_type();
  public final static native long g_object_new(java.math.BigInteger jarg1, String jarg2);
  public final static native long g_object_newv(java.math.BigInteger jarg1, long jarg2, long jarg3, _GParameter jarg3_);
  public final static native long g_object_new_valist(java.math.BigInteger jarg1, String jarg2, long jarg3);
  public final static native void g_object_set(long jarg1, String jarg2);
  public final static native void g_object_get(long jarg1, String jarg2);
  public final static native long g_object_connect(long jarg1, String jarg2);
  public final static native void g_object_disconnect(long jarg1, String jarg2);
  public final static native void g_object_set_valist(long jarg1, _GObject jarg1_, String jarg2, long jarg3);
  public final static native void g_object_get_valist(long jarg1, _GObject jarg1_, String jarg2, long jarg3);
  public final static native void g_object_set_property(long jarg1, _GObject jarg1_, String jarg2, long jarg3, _GValue jarg3_);
  public final static native void g_object_get_property(long jarg1, _GObject jarg1_, String jarg2, long jarg3, _GValue jarg3_);
  public final static native void g_object_freeze_notify(long jarg1, _GObject jarg1_);
  public final static native void g_object_notify(long jarg1, _GObject jarg1_, String jarg2);
  public final static native void g_object_notify_by_pspec(long jarg1, _GObject jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native void g_object_thaw_notify(long jarg1, _GObject jarg1_);
  public final static native int g_object_is_floating(long jarg1);
  public final static native long g_object_ref_sink(long jarg1);
  public final static native long g_object_ref(long jarg1);
  public final static native void g_object_unref(long jarg1);
  public final static native void g_object_weak_ref(long jarg1, _GObject jarg1_, long jarg2, long jarg3);
  public final static native void g_object_weak_unref(long jarg1, _GObject jarg1_, long jarg2, long jarg3);
  public final static native void g_object_add_weak_pointer(long jarg1, _GObject jarg1_, long jarg2);
  public final static native void g_object_remove_weak_pointer(long jarg1, _GObject jarg1_, long jarg2);
  public final static native void g_object_add_toggle_ref(long jarg1, _GObject jarg1_, long jarg2, long jarg3);
  public final static native void g_object_remove_toggle_ref(long jarg1, _GObject jarg1_, long jarg2, long jarg3);
  public final static native long g_object_get_qdata(long jarg1, _GObject jarg1_, long jarg2);
  public final static native void g_object_set_qdata(long jarg1, _GObject jarg1_, long jarg2, long jarg3);
  public final static native void g_object_set_qdata_full(long jarg1, _GObject jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long g_object_steal_qdata(long jarg1, _GObject jarg1_, long jarg2);
  public final static native long g_object_dup_qdata(long jarg1, _GObject jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native int g_object_replace_qdata(long jarg1, _GObject jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long g_object_get_data(long jarg1, _GObject jarg1_, String jarg2);
  public final static native void g_object_set_data(long jarg1, _GObject jarg1_, String jarg2, long jarg3);
  public final static native void g_object_set_data_full(long jarg1, _GObject jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native long g_object_steal_data(long jarg1, _GObject jarg1_, String jarg2);
  public final static native long g_object_dup_data(long jarg1, _GObject jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native int g_object_replace_data(long jarg1, _GObject jarg1_, String jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void g_object_watch_closure(long jarg1, _GObject jarg1_, long jarg2, _GClosure jarg2_);
  public final static native long g_cclosure_new_object(long jarg1, long jarg2, _GObject jarg2_);
  public final static native long g_cclosure_new_object_swap(long jarg1, long jarg2, _GObject jarg2_);
  public final static native long g_closure_new_object(long jarg1, long jarg2, _GObject jarg2_);
  public final static native void g_value_set_object(long jarg1, _GValue jarg1_, long jarg2);
  public final static native long g_value_get_object(long jarg1, _GValue jarg1_);
  public final static native long g_value_dup_object(long jarg1, _GValue jarg1_);
  public final static native long g_signal_connect_object(long jarg1, String jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void g_object_force_floating(long jarg1, _GObject jarg1_);
  public final static native void g_object_run_dispose(long jarg1, _GObject jarg1_);
  public final static native void g_value_take_object(long jarg1, _GValue jarg1_, long jarg2);
  public final static native void g_value_set_object_take_ownership(long jarg1, _GValue jarg1_, long jarg2);
  public final static native java.math.BigInteger g_object_compat_control(java.math.BigInteger jarg1, long jarg2);
  public final static native void g_clear_object(long jarg1);
  public final static native long GWeakRef_priv_get(long jarg1, GWeakRef jarg1_);
  public final static native long new_GWeakRef();
  public final static native void delete_GWeakRef(long jarg1);
  public final static native void GWeakRef_priv_p_set(long jarg1, GWeakRef_priv jarg1_, long jarg2);
  public final static native long GWeakRef_priv_p_get(long jarg1, GWeakRef_priv jarg1_);
  public final static native long new_GWeakRef_priv();
  public final static native void delete_GWeakRef_priv(long jarg1);
  public final static native void g_weak_ref_init(long jarg1, GWeakRef jarg1_, long jarg2);
  public final static native void g_weak_ref_clear(long jarg1, GWeakRef jarg1_);
  public final static native long g_weak_ref_get(long jarg1, GWeakRef jarg1_);
  public final static native void g_weak_ref_set(long jarg1, GWeakRef jarg1_, long jarg2);
  public final static native int G_BINDING_DEFAULT_get();
  public final static native int G_BINDING_BIDIRECTIONAL_get();
  public final static native int G_BINDING_SYNC_CREATE_get();
  public final static native int G_BINDING_INVERT_BOOLEAN_get();
  public final static native java.math.BigInteger g_binding_flags_get_type();
  public final static native java.math.BigInteger g_binding_get_type();
  public final static native int g_binding_get_flags(long jarg1);
  public final static native long g_binding_get_source(long jarg1);
  public final static native long g_binding_get_target(long jarg1);
  public final static native String g_binding_get_source_property(long jarg1);
  public final static native String g_binding_get_target_property(long jarg1);
  public final static native void g_binding_unbind(long jarg1);
  public final static native long g_object_bind_property(long jarg1, String jarg2, long jarg3, String jarg4, int jarg5);
  public final static native long g_object_bind_property_full(long jarg1, String jarg2, long jarg3, String jarg4, int jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native long g_object_bind_property_with_closures(long jarg1, String jarg2, long jarg3, String jarg4, int jarg5, long jarg6, _GClosure jarg6_, long jarg7, _GClosure jarg7_);
  public final static native void _GEnumClass_g_type_class_set(long jarg1, _GEnumClass jarg1_, long jarg2, _GTypeClass jarg2_);
  public final static native long _GEnumClass_g_type_class_get(long jarg1, _GEnumClass jarg1_);
  public final static native void _GEnumClass_minimum_set(long jarg1, _GEnumClass jarg1_, int jarg2);
  public final static native int _GEnumClass_minimum_get(long jarg1, _GEnumClass jarg1_);
  public final static native void _GEnumClass_maximum_set(long jarg1, _GEnumClass jarg1_, int jarg2);
  public final static native int _GEnumClass_maximum_get(long jarg1, _GEnumClass jarg1_);
  public final static native void _GEnumClass_n_values_set(long jarg1, _GEnumClass jarg1_, long jarg2);
  public final static native long _GEnumClass_n_values_get(long jarg1, _GEnumClass jarg1_);
  public final static native void _GEnumClass_values_set(long jarg1, _GEnumClass jarg1_, long jarg2, _GEnumValue jarg2_);
  public final static native long _GEnumClass_values_get(long jarg1, _GEnumClass jarg1_);
  public final static native long new__GEnumClass();
  public final static native void delete__GEnumClass(long jarg1);
  public final static native void _GFlagsClass_g_type_class_set(long jarg1, _GFlagsClass jarg1_, long jarg2, _GTypeClass jarg2_);
  public final static native long _GFlagsClass_g_type_class_get(long jarg1, _GFlagsClass jarg1_);
  public final static native void _GFlagsClass_mask_set(long jarg1, _GFlagsClass jarg1_, long jarg2);
  public final static native long _GFlagsClass_mask_get(long jarg1, _GFlagsClass jarg1_);
  public final static native void _GFlagsClass_n_values_set(long jarg1, _GFlagsClass jarg1_, long jarg2);
  public final static native long _GFlagsClass_n_values_get(long jarg1, _GFlagsClass jarg1_);
  public final static native void _GFlagsClass_values_set(long jarg1, _GFlagsClass jarg1_, long jarg2, _GFlagsValue jarg2_);
  public final static native long _GFlagsClass_values_get(long jarg1, _GFlagsClass jarg1_);
  public final static native long new__GFlagsClass();
  public final static native void delete__GFlagsClass(long jarg1);
  public final static native void _GEnumValue_value_set(long jarg1, _GEnumValue jarg1_, int jarg2);
  public final static native int _GEnumValue_value_get(long jarg1, _GEnumValue jarg1_);
  public final static native void _GEnumValue_value_name_set(long jarg1, _GEnumValue jarg1_, String jarg2);
  public final static native String _GEnumValue_value_name_get(long jarg1, _GEnumValue jarg1_);
  public final static native void _GEnumValue_value_nick_set(long jarg1, _GEnumValue jarg1_, String jarg2);
  public final static native String _GEnumValue_value_nick_get(long jarg1, _GEnumValue jarg1_);
  public final static native long new__GEnumValue();
  public final static native void delete__GEnumValue(long jarg1);
  public final static native void _GFlagsValue_value_set(long jarg1, _GFlagsValue jarg1_, long jarg2);
  public final static native long _GFlagsValue_value_get(long jarg1, _GFlagsValue jarg1_);
  public final static native void _GFlagsValue_value_name_set(long jarg1, _GFlagsValue jarg1_, String jarg2);
  public final static native String _GFlagsValue_value_name_get(long jarg1, _GFlagsValue jarg1_);
  public final static native void _GFlagsValue_value_nick_set(long jarg1, _GFlagsValue jarg1_, String jarg2);
  public final static native String _GFlagsValue_value_nick_get(long jarg1, _GFlagsValue jarg1_);
  public final static native long new__GFlagsValue();
  public final static native void delete__GFlagsValue(long jarg1);
  public final static native long g_enum_get_value(long jarg1, _GEnumClass jarg1_, int jarg2);
  public final static native long g_enum_get_value_by_name(long jarg1, _GEnumClass jarg1_, String jarg2);
  public final static native long g_enum_get_value_by_nick(long jarg1, _GEnumClass jarg1_, String jarg2);
  public final static native long g_flags_get_first_value(long jarg1, _GFlagsClass jarg1_, long jarg2);
  public final static native long g_flags_get_value_by_name(long jarg1, _GFlagsClass jarg1_, String jarg2);
  public final static native long g_flags_get_value_by_nick(long jarg1, _GFlagsClass jarg1_, String jarg2);
  public final static native void g_value_set_enum(long jarg1, _GValue jarg1_, int jarg2);
  public final static native int g_value_get_enum(long jarg1, _GValue jarg1_);
  public final static native void g_value_set_flags(long jarg1, _GValue jarg1_, long jarg2);
  public final static native long g_value_get_flags(long jarg1, _GValue jarg1_);
  public final static native java.math.BigInteger g_enum_register_static(String jarg1, long jarg2, _GEnumValue jarg2_);
  public final static native java.math.BigInteger g_flags_register_static(String jarg1, long jarg2, _GFlagsValue jarg2_);
  public final static native void g_enum_complete_type_info(java.math.BigInteger jarg1, long jarg2, _GTypeInfo jarg2_, long jarg3, _GEnumValue jarg3_);
  public final static native void g_flags_complete_type_info(java.math.BigInteger jarg1, long jarg2, _GTypeInfo jarg2_, long jarg3, _GFlagsValue jarg3_);
  public final static native void _GParamSpecChar_parent_instance_set(long jarg1, _GParamSpecChar jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecChar_parent_instance_get(long jarg1, _GParamSpecChar jarg1_);
  public final static native void _GParamSpecChar_minimum_set(long jarg1, _GParamSpecChar jarg1_, byte jarg2);
  public final static native byte _GParamSpecChar_minimum_get(long jarg1, _GParamSpecChar jarg1_);
  public final static native void _GParamSpecChar_maximum_set(long jarg1, _GParamSpecChar jarg1_, byte jarg2);
  public final static native byte _GParamSpecChar_maximum_get(long jarg1, _GParamSpecChar jarg1_);
  public final static native void _GParamSpecChar_default_value_set(long jarg1, _GParamSpecChar jarg1_, byte jarg2);
  public final static native byte _GParamSpecChar_default_value_get(long jarg1, _GParamSpecChar jarg1_);
  public final static native long new__GParamSpecChar();
  public final static native void delete__GParamSpecChar(long jarg1);
  public final static native void _GParamSpecUChar_parent_instance_set(long jarg1, _GParamSpecUChar jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecUChar_parent_instance_get(long jarg1, _GParamSpecUChar jarg1_);
  public final static native void _GParamSpecUChar_minimum_set(long jarg1, _GParamSpecUChar jarg1_, short jarg2);
  public final static native short _GParamSpecUChar_minimum_get(long jarg1, _GParamSpecUChar jarg1_);
  public final static native void _GParamSpecUChar_maximum_set(long jarg1, _GParamSpecUChar jarg1_, short jarg2);
  public final static native short _GParamSpecUChar_maximum_get(long jarg1, _GParamSpecUChar jarg1_);
  public final static native void _GParamSpecUChar_default_value_set(long jarg1, _GParamSpecUChar jarg1_, short jarg2);
  public final static native short _GParamSpecUChar_default_value_get(long jarg1, _GParamSpecUChar jarg1_);
  public final static native long new__GParamSpecUChar();
  public final static native void delete__GParamSpecUChar(long jarg1);
  public final static native void _GParamSpecBoolean_parent_instance_set(long jarg1, _GParamSpecBoolean jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecBoolean_parent_instance_get(long jarg1, _GParamSpecBoolean jarg1_);
  public final static native void _GParamSpecBoolean_default_value_set(long jarg1, _GParamSpecBoolean jarg1_, int jarg2);
  public final static native int _GParamSpecBoolean_default_value_get(long jarg1, _GParamSpecBoolean jarg1_);
  public final static native long new__GParamSpecBoolean();
  public final static native void delete__GParamSpecBoolean(long jarg1);
  public final static native void _GParamSpecInt_parent_instance_set(long jarg1, _GParamSpecInt jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecInt_parent_instance_get(long jarg1, _GParamSpecInt jarg1_);
  public final static native void _GParamSpecInt_minimum_set(long jarg1, _GParamSpecInt jarg1_, int jarg2);
  public final static native int _GParamSpecInt_minimum_get(long jarg1, _GParamSpecInt jarg1_);
  public final static native void _GParamSpecInt_maximum_set(long jarg1, _GParamSpecInt jarg1_, int jarg2);
  public final static native int _GParamSpecInt_maximum_get(long jarg1, _GParamSpecInt jarg1_);
  public final static native void _GParamSpecInt_default_value_set(long jarg1, _GParamSpecInt jarg1_, int jarg2);
  public final static native int _GParamSpecInt_default_value_get(long jarg1, _GParamSpecInt jarg1_);
  public final static native long new__GParamSpecInt();
  public final static native void delete__GParamSpecInt(long jarg1);
  public final static native void _GParamSpecUInt_parent_instance_set(long jarg1, _GParamSpecUInt jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecUInt_parent_instance_get(long jarg1, _GParamSpecUInt jarg1_);
  public final static native void _GParamSpecUInt_minimum_set(long jarg1, _GParamSpecUInt jarg1_, long jarg2);
  public final static native long _GParamSpecUInt_minimum_get(long jarg1, _GParamSpecUInt jarg1_);
  public final static native void _GParamSpecUInt_maximum_set(long jarg1, _GParamSpecUInt jarg1_, long jarg2);
  public final static native long _GParamSpecUInt_maximum_get(long jarg1, _GParamSpecUInt jarg1_);
  public final static native void _GParamSpecUInt_default_value_set(long jarg1, _GParamSpecUInt jarg1_, long jarg2);
  public final static native long _GParamSpecUInt_default_value_get(long jarg1, _GParamSpecUInt jarg1_);
  public final static native long new__GParamSpecUInt();
  public final static native void delete__GParamSpecUInt(long jarg1);
  public final static native void _GParamSpecLong_parent_instance_set(long jarg1, _GParamSpecLong jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecLong_parent_instance_get(long jarg1, _GParamSpecLong jarg1_);
  public final static native void _GParamSpecLong_minimum_set(long jarg1, _GParamSpecLong jarg1_, int jarg2);
  public final static native int _GParamSpecLong_minimum_get(long jarg1, _GParamSpecLong jarg1_);
  public final static native void _GParamSpecLong_maximum_set(long jarg1, _GParamSpecLong jarg1_, int jarg2);
  public final static native int _GParamSpecLong_maximum_get(long jarg1, _GParamSpecLong jarg1_);
  public final static native void _GParamSpecLong_default_value_set(long jarg1, _GParamSpecLong jarg1_, int jarg2);
  public final static native int _GParamSpecLong_default_value_get(long jarg1, _GParamSpecLong jarg1_);
  public final static native long new__GParamSpecLong();
  public final static native void delete__GParamSpecLong(long jarg1);
  public final static native void _GParamSpecULong_parent_instance_set(long jarg1, _GParamSpecULong jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecULong_parent_instance_get(long jarg1, _GParamSpecULong jarg1_);
  public final static native void _GParamSpecULong_minimum_set(long jarg1, _GParamSpecULong jarg1_, long jarg2);
  public final static native long _GParamSpecULong_minimum_get(long jarg1, _GParamSpecULong jarg1_);
  public final static native void _GParamSpecULong_maximum_set(long jarg1, _GParamSpecULong jarg1_, long jarg2);
  public final static native long _GParamSpecULong_maximum_get(long jarg1, _GParamSpecULong jarg1_);
  public final static native void _GParamSpecULong_default_value_set(long jarg1, _GParamSpecULong jarg1_, long jarg2);
  public final static native long _GParamSpecULong_default_value_get(long jarg1, _GParamSpecULong jarg1_);
  public final static native long new__GParamSpecULong();
  public final static native void delete__GParamSpecULong(long jarg1);
  public final static native void _GParamSpecInt64_parent_instance_set(long jarg1, _GParamSpecInt64 jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecInt64_parent_instance_get(long jarg1, _GParamSpecInt64 jarg1_);
  public final static native void _GParamSpecInt64_minimum_set(long jarg1, _GParamSpecInt64 jarg1_, long jarg2);
  public final static native long _GParamSpecInt64_minimum_get(long jarg1, _GParamSpecInt64 jarg1_);
  public final static native void _GParamSpecInt64_maximum_set(long jarg1, _GParamSpecInt64 jarg1_, long jarg2);
  public final static native long _GParamSpecInt64_maximum_get(long jarg1, _GParamSpecInt64 jarg1_);
  public final static native void _GParamSpecInt64_default_value_set(long jarg1, _GParamSpecInt64 jarg1_, long jarg2);
  public final static native long _GParamSpecInt64_default_value_get(long jarg1, _GParamSpecInt64 jarg1_);
  public final static native long new__GParamSpecInt64();
  public final static native void delete__GParamSpecInt64(long jarg1);
  public final static native void _GParamSpecUInt64_parent_instance_set(long jarg1, _GParamSpecUInt64 jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecUInt64_parent_instance_get(long jarg1, _GParamSpecUInt64 jarg1_);
  public final static native void _GParamSpecUInt64_minimum_set(long jarg1, _GParamSpecUInt64 jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GParamSpecUInt64_minimum_get(long jarg1, _GParamSpecUInt64 jarg1_);
  public final static native void _GParamSpecUInt64_maximum_set(long jarg1, _GParamSpecUInt64 jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GParamSpecUInt64_maximum_get(long jarg1, _GParamSpecUInt64 jarg1_);
  public final static native void _GParamSpecUInt64_default_value_set(long jarg1, _GParamSpecUInt64 jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GParamSpecUInt64_default_value_get(long jarg1, _GParamSpecUInt64 jarg1_);
  public final static native long new__GParamSpecUInt64();
  public final static native void delete__GParamSpecUInt64(long jarg1);
  public final static native void _GParamSpecUnichar_parent_instance_set(long jarg1, _GParamSpecUnichar jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecUnichar_parent_instance_get(long jarg1, _GParamSpecUnichar jarg1_);
  public final static native void _GParamSpecUnichar_default_value_set(long jarg1, _GParamSpecUnichar jarg1_, long jarg2);
  public final static native long _GParamSpecUnichar_default_value_get(long jarg1, _GParamSpecUnichar jarg1_);
  public final static native long new__GParamSpecUnichar();
  public final static native void delete__GParamSpecUnichar(long jarg1);
  public final static native void _GParamSpecEnum_parent_instance_set(long jarg1, _GParamSpecEnum jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecEnum_parent_instance_get(long jarg1, _GParamSpecEnum jarg1_);
  public final static native void _GParamSpecEnum_enum_class_set(long jarg1, _GParamSpecEnum jarg1_, long jarg2, _GEnumClass jarg2_);
  public final static native long _GParamSpecEnum_enum_class_get(long jarg1, _GParamSpecEnum jarg1_);
  public final static native void _GParamSpecEnum_default_value_set(long jarg1, _GParamSpecEnum jarg1_, int jarg2);
  public final static native int _GParamSpecEnum_default_value_get(long jarg1, _GParamSpecEnum jarg1_);
  public final static native long new__GParamSpecEnum();
  public final static native void delete__GParamSpecEnum(long jarg1);
  public final static native void _GParamSpecFlags_parent_instance_set(long jarg1, _GParamSpecFlags jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecFlags_parent_instance_get(long jarg1, _GParamSpecFlags jarg1_);
  public final static native void _GParamSpecFlags_flags_class_set(long jarg1, _GParamSpecFlags jarg1_, long jarg2, _GFlagsClass jarg2_);
  public final static native long _GParamSpecFlags_flags_class_get(long jarg1, _GParamSpecFlags jarg1_);
  public final static native void _GParamSpecFlags_default_value_set(long jarg1, _GParamSpecFlags jarg1_, long jarg2);
  public final static native long _GParamSpecFlags_default_value_get(long jarg1, _GParamSpecFlags jarg1_);
  public final static native long new__GParamSpecFlags();
  public final static native void delete__GParamSpecFlags(long jarg1);
  public final static native void _GParamSpecFloat_parent_instance_set(long jarg1, _GParamSpecFloat jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecFloat_parent_instance_get(long jarg1, _GParamSpecFloat jarg1_);
  public final static native void _GParamSpecFloat_minimum_set(long jarg1, _GParamSpecFloat jarg1_, float jarg2);
  public final static native float _GParamSpecFloat_minimum_get(long jarg1, _GParamSpecFloat jarg1_);
  public final static native void _GParamSpecFloat_maximum_set(long jarg1, _GParamSpecFloat jarg1_, float jarg2);
  public final static native float _GParamSpecFloat_maximum_get(long jarg1, _GParamSpecFloat jarg1_);
  public final static native void _GParamSpecFloat_default_value_set(long jarg1, _GParamSpecFloat jarg1_, float jarg2);
  public final static native float _GParamSpecFloat_default_value_get(long jarg1, _GParamSpecFloat jarg1_);
  public final static native void _GParamSpecFloat_epsilon_set(long jarg1, _GParamSpecFloat jarg1_, float jarg2);
  public final static native float _GParamSpecFloat_epsilon_get(long jarg1, _GParamSpecFloat jarg1_);
  public final static native long new__GParamSpecFloat();
  public final static native void delete__GParamSpecFloat(long jarg1);
  public final static native void _GParamSpecDouble_parent_instance_set(long jarg1, _GParamSpecDouble jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecDouble_parent_instance_get(long jarg1, _GParamSpecDouble jarg1_);
  public final static native void _GParamSpecDouble_minimum_set(long jarg1, _GParamSpecDouble jarg1_, double jarg2);
  public final static native double _GParamSpecDouble_minimum_get(long jarg1, _GParamSpecDouble jarg1_);
  public final static native void _GParamSpecDouble_maximum_set(long jarg1, _GParamSpecDouble jarg1_, double jarg2);
  public final static native double _GParamSpecDouble_maximum_get(long jarg1, _GParamSpecDouble jarg1_);
  public final static native void _GParamSpecDouble_default_value_set(long jarg1, _GParamSpecDouble jarg1_, double jarg2);
  public final static native double _GParamSpecDouble_default_value_get(long jarg1, _GParamSpecDouble jarg1_);
  public final static native void _GParamSpecDouble_epsilon_set(long jarg1, _GParamSpecDouble jarg1_, double jarg2);
  public final static native double _GParamSpecDouble_epsilon_get(long jarg1, _GParamSpecDouble jarg1_);
  public final static native long new__GParamSpecDouble();
  public final static native void delete__GParamSpecDouble(long jarg1);
  public final static native void _GParamSpecString_parent_instance_set(long jarg1, _GParamSpecString jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecString_parent_instance_get(long jarg1, _GParamSpecString jarg1_);
  public final static native void _GParamSpecString_default_value_set(long jarg1, _GParamSpecString jarg1_, String jarg2);
  public final static native String _GParamSpecString_default_value_get(long jarg1, _GParamSpecString jarg1_);
  public final static native void _GParamSpecString_cset_first_set(long jarg1, _GParamSpecString jarg1_, String jarg2);
  public final static native String _GParamSpecString_cset_first_get(long jarg1, _GParamSpecString jarg1_);
  public final static native void _GParamSpecString_cset_nth_set(long jarg1, _GParamSpecString jarg1_, String jarg2);
  public final static native String _GParamSpecString_cset_nth_get(long jarg1, _GParamSpecString jarg1_);
  public final static native void _GParamSpecString_substitutor_set(long jarg1, _GParamSpecString jarg1_, char jarg2);
  public final static native char _GParamSpecString_substitutor_get(long jarg1, _GParamSpecString jarg1_);
  public final static native void _GParamSpecString_null_fold_if_empty_set(long jarg1, _GParamSpecString jarg1_, long jarg2);
  public final static native long _GParamSpecString_null_fold_if_empty_get(long jarg1, _GParamSpecString jarg1_);
  public final static native void _GParamSpecString_ensure_non_null_set(long jarg1, _GParamSpecString jarg1_, long jarg2);
  public final static native long _GParamSpecString_ensure_non_null_get(long jarg1, _GParamSpecString jarg1_);
  public final static native long new__GParamSpecString();
  public final static native void delete__GParamSpecString(long jarg1);
  public final static native void _GParamSpecParam_parent_instance_set(long jarg1, _GParamSpecParam jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecParam_parent_instance_get(long jarg1, _GParamSpecParam jarg1_);
  public final static native long new__GParamSpecParam();
  public final static native void delete__GParamSpecParam(long jarg1);
  public final static native void _GParamSpecBoxed_parent_instance_set(long jarg1, _GParamSpecBoxed jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecBoxed_parent_instance_get(long jarg1, _GParamSpecBoxed jarg1_);
  public final static native long new__GParamSpecBoxed();
  public final static native void delete__GParamSpecBoxed(long jarg1);
  public final static native void _GParamSpecPointer_parent_instance_set(long jarg1, _GParamSpecPointer jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecPointer_parent_instance_get(long jarg1, _GParamSpecPointer jarg1_);
  public final static native long new__GParamSpecPointer();
  public final static native void delete__GParamSpecPointer(long jarg1);
  public final static native void _GParamSpecValueArray_parent_instance_set(long jarg1, _GParamSpecValueArray jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecValueArray_parent_instance_get(long jarg1, _GParamSpecValueArray jarg1_);
  public final static native void _GParamSpecValueArray_element_spec_set(long jarg1, _GParamSpecValueArray jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecValueArray_element_spec_get(long jarg1, _GParamSpecValueArray jarg1_);
  public final static native void _GParamSpecValueArray_fixed_n_elements_set(long jarg1, _GParamSpecValueArray jarg1_, long jarg2);
  public final static native long _GParamSpecValueArray_fixed_n_elements_get(long jarg1, _GParamSpecValueArray jarg1_);
  public final static native long new__GParamSpecValueArray();
  public final static native void delete__GParamSpecValueArray(long jarg1);
  public final static native void _GParamSpecObject_parent_instance_set(long jarg1, _GParamSpecObject jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecObject_parent_instance_get(long jarg1, _GParamSpecObject jarg1_);
  public final static native long new__GParamSpecObject();
  public final static native void delete__GParamSpecObject(long jarg1);
  public final static native void _GParamSpecOverride_parent_instance_set(long jarg1, _GParamSpecOverride jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecOverride_parent_instance_get(long jarg1, _GParamSpecOverride jarg1_);
  public final static native void _GParamSpecOverride_overridden_set(long jarg1, _GParamSpecOverride jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecOverride_overridden_get(long jarg1, _GParamSpecOverride jarg1_);
  public final static native long new__GParamSpecOverride();
  public final static native void delete__GParamSpecOverride(long jarg1);
  public final static native void _GParamSpecGType_parent_instance_set(long jarg1, _GParamSpecGType jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecGType_parent_instance_get(long jarg1, _GParamSpecGType jarg1_);
  public final static native void _GParamSpecGType_is_a_type_set(long jarg1, _GParamSpecGType jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger _GParamSpecGType_is_a_type_get(long jarg1, _GParamSpecGType jarg1_);
  public final static native long new__GParamSpecGType();
  public final static native void delete__GParamSpecGType(long jarg1);
  public final static native void _GParamSpecVariant_parent_instance_set(long jarg1, _GParamSpecVariant jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecVariant_parent_instance_get(long jarg1, _GParamSpecVariant jarg1_);
  public final static native void _GParamSpecVariant_type_set(long jarg1, _GParamSpecVariant jarg1_, long jarg2);
  public final static native long _GParamSpecVariant_type_get(long jarg1, _GParamSpecVariant jarg1_);
  public final static native void _GParamSpecVariant_default_value_set(long jarg1, _GParamSpecVariant jarg1_, long jarg2);
  public final static native long _GParamSpecVariant_default_value_get(long jarg1, _GParamSpecVariant jarg1_);
  public final static native void _GParamSpecVariant_padding_set(long jarg1, _GParamSpecVariant jarg1_, long jarg2);
  public final static native long _GParamSpecVariant_padding_get(long jarg1, _GParamSpecVariant jarg1_);
  public final static native long new__GParamSpecVariant();
  public final static native void delete__GParamSpecVariant(long jarg1);
  public final static native long g_param_spec_char(String jarg1, String jarg2, String jarg3, byte jarg4, byte jarg5, byte jarg6, int jarg7);
  public final static native long g_param_spec_uchar(String jarg1, String jarg2, String jarg3, short jarg4, short jarg5, short jarg6, int jarg7);
  public final static native long g_param_spec_boolean(String jarg1, String jarg2, String jarg3, int jarg4, int jarg5);
  public final static native long g_param_spec_int(String jarg1, String jarg2, String jarg3, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native long g_param_spec_uint(String jarg1, String jarg2, String jarg3, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native long g_param_spec_long(String jarg1, String jarg2, String jarg3, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native long g_param_spec_ulong(String jarg1, String jarg2, String jarg3, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native long g_param_spec_int64(String jarg1, String jarg2, String jarg3, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native long g_param_spec_uint64(String jarg1, String jarg2, String jarg3, java.math.BigInteger jarg4, java.math.BigInteger jarg5, java.math.BigInteger jarg6, int jarg7);
  public final static native long g_param_spec_unichar(String jarg1, String jarg2, String jarg3, long jarg4, int jarg5);
  public final static native long g_param_spec_enum(String jarg1, String jarg2, String jarg3, java.math.BigInteger jarg4, int jarg5, int jarg6);
  public final static native long g_param_spec_flags(String jarg1, String jarg2, String jarg3, java.math.BigInteger jarg4, long jarg5, int jarg6);
  public final static native long g_param_spec_float(String jarg1, String jarg2, String jarg3, float jarg4, float jarg5, float jarg6, int jarg7);
  public final static native long g_param_spec_double(String jarg1, String jarg2, String jarg3, double jarg4, double jarg5, double jarg6, int jarg7);
  public final static native long g_param_spec_string(String jarg1, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native long g_param_spec_param(String jarg1, String jarg2, String jarg3, java.math.BigInteger jarg4, int jarg5);
  public final static native long g_param_spec_boxed(String jarg1, String jarg2, String jarg3, java.math.BigInteger jarg4, int jarg5);
  public final static native long g_param_spec_pointer(String jarg1, String jarg2, String jarg3, int jarg4);
  public final static native long g_param_spec_value_array(String jarg1, String jarg2, String jarg3, long jarg4, _GParamSpec jarg4_, int jarg5);
  public final static native long g_param_spec_object(String jarg1, String jarg2, String jarg3, java.math.BigInteger jarg4, int jarg5);
  public final static native long g_param_spec_override(String jarg1, long jarg2, _GParamSpec jarg2_);
  public final static native long g_param_spec_gtype(String jarg1, String jarg2, String jarg3, java.math.BigInteger jarg4, int jarg5);
  public final static native long g_param_spec_variant(String jarg1, String jarg2, String jarg3, long jarg4, long jarg5, int jarg6);
  public final static native void g_param_spec_types_set(long jarg1);
  public final static native long g_param_spec_types_get();
  public final static native void g_source_set_closure(long jarg1, _GSource jarg1_, long jarg2, _GClosure jarg2_);
  public final static native void g_source_set_dummy_callback(long jarg1, _GSource jarg1_);
  public final static native void _GTypeModule_parent_instance_set(long jarg1, _GTypeModule jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GTypeModule_parent_instance_get(long jarg1, _GTypeModule jarg1_);
  public final static native void _GTypeModule_use_count_set(long jarg1, _GTypeModule jarg1_, long jarg2);
  public final static native long _GTypeModule_use_count_get(long jarg1, _GTypeModule jarg1_);
  public final static native void _GTypeModule_type_infos_set(long jarg1, _GTypeModule jarg1_, long jarg2, _GSList jarg2_);
  public final static native long _GTypeModule_type_infos_get(long jarg1, _GTypeModule jarg1_);
  public final static native void _GTypeModule_interface_infos_set(long jarg1, _GTypeModule jarg1_, long jarg2, _GSList jarg2_);
  public final static native long _GTypeModule_interface_infos_get(long jarg1, _GTypeModule jarg1_);
  public final static native void _GTypeModule_name_set(long jarg1, _GTypeModule jarg1_, String jarg2);
  public final static native String _GTypeModule_name_get(long jarg1, _GTypeModule jarg1_);
  public final static native long new__GTypeModule();
  public final static native void delete__GTypeModule(long jarg1);
  public final static native void _GTypeModuleClass_parent_class_set(long jarg1, _GTypeModuleClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GTypeModuleClass_parent_class_get(long jarg1, _GTypeModuleClass jarg1_);
  public final static native void _GTypeModuleClass_load_set(long jarg1, _GTypeModuleClass jarg1_, long jarg2);
  public final static native long _GTypeModuleClass_load_get(long jarg1, _GTypeModuleClass jarg1_);
  public final static native void _GTypeModuleClass_unload_set(long jarg1, _GTypeModuleClass jarg1_, long jarg2);
  public final static native long _GTypeModuleClass_unload_get(long jarg1, _GTypeModuleClass jarg1_);
  public final static native void _GTypeModuleClass_reserved1_set(long jarg1, _GTypeModuleClass jarg1_, long jarg2);
  public final static native long _GTypeModuleClass_reserved1_get(long jarg1, _GTypeModuleClass jarg1_);
  public final static native void _GTypeModuleClass_reserved2_set(long jarg1, _GTypeModuleClass jarg1_, long jarg2);
  public final static native long _GTypeModuleClass_reserved2_get(long jarg1, _GTypeModuleClass jarg1_);
  public final static native void _GTypeModuleClass_reserved3_set(long jarg1, _GTypeModuleClass jarg1_, long jarg2);
  public final static native long _GTypeModuleClass_reserved3_get(long jarg1, _GTypeModuleClass jarg1_);
  public final static native void _GTypeModuleClass_reserved4_set(long jarg1, _GTypeModuleClass jarg1_, long jarg2);
  public final static native long _GTypeModuleClass_reserved4_get(long jarg1, _GTypeModuleClass jarg1_);
  public final static native long new__GTypeModuleClass();
  public final static native void delete__GTypeModuleClass(long jarg1);
  public final static native java.math.BigInteger g_type_module_get_type();
  public final static native int g_type_module_use(long jarg1, _GTypeModule jarg1_);
  public final static native void g_type_module_unuse(long jarg1, _GTypeModule jarg1_);
  public final static native void g_type_module_set_name(long jarg1, _GTypeModule jarg1_, String jarg2);
  public final static native java.math.BigInteger g_type_module_register_type(long jarg1, _GTypeModule jarg1_, java.math.BigInteger jarg2, String jarg3, long jarg4, _GTypeInfo jarg4_, int jarg5);
  public final static native void g_type_module_add_interface(long jarg1, _GTypeModule jarg1_, java.math.BigInteger jarg2, java.math.BigInteger jarg3, long jarg4, _GInterfaceInfo jarg4_);
  public final static native java.math.BigInteger g_type_module_register_enum(long jarg1, _GTypeModule jarg1_, String jarg2, long jarg3, _GEnumValue jarg3_);
  public final static native java.math.BigInteger g_type_module_register_flags(long jarg1, _GTypeModule jarg1_, String jarg2, long jarg3, _GFlagsValue jarg3_);
  public final static native void _GTypePluginClass_base_iface_set(long jarg1, _GTypePluginClass jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GTypePluginClass_base_iface_get(long jarg1, _GTypePluginClass jarg1_);
  public final static native void _GTypePluginClass_use_plugin_set(long jarg1, _GTypePluginClass jarg1_, long jarg2);
  public final static native long _GTypePluginClass_use_plugin_get(long jarg1, _GTypePluginClass jarg1_);
  public final static native void _GTypePluginClass_unuse_plugin_set(long jarg1, _GTypePluginClass jarg1_, long jarg2);
  public final static native long _GTypePluginClass_unuse_plugin_get(long jarg1, _GTypePluginClass jarg1_);
  public final static native void _GTypePluginClass_complete_type_info_set(long jarg1, _GTypePluginClass jarg1_, long jarg2);
  public final static native long _GTypePluginClass_complete_type_info_get(long jarg1, _GTypePluginClass jarg1_);
  public final static native void _GTypePluginClass_complete_interface_info_set(long jarg1, _GTypePluginClass jarg1_, long jarg2);
  public final static native long _GTypePluginClass_complete_interface_info_get(long jarg1, _GTypePluginClass jarg1_);
  public final static native long new__GTypePluginClass();
  public final static native void delete__GTypePluginClass(long jarg1);
  public final static native java.math.BigInteger g_type_plugin_get_type();
  public final static native void g_type_plugin_use(long jarg1);
  public final static native void g_type_plugin_unuse(long jarg1);
  public final static native void g_type_plugin_complete_type_info(long jarg1, java.math.BigInteger jarg2, long jarg3, _GTypeInfo jarg3_, long jarg4, _GTypeValueTable jarg4_);
  public final static native void g_type_plugin_complete_interface_info(long jarg1, java.math.BigInteger jarg2, java.math.BigInteger jarg3, long jarg4, _GInterfaceInfo jarg4_);
  public final static native void _GValueArray_n_values_set(long jarg1, _GValueArray jarg1_, long jarg2);
  public final static native long _GValueArray_n_values_get(long jarg1, _GValueArray jarg1_);
  public final static native void _GValueArray_values_set(long jarg1, _GValueArray jarg1_, long jarg2, _GValue jarg2_);
  public final static native long _GValueArray_values_get(long jarg1, _GValueArray jarg1_);
  public final static native void _GValueArray_n_prealloced_set(long jarg1, _GValueArray jarg1_, long jarg2);
  public final static native long _GValueArray_n_prealloced_get(long jarg1, _GValueArray jarg1_);
  public final static native long new__GValueArray();
  public final static native void delete__GValueArray(long jarg1);
  public final static native java.math.BigInteger g_value_array_get_type();
  public final static native long g_value_array_get_nth(long jarg1, _GValueArray jarg1_, long jarg2);
  public final static native long g_value_array_new(long jarg1);
  public final static native void g_value_array_free(long jarg1, _GValueArray jarg1_);
  public final static native long g_value_array_copy(long jarg1, _GValueArray jarg1_);
  public final static native long g_value_array_prepend(long jarg1, _GValueArray jarg1_, long jarg2, _GValue jarg2_);
  public final static native long g_value_array_append(long jarg1, _GValueArray jarg1_, long jarg2, _GValue jarg2_);
  public final static native long g_value_array_insert(long jarg1, _GValueArray jarg1_, long jarg2, long jarg3, _GValue jarg3_);
  public final static native long g_value_array_remove(long jarg1, _GValueArray jarg1_, long jarg2);
  public final static native long g_value_array_sort(long jarg1, _GValueArray jarg1_, long jarg2);
  public final static native long g_value_array_sort_with_data(long jarg1, _GValueArray jarg1_, long jarg2, long jarg3);
  public final static native void g_value_set_char(long jarg1, _GValue jarg1_, char jarg2);
  public final static native char g_value_get_char(long jarg1, _GValue jarg1_);
  public final static native void g_value_set_schar(long jarg1, _GValue jarg1_, byte jarg2);
  public final static native byte g_value_get_schar(long jarg1, _GValue jarg1_);
  public final static native void g_value_set_uchar(long jarg1, _GValue jarg1_, short jarg2);
  public final static native short g_value_get_uchar(long jarg1, _GValue jarg1_);
  public final static native void g_value_set_boolean(long jarg1, _GValue jarg1_, int jarg2);
  public final static native int g_value_get_boolean(long jarg1, _GValue jarg1_);
  public final static native void g_value_set_int(long jarg1, _GValue jarg1_, int jarg2);
  public final static native int g_value_get_int(long jarg1, _GValue jarg1_);
  public final static native void g_value_set_uint(long jarg1, _GValue jarg1_, long jarg2);
  public final static native long g_value_get_uint(long jarg1, _GValue jarg1_);
  public final static native void g_value_set_long(long jarg1, _GValue jarg1_, int jarg2);
  public final static native int g_value_get_long(long jarg1, _GValue jarg1_);
  public final static native void g_value_set_ulong(long jarg1, _GValue jarg1_, long jarg2);
  public final static native long g_value_get_ulong(long jarg1, _GValue jarg1_);
  public final static native void g_value_set_int64(long jarg1, _GValue jarg1_, long jarg2);
  public final static native long g_value_get_int64(long jarg1, _GValue jarg1_);
  public final static native void g_value_set_uint64(long jarg1, _GValue jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger g_value_get_uint64(long jarg1, _GValue jarg1_);
  public final static native void g_value_set_float(long jarg1, _GValue jarg1_, float jarg2);
  public final static native float g_value_get_float(long jarg1, _GValue jarg1_);
  public final static native void g_value_set_double(long jarg1, _GValue jarg1_, double jarg2);
  public final static native double g_value_get_double(long jarg1, _GValue jarg1_);
  public final static native void g_value_set_string(long jarg1, _GValue jarg1_, String jarg2);
  public final static native void g_value_set_static_string(long jarg1, _GValue jarg1_, String jarg2);
  public final static native String g_value_get_string(long jarg1, _GValue jarg1_);
  public final static native String g_value_dup_string(long jarg1, _GValue jarg1_);
  public final static native void g_value_set_pointer(long jarg1, _GValue jarg1_, long jarg2);
  public final static native long g_value_get_pointer(long jarg1, _GValue jarg1_);
  public final static native java.math.BigInteger g_gtype_get_type();
  public final static native void g_value_set_gtype(long jarg1, _GValue jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger g_value_get_gtype(long jarg1, _GValue jarg1_);
  public final static native void g_value_set_variant(long jarg1, _GValue jarg1_, long jarg2);
  public final static native void g_value_take_variant(long jarg1, _GValue jarg1_, long jarg2);
  public final static native long g_value_get_variant(long jarg1, _GValue jarg1_);
  public final static native long g_value_dup_variant(long jarg1, _GValue jarg1_);
  public final static native java.math.BigInteger g_pointer_type_register_static(String jarg1);
  public final static native String g_strdup_value_contents(long jarg1, _GValue jarg1_);
  public final static native void g_value_take_string(long jarg1, _GValue jarg1_, String jarg2);
  public final static native void g_value_set_string_take_ownership(long jarg1, _GValue jarg1_, String jarg2);
  public final static native int PANGO_SCALE_get();
  public final static native int pango_units_from_double(double jarg1);
  public final static native double pango_units_to_double(int jarg1);
  public final static native void _PangoRectangle_x_set(long jarg1, _PangoRectangle jarg1_, int jarg2);
  public final static native int _PangoRectangle_x_get(long jarg1, _PangoRectangle jarg1_);
  public final static native void _PangoRectangle_y_set(long jarg1, _PangoRectangle jarg1_, int jarg2);
  public final static native int _PangoRectangle_y_get(long jarg1, _PangoRectangle jarg1_);
  public final static native void _PangoRectangle_width_set(long jarg1, _PangoRectangle jarg1_, int jarg2);
  public final static native int _PangoRectangle_width_get(long jarg1, _PangoRectangle jarg1_);
  public final static native void _PangoRectangle_height_set(long jarg1, _PangoRectangle jarg1_, int jarg2);
  public final static native int _PangoRectangle_height_get(long jarg1, _PangoRectangle jarg1_);
  public final static native long new__PangoRectangle();
  public final static native void delete__PangoRectangle(long jarg1);
  public final static native void pango_extents_to_pixels(long jarg1, _PangoRectangle jarg1_, long jarg2, _PangoRectangle jarg2_);
  public final static native void _PangoMatrix_xx_set(long jarg1, _PangoMatrix jarg1_, double jarg2);
  public final static native double _PangoMatrix_xx_get(long jarg1, _PangoMatrix jarg1_);
  public final static native void _PangoMatrix_xy_set(long jarg1, _PangoMatrix jarg1_, double jarg2);
  public final static native double _PangoMatrix_xy_get(long jarg1, _PangoMatrix jarg1_);
  public final static native void _PangoMatrix_yx_set(long jarg1, _PangoMatrix jarg1_, double jarg2);
  public final static native double _PangoMatrix_yx_get(long jarg1, _PangoMatrix jarg1_);
  public final static native void _PangoMatrix_yy_set(long jarg1, _PangoMatrix jarg1_, double jarg2);
  public final static native double _PangoMatrix_yy_get(long jarg1, _PangoMatrix jarg1_);
  public final static native void _PangoMatrix_x0_set(long jarg1, _PangoMatrix jarg1_, double jarg2);
  public final static native double _PangoMatrix_x0_get(long jarg1, _PangoMatrix jarg1_);
  public final static native void _PangoMatrix_y0_set(long jarg1, _PangoMatrix jarg1_, double jarg2);
  public final static native double _PangoMatrix_y0_get(long jarg1, _PangoMatrix jarg1_);
  public final static native long new__PangoMatrix();
  public final static native void delete__PangoMatrix(long jarg1);
  public final static native java.math.BigInteger pango_matrix_get_type();
  public final static native long pango_matrix_copy(long jarg1, _PangoMatrix jarg1_);
  public final static native void pango_matrix_free(long jarg1, _PangoMatrix jarg1_);
  public final static native void pango_matrix_translate(long jarg1, _PangoMatrix jarg1_, double jarg2, double jarg3);
  public final static native void pango_matrix_scale(long jarg1, _PangoMatrix jarg1_, double jarg2, double jarg3);
  public final static native void pango_matrix_rotate(long jarg1, _PangoMatrix jarg1_, double jarg2);
  public final static native void pango_matrix_concat(long jarg1, _PangoMatrix jarg1_, long jarg2, _PangoMatrix jarg2_);
  public final static native void pango_matrix_transform_point(long jarg1, _PangoMatrix jarg1_, long jarg2, long jarg3);
  public final static native void pango_matrix_transform_distance(long jarg1, _PangoMatrix jarg1_, long jarg2, long jarg3);
  public final static native void pango_matrix_transform_rectangle(long jarg1, _PangoMatrix jarg1_, long jarg2, _PangoRectangle jarg2_);
  public final static native void pango_matrix_transform_pixel_rectangle(long jarg1, _PangoMatrix jarg1_, long jarg2, _PangoRectangle jarg2_);
  public final static native double pango_matrix_get_font_scale_factor(long jarg1, _PangoMatrix jarg1_);
  public final static native void pango_matrix_get_font_scale_factors(long jarg1, _PangoMatrix jarg1_, long jarg2, long jarg3);
  public final static native int PANGO_SCRIPT_INVALID_CODE_get();
  public final static native int PANGO_SCRIPT_COMMON_get();
  public final static native int pango_script_for_unichar(long jarg1);
  public final static native long pango_script_iter_new(String jarg1, int jarg2);
  public final static native void pango_script_iter_get_range(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int pango_script_iter_next(long jarg1);
  public final static native void pango_script_iter_free(long jarg1);
  public final static native java.math.BigInteger pango_language_get_type();
  public final static native long pango_language_from_string(String jarg1);
  public final static native String pango_language_to_string(long jarg1);
  public final static native String pango_language_get_sample_string(long jarg1);
  public final static native long pango_language_get_default();
  public final static native int pango_language_matches(long jarg1, String jarg2);
  public final static native int pango_language_includes_script(long jarg1, int jarg2);
  public final static native long pango_language_get_scripts(long jarg1, long jarg2);
  public final static native long pango_script_get_sample_language(int jarg1);
  public final static native double pango_gravity_to_rotation(int jarg1);
  public final static native int pango_gravity_get_for_matrix(long jarg1, _PangoMatrix jarg1_);
  public final static native int pango_gravity_get_for_script(int jarg1, int jarg2, int jarg3);
  public final static native int pango_gravity_get_for_script_and_width(int jarg1, int jarg2, int jarg3, int jarg4);
  public final static native int pango_bidi_type_for_unichar(long jarg1);
  public final static native int pango_unichar_direction(long jarg1);
  public final static native int pango_find_base_dir(String jarg1, int jarg2);
  public final static native int pango_get_mirror_char(long jarg1, long jarg2);
  public final static native int PANGO_WEIGHT_THIN_get();
  public final static native int PANGO_WEIGHT_ULTRALIGHT_get();
  public final static native int PANGO_WEIGHT_LIGHT_get();
  public final static native int PANGO_WEIGHT_SEMILIGHT_get();
  public final static native int PANGO_WEIGHT_BOOK_get();
  public final static native int PANGO_WEIGHT_NORMAL_get();
  public final static native int PANGO_WEIGHT_MEDIUM_get();
  public final static native int PANGO_WEIGHT_SEMIBOLD_get();
  public final static native int PANGO_WEIGHT_BOLD_get();
  public final static native int PANGO_WEIGHT_ULTRABOLD_get();
  public final static native int PANGO_WEIGHT_HEAVY_get();
  public final static native int PANGO_WEIGHT_ULTRAHEAVY_get();
  public final static native int PANGO_FONT_MASK_FAMILY_get();
  public final static native int PANGO_FONT_MASK_STYLE_get();
  public final static native int PANGO_FONT_MASK_VARIANT_get();
  public final static native int PANGO_FONT_MASK_WEIGHT_get();
  public final static native int PANGO_FONT_MASK_STRETCH_get();
  public final static native int PANGO_FONT_MASK_SIZE_get();
  public final static native int PANGO_FONT_MASK_GRAVITY_get();
  public final static native java.math.BigInteger pango_font_description_get_type();
  public final static native long pango_font_description_new();
  public final static native long pango_font_description_copy(long jarg1);
  public final static native long pango_font_description_copy_static(long jarg1);
  public final static native long pango_font_description_hash(long jarg1);
  public final static native int pango_font_description_equal(long jarg1, long jarg2);
  public final static native void pango_font_description_free(long jarg1);
  public final static native void pango_font_descriptions_free(long jarg1, int jarg2);
  public final static native void pango_font_description_set_family(long jarg1, String jarg2);
  public final static native void pango_font_description_set_family_static(long jarg1, String jarg2);
  public final static native String pango_font_description_get_family(long jarg1);
  public final static native void pango_font_description_set_style(long jarg1, int jarg2);
  public final static native int pango_font_description_get_style(long jarg1);
  public final static native void pango_font_description_set_variant(long jarg1, int jarg2);
  public final static native int pango_font_description_get_variant(long jarg1);
  public final static native void pango_font_description_set_weight(long jarg1, int jarg2);
  public final static native int pango_font_description_get_weight(long jarg1);
  public final static native void pango_font_description_set_stretch(long jarg1, int jarg2);
  public final static native int pango_font_description_get_stretch(long jarg1);
  public final static native void pango_font_description_set_size(long jarg1, int jarg2);
  public final static native int pango_font_description_get_size(long jarg1);
  public final static native void pango_font_description_set_absolute_size(long jarg1, double jarg2);
  public final static native int pango_font_description_get_size_is_absolute(long jarg1);
  public final static native void pango_font_description_set_gravity(long jarg1, int jarg2);
  public final static native int pango_font_description_get_gravity(long jarg1);
  public final static native int pango_font_description_get_set_fields(long jarg1);
  public final static native void pango_font_description_unset_fields(long jarg1, int jarg2);
  public final static native void pango_font_description_merge(long jarg1, long jarg2, int jarg3);
  public final static native void pango_font_description_merge_static(long jarg1, long jarg2, int jarg3);
  public final static native int pango_font_description_better_match(long jarg1, long jarg2, long jarg3);
  public final static native long pango_font_description_from_string(String jarg1);
  public final static native String pango_font_description_to_string(long jarg1);
  public final static native String pango_font_description_to_filename(long jarg1);
  public final static native java.math.BigInteger pango_font_metrics_get_type();
  public final static native long pango_font_metrics_ref(long jarg1);
  public final static native void pango_font_metrics_unref(long jarg1);
  public final static native int pango_font_metrics_get_ascent(long jarg1);
  public final static native int pango_font_metrics_get_descent(long jarg1);
  public final static native int pango_font_metrics_get_approximate_char_width(long jarg1);
  public final static native int pango_font_metrics_get_approximate_digit_width(long jarg1);
  public final static native int pango_font_metrics_get_underline_position(long jarg1);
  public final static native int pango_font_metrics_get_underline_thickness(long jarg1);
  public final static native int pango_font_metrics_get_strikethrough_position(long jarg1);
  public final static native int pango_font_metrics_get_strikethrough_thickness(long jarg1);
  public final static native java.math.BigInteger pango_font_family_get_type();
  public final static native void pango_font_family_list_faces(long jarg1, long jarg2, long jarg3);
  public final static native String pango_font_family_get_name(long jarg1);
  public final static native int pango_font_family_is_monospace(long jarg1);
  public final static native java.math.BigInteger pango_font_face_get_type();
  public final static native long pango_font_face_describe(long jarg1);
  public final static native String pango_font_face_get_face_name(long jarg1);
  public final static native void pango_font_face_list_sizes(long jarg1, long jarg2, long jarg3);
  public final static native int pango_font_face_is_synthesized(long jarg1);
  public final static native java.math.BigInteger pango_font_get_type();
  public final static native long pango_font_describe(long jarg1);
  public final static native long pango_font_describe_with_absolute_size(long jarg1);
  public final static native long pango_font_get_coverage(long jarg1, long jarg2);
  public final static native long pango_font_find_shaper(long jarg1, long jarg2, long jarg3);
  public final static native long pango_font_get_metrics(long jarg1, long jarg2);
  public final static native void pango_font_get_glyph_extents(long jarg1, long jarg2, long jarg3, _PangoRectangle jarg3_, long jarg4, _PangoRectangle jarg4_);
  public final static native long pango_font_get_font_map(long jarg1);
  public final static native void _PangoColor_red_set(long jarg1, _PangoColor jarg1_, int jarg2);
  public final static native int _PangoColor_red_get(long jarg1, _PangoColor jarg1_);
  public final static native void _PangoColor_green_set(long jarg1, _PangoColor jarg1_, int jarg2);
  public final static native int _PangoColor_green_get(long jarg1, _PangoColor jarg1_);
  public final static native void _PangoColor_blue_set(long jarg1, _PangoColor jarg1_, int jarg2);
  public final static native int _PangoColor_blue_get(long jarg1, _PangoColor jarg1_);
  public final static native long new__PangoColor();
  public final static native void delete__PangoColor(long jarg1);
  public final static native java.math.BigInteger pango_color_get_type();
  public final static native long pango_color_copy(long jarg1, _PangoColor jarg1_);
  public final static native void pango_color_free(long jarg1, _PangoColor jarg1_);
  public final static native int pango_color_parse(long jarg1, _PangoColor jarg1_, String jarg2);
  public final static native String pango_color_to_string(long jarg1, _PangoColor jarg1_);
  public final static native int PANGO_ATTR_INDEX_FROM_TEXT_BEGINNING_get();
  public final static native void _PangoAttribute_klass_set(long jarg1, _PangoAttribute jarg1_, long jarg2, _PangoAttrClass jarg2_);
  public final static native long _PangoAttribute_klass_get(long jarg1, _PangoAttribute jarg1_);
  public final static native void _PangoAttribute_start_index_set(long jarg1, _PangoAttribute jarg1_, long jarg2);
  public final static native long _PangoAttribute_start_index_get(long jarg1, _PangoAttribute jarg1_);
  public final static native void _PangoAttribute_end_index_set(long jarg1, _PangoAttribute jarg1_, long jarg2);
  public final static native long _PangoAttribute_end_index_get(long jarg1, _PangoAttribute jarg1_);
  public final static native long new__PangoAttribute();
  public final static native void delete__PangoAttribute(long jarg1);
  public final static native void _PangoAttrClass_type_set(long jarg1, _PangoAttrClass jarg1_, int jarg2);
  public final static native int _PangoAttrClass_type_get(long jarg1, _PangoAttrClass jarg1_);
  public final static native void _PangoAttrClass_copy_set(long jarg1, _PangoAttrClass jarg1_, long jarg2);
  public final static native long _PangoAttrClass_copy_get(long jarg1, _PangoAttrClass jarg1_);
  public final static native void _PangoAttrClass_destroy_set(long jarg1, _PangoAttrClass jarg1_, long jarg2);
  public final static native long _PangoAttrClass_destroy_get(long jarg1, _PangoAttrClass jarg1_);
  public final static native void _PangoAttrClass_equal_set(long jarg1, _PangoAttrClass jarg1_, long jarg2);
  public final static native long _PangoAttrClass_equal_get(long jarg1, _PangoAttrClass jarg1_);
  public final static native long new__PangoAttrClass();
  public final static native void delete__PangoAttrClass(long jarg1);
  public final static native void _PangoAttrString_attr_set(long jarg1, _PangoAttrString jarg1_, long jarg2, _PangoAttribute jarg2_);
  public final static native long _PangoAttrString_attr_get(long jarg1, _PangoAttrString jarg1_);
  public final static native void _PangoAttrString_value_set(long jarg1, _PangoAttrString jarg1_, String jarg2);
  public final static native String _PangoAttrString_value_get(long jarg1, _PangoAttrString jarg1_);
  public final static native long new__PangoAttrString();
  public final static native void delete__PangoAttrString(long jarg1);
  public final static native void _PangoAttrLanguage_attr_set(long jarg1, _PangoAttrLanguage jarg1_, long jarg2, _PangoAttribute jarg2_);
  public final static native long _PangoAttrLanguage_attr_get(long jarg1, _PangoAttrLanguage jarg1_);
  public final static native void _PangoAttrLanguage_value_set(long jarg1, _PangoAttrLanguage jarg1_, long jarg2);
  public final static native long _PangoAttrLanguage_value_get(long jarg1, _PangoAttrLanguage jarg1_);
  public final static native long new__PangoAttrLanguage();
  public final static native void delete__PangoAttrLanguage(long jarg1);
  public final static native void _PangoAttrInt_attr_set(long jarg1, _PangoAttrInt jarg1_, long jarg2, _PangoAttribute jarg2_);
  public final static native long _PangoAttrInt_attr_get(long jarg1, _PangoAttrInt jarg1_);
  public final static native void _PangoAttrInt_value_set(long jarg1, _PangoAttrInt jarg1_, int jarg2);
  public final static native int _PangoAttrInt_value_get(long jarg1, _PangoAttrInt jarg1_);
  public final static native long new__PangoAttrInt();
  public final static native void delete__PangoAttrInt(long jarg1);
  public final static native void _PangoAttrFloat_attr_set(long jarg1, _PangoAttrFloat jarg1_, long jarg2, _PangoAttribute jarg2_);
  public final static native long _PangoAttrFloat_attr_get(long jarg1, _PangoAttrFloat jarg1_);
  public final static native void _PangoAttrFloat_value_set(long jarg1, _PangoAttrFloat jarg1_, double jarg2);
  public final static native double _PangoAttrFloat_value_get(long jarg1, _PangoAttrFloat jarg1_);
  public final static native long new__PangoAttrFloat();
  public final static native void delete__PangoAttrFloat(long jarg1);
  public final static native void _PangoAttrColor_attr_set(long jarg1, _PangoAttrColor jarg1_, long jarg2, _PangoAttribute jarg2_);
  public final static native long _PangoAttrColor_attr_get(long jarg1, _PangoAttrColor jarg1_);
  public final static native void _PangoAttrColor_color_set(long jarg1, _PangoAttrColor jarg1_, long jarg2, _PangoColor jarg2_);
  public final static native long _PangoAttrColor_color_get(long jarg1, _PangoAttrColor jarg1_);
  public final static native long new__PangoAttrColor();
  public final static native void delete__PangoAttrColor(long jarg1);
  public final static native void _PangoAttrSize_attr_set(long jarg1, _PangoAttrSize jarg1_, long jarg2, _PangoAttribute jarg2_);
  public final static native long _PangoAttrSize_attr_get(long jarg1, _PangoAttrSize jarg1_);
  public final static native void _PangoAttrSize_size_set(long jarg1, _PangoAttrSize jarg1_, int jarg2);
  public final static native int _PangoAttrSize_size_get(long jarg1, _PangoAttrSize jarg1_);
  public final static native void _PangoAttrSize_absolute_set(long jarg1, _PangoAttrSize jarg1_, long jarg2);
  public final static native long _PangoAttrSize_absolute_get(long jarg1, _PangoAttrSize jarg1_);
  public final static native long new__PangoAttrSize();
  public final static native void delete__PangoAttrSize(long jarg1);
  public final static native void _PangoAttrShape_attr_set(long jarg1, _PangoAttrShape jarg1_, long jarg2, _PangoAttribute jarg2_);
  public final static native long _PangoAttrShape_attr_get(long jarg1, _PangoAttrShape jarg1_);
  public final static native void _PangoAttrShape_ink_rect_set(long jarg1, _PangoAttrShape jarg1_, long jarg2, _PangoRectangle jarg2_);
  public final static native long _PangoAttrShape_ink_rect_get(long jarg1, _PangoAttrShape jarg1_);
  public final static native void _PangoAttrShape_logical_rect_set(long jarg1, _PangoAttrShape jarg1_, long jarg2, _PangoRectangle jarg2_);
  public final static native long _PangoAttrShape_logical_rect_get(long jarg1, _PangoAttrShape jarg1_);
  public final static native void _PangoAttrShape_data_set(long jarg1, _PangoAttrShape jarg1_, long jarg2);
  public final static native long _PangoAttrShape_data_get(long jarg1, _PangoAttrShape jarg1_);
  public final static native void _PangoAttrShape_copy_func_set(long jarg1, _PangoAttrShape jarg1_, long jarg2);
  public final static native long _PangoAttrShape_copy_func_get(long jarg1, _PangoAttrShape jarg1_);
  public final static native void _PangoAttrShape_destroy_func_set(long jarg1, _PangoAttrShape jarg1_, long jarg2);
  public final static native long _PangoAttrShape_destroy_func_get(long jarg1, _PangoAttrShape jarg1_);
  public final static native long new__PangoAttrShape();
  public final static native void delete__PangoAttrShape(long jarg1);
  public final static native void _PangoAttrFontDesc_attr_set(long jarg1, _PangoAttrFontDesc jarg1_, long jarg2, _PangoAttribute jarg2_);
  public final static native long _PangoAttrFontDesc_attr_get(long jarg1, _PangoAttrFontDesc jarg1_);
  public final static native void _PangoAttrFontDesc_desc_set(long jarg1, _PangoAttrFontDesc jarg1_, long jarg2);
  public final static native long _PangoAttrFontDesc_desc_get(long jarg1, _PangoAttrFontDesc jarg1_);
  public final static native long new__PangoAttrFontDesc();
  public final static native void delete__PangoAttrFontDesc(long jarg1);
  public final static native void _PangoAttrFontFeatures_attr_set(long jarg1, _PangoAttrFontFeatures jarg1_, long jarg2, _PangoAttribute jarg2_);
  public final static native long _PangoAttrFontFeatures_attr_get(long jarg1, _PangoAttrFontFeatures jarg1_);
  public final static native void _PangoAttrFontFeatures_features_set(long jarg1, _PangoAttrFontFeatures jarg1_, String jarg2);
  public final static native String _PangoAttrFontFeatures_features_get(long jarg1, _PangoAttrFontFeatures jarg1_);
  public final static native long new__PangoAttrFontFeatures();
  public final static native void delete__PangoAttrFontFeatures(long jarg1);
  public final static native int pango_attr_type_register(String jarg1);
  public final static native String pango_attr_type_get_name(int jarg1);
  public final static native void pango_attribute_init(long jarg1, _PangoAttribute jarg1_, long jarg2, _PangoAttrClass jarg2_);
  public final static native long pango_attribute_copy(long jarg1, _PangoAttribute jarg1_);
  public final static native void pango_attribute_destroy(long jarg1, _PangoAttribute jarg1_);
  public final static native int pango_attribute_equal(long jarg1, _PangoAttribute jarg1_, long jarg2, _PangoAttribute jarg2_);
  public final static native long pango_attr_language_new(long jarg1);
  public final static native long pango_attr_family_new(String jarg1);
  public final static native long pango_attr_foreground_new(int jarg1, int jarg2, int jarg3);
  public final static native long pango_attr_background_new(int jarg1, int jarg2, int jarg3);
  public final static native long pango_attr_size_new(int jarg1);
  public final static native long pango_attr_size_new_absolute(int jarg1);
  public final static native long pango_attr_style_new(int jarg1);
  public final static native long pango_attr_weight_new(int jarg1);
  public final static native long pango_attr_variant_new(int jarg1);
  public final static native long pango_attr_stretch_new(int jarg1);
  public final static native long pango_attr_font_desc_new(long jarg1);
  public final static native long pango_attr_underline_new(int jarg1);
  public final static native long pango_attr_underline_color_new(int jarg1, int jarg2, int jarg3);
  public final static native long pango_attr_strikethrough_new(int jarg1);
  public final static native long pango_attr_strikethrough_color_new(int jarg1, int jarg2, int jarg3);
  public final static native long pango_attr_rise_new(int jarg1);
  public final static native long pango_attr_scale_new(double jarg1);
  public final static native long pango_attr_fallback_new(int jarg1);
  public final static native long pango_attr_letter_spacing_new(int jarg1);
  public final static native long pango_attr_shape_new(long jarg1, _PangoRectangle jarg1_, long jarg2, _PangoRectangle jarg2_);
  public final static native long pango_attr_shape_new_with_data(long jarg1, _PangoRectangle jarg1_, long jarg2, _PangoRectangle jarg2_, long jarg3, long jarg4, long jarg5);
  public final static native long pango_attr_gravity_new(int jarg1);
  public final static native long pango_attr_gravity_hint_new(int jarg1);
  public final static native long pango_attr_font_features_new(String jarg1);
  public final static native long pango_attr_foreground_alpha_new(int jarg1);
  public final static native long pango_attr_background_alpha_new(int jarg1);
  public final static native java.math.BigInteger pango_attr_list_get_type();
  public final static native long pango_attr_list_new();
  public final static native long pango_attr_list_ref(long jarg1);
  public final static native void pango_attr_list_unref(long jarg1);
  public final static native long pango_attr_list_copy(long jarg1);
  public final static native void pango_attr_list_insert(long jarg1, long jarg2, _PangoAttribute jarg2_);
  public final static native void pango_attr_list_insert_before(long jarg1, long jarg2, _PangoAttribute jarg2_);
  public final static native void pango_attr_list_change(long jarg1, long jarg2, _PangoAttribute jarg2_);
  public final static native void pango_attr_list_splice(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native long pango_attr_list_filter(long jarg1, long jarg2, long jarg3);
  public final static native long pango_attr_list_get_iterator(long jarg1);
  public final static native void pango_attr_iterator_range(long jarg1, long jarg2, long jarg3);
  public final static native int pango_attr_iterator_next(long jarg1);
  public final static native long pango_attr_iterator_copy(long jarg1);
  public final static native void pango_attr_iterator_destroy(long jarg1);
  public final static native long pango_attr_iterator_get(long jarg1, int jarg2);
  public final static native void pango_attr_iterator_get_font(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long pango_attr_iterator_get_attrs(long jarg1);
  public final static native int pango_parse_markup(String jarg1, int jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7);
  public final static native long pango_markup_parser_new(long jarg1);
  public final static native int pango_markup_parser_finish(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int PANGO_ANALYSIS_FLAG_CENTERED_BASELINE_get();
  public final static native int PANGO_ANALYSIS_FLAG_IS_ELLIPSIS_get();
  public final static native void _PangoAnalysis_shape_engine_set(long jarg1, _PangoAnalysis jarg1_, long jarg2);
  public final static native long _PangoAnalysis_shape_engine_get(long jarg1, _PangoAnalysis jarg1_);
  public final static native void _PangoAnalysis_lang_engine_set(long jarg1, _PangoAnalysis jarg1_, long jarg2);
  public final static native long _PangoAnalysis_lang_engine_get(long jarg1, _PangoAnalysis jarg1_);
  public final static native void _PangoAnalysis_font_set(long jarg1, _PangoAnalysis jarg1_, long jarg2);
  public final static native long _PangoAnalysis_font_get(long jarg1, _PangoAnalysis jarg1_);
  public final static native void _PangoAnalysis_level_set(long jarg1, _PangoAnalysis jarg1_, short jarg2);
  public final static native short _PangoAnalysis_level_get(long jarg1, _PangoAnalysis jarg1_);
  public final static native void _PangoAnalysis_gravity_set(long jarg1, _PangoAnalysis jarg1_, short jarg2);
  public final static native short _PangoAnalysis_gravity_get(long jarg1, _PangoAnalysis jarg1_);
  public final static native void _PangoAnalysis_flags_set(long jarg1, _PangoAnalysis jarg1_, short jarg2);
  public final static native short _PangoAnalysis_flags_get(long jarg1, _PangoAnalysis jarg1_);
  public final static native void _PangoAnalysis_script_set(long jarg1, _PangoAnalysis jarg1_, short jarg2);
  public final static native short _PangoAnalysis_script_get(long jarg1, _PangoAnalysis jarg1_);
  public final static native void _PangoAnalysis_language_set(long jarg1, _PangoAnalysis jarg1_, long jarg2);
  public final static native long _PangoAnalysis_language_get(long jarg1, _PangoAnalysis jarg1_);
  public final static native void _PangoAnalysis_extra_attrs_set(long jarg1, _PangoAnalysis jarg1_, long jarg2, _GSList jarg2_);
  public final static native long _PangoAnalysis_extra_attrs_get(long jarg1, _PangoAnalysis jarg1_);
  public final static native long new__PangoAnalysis();
  public final static native void delete__PangoAnalysis(long jarg1);
  public final static native void _PangoItem_offset_set(long jarg1, _PangoItem jarg1_, int jarg2);
  public final static native int _PangoItem_offset_get(long jarg1, _PangoItem jarg1_);
  public final static native void _PangoItem_length_set(long jarg1, _PangoItem jarg1_, int jarg2);
  public final static native int _PangoItem_length_get(long jarg1, _PangoItem jarg1_);
  public final static native void _PangoItem_num_chars_set(long jarg1, _PangoItem jarg1_, int jarg2);
  public final static native int _PangoItem_num_chars_get(long jarg1, _PangoItem jarg1_);
  public final static native void _PangoItem_analysis_set(long jarg1, _PangoItem jarg1_, long jarg2, _PangoAnalysis jarg2_);
  public final static native long _PangoItem_analysis_get(long jarg1, _PangoItem jarg1_);
  public final static native long new__PangoItem();
  public final static native void delete__PangoItem(long jarg1);
  public final static native java.math.BigInteger pango_item_get_type();
  public final static native long pango_item_new();
  public final static native long pango_item_copy(long jarg1, _PangoItem jarg1_);
  public final static native void pango_item_free(long jarg1, _PangoItem jarg1_);
  public final static native long pango_item_split(long jarg1, _PangoItem jarg1_, int jarg2, int jarg3);
  public final static native void _PangoLogAttr_is_line_break_set(long jarg1, _PangoLogAttr jarg1_, long jarg2);
  public final static native long _PangoLogAttr_is_line_break_get(long jarg1, _PangoLogAttr jarg1_);
  public final static native void _PangoLogAttr_is_mandatory_break_set(long jarg1, _PangoLogAttr jarg1_, long jarg2);
  public final static native long _PangoLogAttr_is_mandatory_break_get(long jarg1, _PangoLogAttr jarg1_);
  public final static native void _PangoLogAttr_is_char_break_set(long jarg1, _PangoLogAttr jarg1_, long jarg2);
  public final static native long _PangoLogAttr_is_char_break_get(long jarg1, _PangoLogAttr jarg1_);
  public final static native void _PangoLogAttr_is_white_set(long jarg1, _PangoLogAttr jarg1_, long jarg2);
  public final static native long _PangoLogAttr_is_white_get(long jarg1, _PangoLogAttr jarg1_);
  public final static native void _PangoLogAttr_is_cursor_position_set(long jarg1, _PangoLogAttr jarg1_, long jarg2);
  public final static native long _PangoLogAttr_is_cursor_position_get(long jarg1, _PangoLogAttr jarg1_);
  public final static native void _PangoLogAttr_is_word_start_set(long jarg1, _PangoLogAttr jarg1_, long jarg2);
  public final static native long _PangoLogAttr_is_word_start_get(long jarg1, _PangoLogAttr jarg1_);
  public final static native void _PangoLogAttr_is_word_end_set(long jarg1, _PangoLogAttr jarg1_, long jarg2);
  public final static native long _PangoLogAttr_is_word_end_get(long jarg1, _PangoLogAttr jarg1_);
  public final static native void _PangoLogAttr_is_sentence_boundary_set(long jarg1, _PangoLogAttr jarg1_, long jarg2);
  public final static native long _PangoLogAttr_is_sentence_boundary_get(long jarg1, _PangoLogAttr jarg1_);
  public final static native void _PangoLogAttr_is_sentence_start_set(long jarg1, _PangoLogAttr jarg1_, long jarg2);
  public final static native long _PangoLogAttr_is_sentence_start_get(long jarg1, _PangoLogAttr jarg1_);
  public final static native void _PangoLogAttr_is_sentence_end_set(long jarg1, _PangoLogAttr jarg1_, long jarg2);
  public final static native long _PangoLogAttr_is_sentence_end_get(long jarg1, _PangoLogAttr jarg1_);
  public final static native void _PangoLogAttr_backspace_deletes_character_set(long jarg1, _PangoLogAttr jarg1_, long jarg2);
  public final static native long _PangoLogAttr_backspace_deletes_character_get(long jarg1, _PangoLogAttr jarg1_);
  public final static native void _PangoLogAttr_is_expandable_space_set(long jarg1, _PangoLogAttr jarg1_, long jarg2);
  public final static native long _PangoLogAttr_is_expandable_space_get(long jarg1, _PangoLogAttr jarg1_);
  public final static native void _PangoLogAttr_is_word_boundary_set(long jarg1, _PangoLogAttr jarg1_, long jarg2);
  public final static native long _PangoLogAttr_is_word_boundary_get(long jarg1, _PangoLogAttr jarg1_);
  public final static native long new__PangoLogAttr();
  public final static native void delete__PangoLogAttr(long jarg1);
  public final static native void pango_break(String jarg1, int jarg2, long jarg3, _PangoAnalysis jarg3_, long jarg4, _PangoLogAttr jarg4_, int jarg5);
  public final static native void pango_find_paragraph_boundary(String jarg1, int jarg2, long jarg3, long jarg4);
  public final static native void pango_get_log_attrs(String jarg1, int jarg2, int jarg3, long jarg4, long jarg5, _PangoLogAttr jarg5_, int jarg6);
  public final static native java.math.BigInteger pango_fontset_get_type();
  public final static native long pango_fontset_get_font(long jarg1, long jarg2);
  public final static native long pango_fontset_get_metrics(long jarg1);
  public final static native void pango_fontset_foreach(long jarg1, long jarg2, long jarg3);
  public final static native java.math.BigInteger pango_font_map_get_type();
  public final static native long pango_font_map_create_context(long jarg1);
  public final static native long pango_font_map_load_font(long jarg1, long jarg2, long jarg3);
  public final static native long pango_font_map_load_fontset(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void pango_font_map_list_families(long jarg1, long jarg2, long jarg3);
  public final static native long pango_font_map_get_serial(long jarg1);
  public final static native void pango_font_map_changed(long jarg1);
  public final static native java.math.BigInteger pango_context_get_type();
  public final static native long pango_context_new();
  public final static native void pango_context_changed(long jarg1);
  public final static native void pango_context_set_font_map(long jarg1, long jarg2);
  public final static native long pango_context_get_font_map(long jarg1);
  public final static native long pango_context_get_serial(long jarg1);
  public final static native void pango_context_list_families(long jarg1, long jarg2, long jarg3);
  public final static native long pango_context_load_font(long jarg1, long jarg2);
  public final static native long pango_context_load_fontset(long jarg1, long jarg2, long jarg3);
  public final static native long pango_context_get_metrics(long jarg1, long jarg2, long jarg3);
  public final static native void pango_context_set_font_description(long jarg1, long jarg2);
  public final static native long pango_context_get_font_description(long jarg1);
  public final static native long pango_context_get_language(long jarg1);
  public final static native void pango_context_set_language(long jarg1, long jarg2);
  public final static native void pango_context_set_base_dir(long jarg1, int jarg2);
  public final static native int pango_context_get_base_dir(long jarg1);
  public final static native void pango_context_set_base_gravity(long jarg1, int jarg2);
  public final static native int pango_context_get_base_gravity(long jarg1);
  public final static native int pango_context_get_gravity(long jarg1);
  public final static native void pango_context_set_gravity_hint(long jarg1, int jarg2);
  public final static native int pango_context_get_gravity_hint(long jarg1);
  public final static native void pango_context_set_matrix(long jarg1, long jarg2, _PangoMatrix jarg2_);
  public final static native long pango_context_get_matrix(long jarg1);
  public final static native long pango_itemize(long jarg1, String jarg2, int jarg3, int jarg4, long jarg5, long jarg6);
  public final static native long pango_itemize_with_base_dir(long jarg1, int jarg2, String jarg3, int jarg4, int jarg5, long jarg6, long jarg7);
  public final static native void _PangoGlyphGeometry_width_set(long jarg1, _PangoGlyphGeometry jarg1_, int jarg2);
  public final static native int _PangoGlyphGeometry_width_get(long jarg1, _PangoGlyphGeometry jarg1_);
  public final static native void _PangoGlyphGeometry_x_offset_set(long jarg1, _PangoGlyphGeometry jarg1_, int jarg2);
  public final static native int _PangoGlyphGeometry_x_offset_get(long jarg1, _PangoGlyphGeometry jarg1_);
  public final static native void _PangoGlyphGeometry_y_offset_set(long jarg1, _PangoGlyphGeometry jarg1_, int jarg2);
  public final static native int _PangoGlyphGeometry_y_offset_get(long jarg1, _PangoGlyphGeometry jarg1_);
  public final static native long new__PangoGlyphGeometry();
  public final static native void delete__PangoGlyphGeometry(long jarg1);
  public final static native void _PangoGlyphVisAttr_is_cluster_start_set(long jarg1, _PangoGlyphVisAttr jarg1_, long jarg2);
  public final static native long _PangoGlyphVisAttr_is_cluster_start_get(long jarg1, _PangoGlyphVisAttr jarg1_);
  public final static native long new__PangoGlyphVisAttr();
  public final static native void delete__PangoGlyphVisAttr(long jarg1);
  public final static native void _PangoGlyphInfo_glyph_set(long jarg1, _PangoGlyphInfo jarg1_, long jarg2);
  public final static native long _PangoGlyphInfo_glyph_get(long jarg1, _PangoGlyphInfo jarg1_);
  public final static native void _PangoGlyphInfo_geometry_set(long jarg1, _PangoGlyphInfo jarg1_, long jarg2, _PangoGlyphGeometry jarg2_);
  public final static native long _PangoGlyphInfo_geometry_get(long jarg1, _PangoGlyphInfo jarg1_);
  public final static native void _PangoGlyphInfo_attr_set(long jarg1, _PangoGlyphInfo jarg1_, long jarg2, _PangoGlyphVisAttr jarg2_);
  public final static native long _PangoGlyphInfo_attr_get(long jarg1, _PangoGlyphInfo jarg1_);
  public final static native long new__PangoGlyphInfo();
  public final static native void delete__PangoGlyphInfo(long jarg1);
  public final static native void _PangoGlyphString_num_glyphs_set(long jarg1, _PangoGlyphString jarg1_, int jarg2);
  public final static native int _PangoGlyphString_num_glyphs_get(long jarg1, _PangoGlyphString jarg1_);
  public final static native void _PangoGlyphString_glyphs_set(long jarg1, _PangoGlyphString jarg1_, long jarg2, _PangoGlyphInfo jarg2_);
  public final static native long _PangoGlyphString_glyphs_get(long jarg1, _PangoGlyphString jarg1_);
  public final static native void _PangoGlyphString_log_clusters_set(long jarg1, _PangoGlyphString jarg1_, long jarg2);
  public final static native long _PangoGlyphString_log_clusters_get(long jarg1, _PangoGlyphString jarg1_);
  public final static native void _PangoGlyphString_space_set(long jarg1, _PangoGlyphString jarg1_, int jarg2);
  public final static native int _PangoGlyphString_space_get(long jarg1, _PangoGlyphString jarg1_);
  public final static native long new__PangoGlyphString();
  public final static native void delete__PangoGlyphString(long jarg1);
  public final static native long pango_glyph_string_new();
  public final static native void pango_glyph_string_set_size(long jarg1, _PangoGlyphString jarg1_, int jarg2);
  public final static native java.math.BigInteger pango_glyph_string_get_type();
  public final static native long pango_glyph_string_copy(long jarg1, _PangoGlyphString jarg1_);
  public final static native void pango_glyph_string_free(long jarg1, _PangoGlyphString jarg1_);
  public final static native void pango_glyph_string_extents(long jarg1, _PangoGlyphString jarg1_, long jarg2, long jarg3, _PangoRectangle jarg3_, long jarg4, _PangoRectangle jarg4_);
  public final static native int pango_glyph_string_get_width(long jarg1, _PangoGlyphString jarg1_);
  public final static native void pango_glyph_string_extents_range(long jarg1, _PangoGlyphString jarg1_, int jarg2, int jarg3, long jarg4, long jarg5, _PangoRectangle jarg5_, long jarg6, _PangoRectangle jarg6_);
  public final static native void pango_glyph_string_get_logical_widths(long jarg1, _PangoGlyphString jarg1_, String jarg2, int jarg3, int jarg4, long jarg5);
  public final static native void pango_glyph_string_index_to_x(long jarg1, _PangoGlyphString jarg1_, String jarg2, int jarg3, long jarg4, _PangoAnalysis jarg4_, int jarg5, int jarg6, long jarg7);
  public final static native void pango_glyph_string_x_to_index(long jarg1, _PangoGlyphString jarg1_, String jarg2, int jarg3, long jarg4, _PangoAnalysis jarg4_, int jarg5, long jarg6, long jarg7);
  public final static native void pango_shape(String jarg1, int jarg2, long jarg3, _PangoAnalysis jarg3_, long jarg4, _PangoGlyphString jarg4_);
  public final static native void pango_shape_full(String jarg1, int jarg2, String jarg3, int jarg4, long jarg5, _PangoAnalysis jarg5_, long jarg6, _PangoGlyphString jarg6_);
  public final static native long pango_reorder_items(long jarg1, _GList jarg1_);
  public final static native java.math.BigInteger pango_attr_type_get_type();
  public final static native java.math.BigInteger pango_underline_get_type();
  public final static native java.math.BigInteger pango_bidi_type_get_type();
  public final static native java.math.BigInteger pango_direction_get_type();
  public final static native java.math.BigInteger pango_coverage_level_get_type();
  public final static native java.math.BigInteger pango_style_get_type();
  public final static native java.math.BigInteger pango_variant_get_type();
  public final static native java.math.BigInteger pango_weight_get_type();
  public final static native java.math.BigInteger pango_stretch_get_type();
  public final static native java.math.BigInteger pango_font_mask_get_type();
  public final static native java.math.BigInteger pango_gravity_get_type();
  public final static native java.math.BigInteger pango_gravity_hint_get_type();
  public final static native java.math.BigInteger pango_alignment_get_type();
  public final static native java.math.BigInteger pango_wrap_mode_get_type();
  public final static native java.math.BigInteger pango_ellipsize_mode_get_type();
  public final static native java.math.BigInteger pango_render_part_get_type();
  public final static native java.math.BigInteger pango_script_get_type();
  public final static native java.math.BigInteger pango_tab_align_get_type();
  public final static native void _PangoGlyphItem_item_set(long jarg1, _PangoGlyphItem jarg1_, long jarg2, _PangoItem jarg2_);
  public final static native long _PangoGlyphItem_item_get(long jarg1, _PangoGlyphItem jarg1_);
  public final static native void _PangoGlyphItem_glyphs_set(long jarg1, _PangoGlyphItem jarg1_, long jarg2, _PangoGlyphString jarg2_);
  public final static native long _PangoGlyphItem_glyphs_get(long jarg1, _PangoGlyphItem jarg1_);
  public final static native long new__PangoGlyphItem();
  public final static native void delete__PangoGlyphItem(long jarg1);
  public final static native java.math.BigInteger pango_glyph_item_get_type();
  public final static native long pango_glyph_item_split(long jarg1, _PangoGlyphItem jarg1_, String jarg2, int jarg3);
  public final static native long pango_glyph_item_copy(long jarg1, _PangoGlyphItem jarg1_);
  public final static native void pango_glyph_item_free(long jarg1, _PangoGlyphItem jarg1_);
  public final static native long pango_glyph_item_apply_attrs(long jarg1, _PangoGlyphItem jarg1_, String jarg2, long jarg3);
  public final static native void pango_glyph_item_letter_space(long jarg1, _PangoGlyphItem jarg1_, String jarg2, long jarg3, _PangoLogAttr jarg3_, int jarg4);
  public final static native void pango_glyph_item_get_logical_widths(long jarg1, _PangoGlyphItem jarg1_, String jarg2, long jarg3);
  public final static native void _PangoGlyphItemIter_glyph_item_set(long jarg1, _PangoGlyphItemIter jarg1_, long jarg2, _PangoGlyphItem jarg2_);
  public final static native long _PangoGlyphItemIter_glyph_item_get(long jarg1, _PangoGlyphItemIter jarg1_);
  public final static native void _PangoGlyphItemIter_text_set(long jarg1, _PangoGlyphItemIter jarg1_, String jarg2);
  public final static native String _PangoGlyphItemIter_text_get(long jarg1, _PangoGlyphItemIter jarg1_);
  public final static native void _PangoGlyphItemIter_start_glyph_set(long jarg1, _PangoGlyphItemIter jarg1_, int jarg2);
  public final static native int _PangoGlyphItemIter_start_glyph_get(long jarg1, _PangoGlyphItemIter jarg1_);
  public final static native void _PangoGlyphItemIter_start_index_set(long jarg1, _PangoGlyphItemIter jarg1_, int jarg2);
  public final static native int _PangoGlyphItemIter_start_index_get(long jarg1, _PangoGlyphItemIter jarg1_);
  public final static native void _PangoGlyphItemIter_start_char_set(long jarg1, _PangoGlyphItemIter jarg1_, int jarg2);
  public final static native int _PangoGlyphItemIter_start_char_get(long jarg1, _PangoGlyphItemIter jarg1_);
  public final static native void _PangoGlyphItemIter_end_glyph_set(long jarg1, _PangoGlyphItemIter jarg1_, int jarg2);
  public final static native int _PangoGlyphItemIter_end_glyph_get(long jarg1, _PangoGlyphItemIter jarg1_);
  public final static native void _PangoGlyphItemIter_end_index_set(long jarg1, _PangoGlyphItemIter jarg1_, int jarg2);
  public final static native int _PangoGlyphItemIter_end_index_get(long jarg1, _PangoGlyphItemIter jarg1_);
  public final static native void _PangoGlyphItemIter_end_char_set(long jarg1, _PangoGlyphItemIter jarg1_, int jarg2);
  public final static native int _PangoGlyphItemIter_end_char_get(long jarg1, _PangoGlyphItemIter jarg1_);
  public final static native long new__PangoGlyphItemIter();
  public final static native void delete__PangoGlyphItemIter(long jarg1);
  public final static native java.math.BigInteger pango_glyph_item_iter_get_type();
  public final static native long pango_glyph_item_iter_copy(long jarg1, _PangoGlyphItemIter jarg1_);
  public final static native void pango_glyph_item_iter_free(long jarg1, _PangoGlyphItemIter jarg1_);
  public final static native int pango_glyph_item_iter_init_start(long jarg1, _PangoGlyphItemIter jarg1_, long jarg2, _PangoGlyphItem jarg2_, String jarg3);
  public final static native int pango_glyph_item_iter_init_end(long jarg1, _PangoGlyphItemIter jarg1_, long jarg2, _PangoGlyphItem jarg2_, String jarg3);
  public final static native int pango_glyph_item_iter_next_cluster(long jarg1, _PangoGlyphItemIter jarg1_);
  public final static native int pango_glyph_item_iter_prev_cluster(long jarg1, _PangoGlyphItemIter jarg1_);
  public final static native long pango_tab_array_new(int jarg1, int jarg2);
  public final static native long pango_tab_array_new_with_positions(int jarg1, int jarg2, int jarg3, int jarg4);
  public final static native java.math.BigInteger pango_tab_array_get_type();
  public final static native long pango_tab_array_copy(long jarg1);
  public final static native void pango_tab_array_free(long jarg1);
  public final static native int pango_tab_array_get_size(long jarg1);
  public final static native void pango_tab_array_resize(long jarg1, int jarg2);
  public final static native void pango_tab_array_set_tab(long jarg1, int jarg2, int jarg3, int jarg4);
  public final static native void pango_tab_array_get_tab(long jarg1, int jarg2, long jarg3, long jarg4);
  public final static native void pango_tab_array_get_tabs(long jarg1, long jarg2, long jarg3);
  public final static native int pango_tab_array_get_positions_in_pixels(long jarg1);
  public final static native void _PangoLayoutLine_layout_set(long jarg1, _PangoLayoutLine jarg1_, long jarg2);
  public final static native long _PangoLayoutLine_layout_get(long jarg1, _PangoLayoutLine jarg1_);
  public final static native void _PangoLayoutLine_start_index_set(long jarg1, _PangoLayoutLine jarg1_, int jarg2);
  public final static native int _PangoLayoutLine_start_index_get(long jarg1, _PangoLayoutLine jarg1_);
  public final static native void _PangoLayoutLine_length_set(long jarg1, _PangoLayoutLine jarg1_, int jarg2);
  public final static native int _PangoLayoutLine_length_get(long jarg1, _PangoLayoutLine jarg1_);
  public final static native void _PangoLayoutLine_runs_set(long jarg1, _PangoLayoutLine jarg1_, long jarg2, _GSList jarg2_);
  public final static native long _PangoLayoutLine_runs_get(long jarg1, _PangoLayoutLine jarg1_);
  public final static native void _PangoLayoutLine_is_paragraph_start_set(long jarg1, _PangoLayoutLine jarg1_, long jarg2);
  public final static native long _PangoLayoutLine_is_paragraph_start_get(long jarg1, _PangoLayoutLine jarg1_);
  public final static native void _PangoLayoutLine_resolved_dir_set(long jarg1, _PangoLayoutLine jarg1_, long jarg2);
  public final static native long _PangoLayoutLine_resolved_dir_get(long jarg1, _PangoLayoutLine jarg1_);
  public final static native long new__PangoLayoutLine();
  public final static native void delete__PangoLayoutLine(long jarg1);
  public final static native java.math.BigInteger pango_layout_get_type();
  public final static native long pango_layout_new(long jarg1);
  public final static native long pango_layout_copy(long jarg1);
  public final static native long pango_layout_get_context(long jarg1);
  public final static native void pango_layout_set_attributes(long jarg1, long jarg2);
  public final static native long pango_layout_get_attributes(long jarg1);
  public final static native void pango_layout_set_text(long jarg1, String jarg2, int jarg3);
  public final static native String pango_layout_get_text(long jarg1);
  public final static native int pango_layout_get_character_count(long jarg1);
  public final static native void pango_layout_set_markup(long jarg1, String jarg2, int jarg3);
  public final static native void pango_layout_set_markup_with_accel(long jarg1, String jarg2, int jarg3, long jarg4, long jarg5);
  public final static native void pango_layout_set_font_description(long jarg1, long jarg2);
  public final static native long pango_layout_get_font_description(long jarg1);
  public final static native void pango_layout_set_width(long jarg1, int jarg2);
  public final static native int pango_layout_get_width(long jarg1);
  public final static native void pango_layout_set_height(long jarg1, int jarg2);
  public final static native int pango_layout_get_height(long jarg1);
  public final static native void pango_layout_set_wrap(long jarg1, int jarg2);
  public final static native int pango_layout_get_wrap(long jarg1);
  public final static native int pango_layout_is_wrapped(long jarg1);
  public final static native void pango_layout_set_indent(long jarg1, int jarg2);
  public final static native int pango_layout_get_indent(long jarg1);
  public final static native void pango_layout_set_spacing(long jarg1, int jarg2);
  public final static native int pango_layout_get_spacing(long jarg1);
  public final static native void pango_layout_set_justify(long jarg1, int jarg2);
  public final static native int pango_layout_get_justify(long jarg1);
  public final static native void pango_layout_set_auto_dir(long jarg1, int jarg2);
  public final static native int pango_layout_get_auto_dir(long jarg1);
  public final static native void pango_layout_set_alignment(long jarg1, int jarg2);
  public final static native int pango_layout_get_alignment(long jarg1);
  public final static native void pango_layout_set_tabs(long jarg1, long jarg2);
  public final static native long pango_layout_get_tabs(long jarg1);
  public final static native void pango_layout_set_single_paragraph_mode(long jarg1, int jarg2);
  public final static native int pango_layout_get_single_paragraph_mode(long jarg1);
  public final static native void pango_layout_set_ellipsize(long jarg1, int jarg2);
  public final static native int pango_layout_get_ellipsize(long jarg1);
  public final static native int pango_layout_is_ellipsized(long jarg1);
  public final static native int pango_layout_get_unknown_glyphs_count(long jarg1);
  public final static native void pango_layout_context_changed(long jarg1);
  public final static native long pango_layout_get_serial(long jarg1);
  public final static native void pango_layout_get_log_attrs(long jarg1, long jarg2, long jarg3);
  public final static native long pango_layout_get_log_attrs_readonly(long jarg1, long jarg2);
  public final static native void pango_layout_index_to_pos(long jarg1, int jarg2, long jarg3, _PangoRectangle jarg3_);
  public final static native void pango_layout_index_to_line_x(long jarg1, int jarg2, int jarg3, long jarg4, long jarg5);
  public final static native void pango_layout_get_cursor_pos(long jarg1, int jarg2, long jarg3, _PangoRectangle jarg3_, long jarg4, _PangoRectangle jarg4_);
  public final static native void pango_layout_move_cursor_visually(long jarg1, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, long jarg7);
  public final static native int pango_layout_xy_to_index(long jarg1, int jarg2, int jarg3, long jarg4, long jarg5);
  public final static native void pango_layout_get_extents(long jarg1, long jarg2, _PangoRectangle jarg2_, long jarg3, _PangoRectangle jarg3_);
  public final static native void pango_layout_get_pixel_extents(long jarg1, long jarg2, _PangoRectangle jarg2_, long jarg3, _PangoRectangle jarg3_);
  public final static native void pango_layout_get_size(long jarg1, long jarg2, long jarg3);
  public final static native void pango_layout_get_pixel_size(long jarg1, long jarg2, long jarg3);
  public final static native int pango_layout_get_baseline(long jarg1);
  public final static native int pango_layout_get_line_count(long jarg1);
  public final static native long pango_layout_get_line(long jarg1, int jarg2);
  public final static native long pango_layout_get_line_readonly(long jarg1, int jarg2);
  public final static native long pango_layout_get_lines(long jarg1);
  public final static native long pango_layout_get_lines_readonly(long jarg1);
  public final static native java.math.BigInteger pango_layout_line_get_type();
  public final static native long pango_layout_line_ref(long jarg1, _PangoLayoutLine jarg1_);
  public final static native void pango_layout_line_unref(long jarg1, _PangoLayoutLine jarg1_);
  public final static native int pango_layout_line_x_to_index(long jarg1, _PangoLayoutLine jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void pango_layout_line_index_to_x(long jarg1, _PangoLayoutLine jarg1_, int jarg2, int jarg3, long jarg4);
  public final static native void pango_layout_line_get_x_ranges(long jarg1, _PangoLayoutLine jarg1_, int jarg2, int jarg3, long jarg4, long jarg5);
  public final static native void pango_layout_line_get_extents(long jarg1, _PangoLayoutLine jarg1_, long jarg2, _PangoRectangle jarg2_, long jarg3, _PangoRectangle jarg3_);
  public final static native void pango_layout_line_get_pixel_extents(long jarg1, _PangoLayoutLine jarg1_, long jarg2, _PangoRectangle jarg2_, long jarg3, _PangoRectangle jarg3_);
  public final static native java.math.BigInteger pango_layout_iter_get_type();
  public final static native long pango_layout_get_iter(long jarg1);
  public final static native long pango_layout_iter_copy(long jarg1);
  public final static native void pango_layout_iter_free(long jarg1);
  public final static native int pango_layout_iter_get_index(long jarg1);
  public final static native long pango_layout_iter_get_run(long jarg1);
  public final static native long pango_layout_iter_get_run_readonly(long jarg1);
  public final static native long pango_layout_iter_get_line(long jarg1);
  public final static native long pango_layout_iter_get_line_readonly(long jarg1);
  public final static native int pango_layout_iter_at_last_line(long jarg1);
  public final static native long pango_layout_iter_get_layout(long jarg1);
  public final static native int pango_layout_iter_next_char(long jarg1);
  public final static native int pango_layout_iter_next_cluster(long jarg1);
  public final static native int pango_layout_iter_next_run(long jarg1);
  public final static native int pango_layout_iter_next_line(long jarg1);
  public final static native void pango_layout_iter_get_char_extents(long jarg1, long jarg2, _PangoRectangle jarg2_);
  public final static native void pango_layout_iter_get_cluster_extents(long jarg1, long jarg2, _PangoRectangle jarg2_, long jarg3, _PangoRectangle jarg3_);
  public final static native void pango_layout_iter_get_run_extents(long jarg1, long jarg2, _PangoRectangle jarg2_, long jarg3, _PangoRectangle jarg3_);
  public final static native void pango_layout_iter_get_line_extents(long jarg1, long jarg2, _PangoRectangle jarg2_, long jarg3, _PangoRectangle jarg3_);
  public final static native void pango_layout_iter_get_line_yrange(long jarg1, long jarg2, long jarg3);
  public final static native void pango_layout_iter_get_layout_extents(long jarg1, long jarg2, _PangoRectangle jarg2_, long jarg3, _PangoRectangle jarg3_);
  public final static native int pango_layout_iter_get_baseline(long jarg1);
  public final static native void _PangoRenderer_parent_instance_set(long jarg1, _PangoRenderer jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _PangoRenderer_parent_instance_get(long jarg1, _PangoRenderer jarg1_);
  public final static native void _PangoRenderer_underline_set(long jarg1, _PangoRenderer jarg1_, int jarg2);
  public final static native int _PangoRenderer_underline_get(long jarg1, _PangoRenderer jarg1_);
  public final static native void _PangoRenderer_strikethrough_set(long jarg1, _PangoRenderer jarg1_, int jarg2);
  public final static native int _PangoRenderer_strikethrough_get(long jarg1, _PangoRenderer jarg1_);
  public final static native void _PangoRenderer_active_count_set(long jarg1, _PangoRenderer jarg1_, int jarg2);
  public final static native int _PangoRenderer_active_count_get(long jarg1, _PangoRenderer jarg1_);
  public final static native void _PangoRenderer_matrix_set(long jarg1, _PangoRenderer jarg1_, long jarg2, _PangoMatrix jarg2_);
  public final static native long _PangoRenderer_matrix_get(long jarg1, _PangoRenderer jarg1_);
  public final static native void _PangoRenderer_priv_set(long jarg1, _PangoRenderer jarg1_, long jarg2);
  public final static native long _PangoRenderer_priv_get(long jarg1, _PangoRenderer jarg1_);
  public final static native long new__PangoRenderer();
  public final static native void delete__PangoRenderer(long jarg1);
  public final static native void _PangoRendererClass_parent_class_set(long jarg1, _PangoRendererClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _PangoRendererClass_parent_class_get(long jarg1, _PangoRendererClass jarg1_);
  public final static native void _PangoRendererClass_draw_glyphs_set(long jarg1, _PangoRendererClass jarg1_, long jarg2);
  public final static native long _PangoRendererClass_draw_glyphs_get(long jarg1, _PangoRendererClass jarg1_);
  public final static native void _PangoRendererClass_draw_rectangle_set(long jarg1, _PangoRendererClass jarg1_, long jarg2);
  public final static native long _PangoRendererClass_draw_rectangle_get(long jarg1, _PangoRendererClass jarg1_);
  public final static native void _PangoRendererClass_draw_error_underline_set(long jarg1, _PangoRendererClass jarg1_, long jarg2);
  public final static native long _PangoRendererClass_draw_error_underline_get(long jarg1, _PangoRendererClass jarg1_);
  public final static native void _PangoRendererClass_draw_shape_set(long jarg1, _PangoRendererClass jarg1_, long jarg2);
  public final static native long _PangoRendererClass_draw_shape_get(long jarg1, _PangoRendererClass jarg1_);
  public final static native void _PangoRendererClass_draw_trapezoid_set(long jarg1, _PangoRendererClass jarg1_, long jarg2);
  public final static native long _PangoRendererClass_draw_trapezoid_get(long jarg1, _PangoRendererClass jarg1_);
  public final static native void _PangoRendererClass_draw_glyph_set(long jarg1, _PangoRendererClass jarg1_, long jarg2);
  public final static native long _PangoRendererClass_draw_glyph_get(long jarg1, _PangoRendererClass jarg1_);
  public final static native void _PangoRendererClass_part_changed_set(long jarg1, _PangoRendererClass jarg1_, long jarg2);
  public final static native long _PangoRendererClass_part_changed_get(long jarg1, _PangoRendererClass jarg1_);
  public final static native void _PangoRendererClass_begin_set(long jarg1, _PangoRendererClass jarg1_, long jarg2);
  public final static native long _PangoRendererClass_begin_get(long jarg1, _PangoRendererClass jarg1_);
  public final static native void _PangoRendererClass_end_set(long jarg1, _PangoRendererClass jarg1_, long jarg2);
  public final static native long _PangoRendererClass_end_get(long jarg1, _PangoRendererClass jarg1_);
  public final static native void _PangoRendererClass_prepare_run_set(long jarg1, _PangoRendererClass jarg1_, long jarg2);
  public final static native long _PangoRendererClass_prepare_run_get(long jarg1, _PangoRendererClass jarg1_);
  public final static native void _PangoRendererClass_draw_glyph_item_set(long jarg1, _PangoRendererClass jarg1_, long jarg2);
  public final static native long _PangoRendererClass_draw_glyph_item_get(long jarg1, _PangoRendererClass jarg1_);
  public final static native void _PangoRendererClass__pango_reserved2_set(long jarg1, _PangoRendererClass jarg1_, long jarg2);
  public final static native long _PangoRendererClass__pango_reserved2_get(long jarg1, _PangoRendererClass jarg1_);
  public final static native void _PangoRendererClass__pango_reserved3_set(long jarg1, _PangoRendererClass jarg1_, long jarg2);
  public final static native long _PangoRendererClass__pango_reserved3_get(long jarg1, _PangoRendererClass jarg1_);
  public final static native void _PangoRendererClass__pango_reserved4_set(long jarg1, _PangoRendererClass jarg1_, long jarg2);
  public final static native long _PangoRendererClass__pango_reserved4_get(long jarg1, _PangoRendererClass jarg1_);
  public final static native long new__PangoRendererClass();
  public final static native void delete__PangoRendererClass(long jarg1);
  public final static native java.math.BigInteger pango_renderer_get_type();
  public final static native void pango_renderer_draw_layout(long jarg1, _PangoRenderer jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void pango_renderer_draw_layout_line(long jarg1, _PangoRenderer jarg1_, long jarg2, _PangoLayoutLine jarg2_, int jarg3, int jarg4);
  public final static native void pango_renderer_draw_glyphs(long jarg1, _PangoRenderer jarg1_, long jarg2, long jarg3, _PangoGlyphString jarg3_, int jarg4, int jarg5);
  public final static native void pango_renderer_draw_glyph_item(long jarg1, _PangoRenderer jarg1_, String jarg2, long jarg3, _PangoGlyphItem jarg3_, int jarg4, int jarg5);
  public final static native void pango_renderer_draw_rectangle(long jarg1, _PangoRenderer jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void pango_renderer_draw_error_underline(long jarg1, _PangoRenderer jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void pango_renderer_draw_trapezoid(long jarg1, _PangoRenderer jarg1_, int jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8);
  public final static native void pango_renderer_draw_glyph(long jarg1, _PangoRenderer jarg1_, long jarg2, long jarg3, double jarg4, double jarg5);
  public final static native void pango_renderer_activate(long jarg1, _PangoRenderer jarg1_);
  public final static native void pango_renderer_deactivate(long jarg1, _PangoRenderer jarg1_);
  public final static native void pango_renderer_part_changed(long jarg1, _PangoRenderer jarg1_, int jarg2);
  public final static native void pango_renderer_set_color(long jarg1, _PangoRenderer jarg1_, int jarg2, long jarg3, _PangoColor jarg3_);
  public final static native long pango_renderer_get_color(long jarg1, _PangoRenderer jarg1_, int jarg2);
  public final static native void pango_renderer_set_alpha(long jarg1, _PangoRenderer jarg1_, int jarg2, int jarg3);
  public final static native int pango_renderer_get_alpha(long jarg1, _PangoRenderer jarg1_, int jarg2);
  public final static native void pango_renderer_set_matrix(long jarg1, _PangoRenderer jarg1_, long jarg2, _PangoMatrix jarg2_);
  public final static native long pango_renderer_get_matrix(long jarg1, _PangoRenderer jarg1_);
  public final static native long pango_renderer_get_layout(long jarg1, _PangoRenderer jarg1_);
  public final static native long pango_renderer_get_layout_line(long jarg1, _PangoRenderer jarg1_);
  public final static native long pango_split_file_list(String jarg1);
  public final static native String pango_trim_string(String jarg1);
  public final static native int pango_read_line(long jarg1, long jarg2, _GString jarg2_);
  public final static native int pango_skip_space(long jarg1);
  public final static native int pango_scan_word(long jarg1, long jarg2, _GString jarg2_);
  public final static native int pango_scan_string(long jarg1, long jarg2, _GString jarg2_);
  public final static native int pango_scan_int(long jarg1, long jarg2);
  public final static native int pango_parse_enum(java.math.BigInteger jarg1, String jarg2, long jarg3, int jarg4, long jarg5);
  public final static native int pango_parse_style(String jarg1, long jarg2, int jarg3);
  public final static native int pango_parse_variant(String jarg1, long jarg2, int jarg3);
  public final static native int pango_parse_weight(String jarg1, long jarg2, int jarg3);
  public final static native int pango_parse_stretch(String jarg1, long jarg2, int jarg3);
  public final static native void pango_quantize_line_geometry(long jarg1, long jarg2);
  public final static native long pango_log2vis_get_embedding_levels(String jarg1, int jarg2, long jarg3);
  public final static native int pango_is_zero_width(long jarg1);
  public final static native int PANGO_VERSION_get();
  public final static native int pango_version();
  public final static native String pango_version_string();
  public final static native String pango_version_check(int jarg1, int jarg2, int jarg3);
}
