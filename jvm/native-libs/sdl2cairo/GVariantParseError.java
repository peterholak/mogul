/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sdl2cairo;

public final class GVariantParseError {
  public final static GVariantParseError G_VARIANT_PARSE_ERROR_FAILED = new GVariantParseError("G_VARIANT_PARSE_ERROR_FAILED");
  public final static GVariantParseError G_VARIANT_PARSE_ERROR_BASIC_TYPE_EXPECTED = new GVariantParseError("G_VARIANT_PARSE_ERROR_BASIC_TYPE_EXPECTED");
  public final static GVariantParseError G_VARIANT_PARSE_ERROR_CANNOT_INFER_TYPE = new GVariantParseError("G_VARIANT_PARSE_ERROR_CANNOT_INFER_TYPE");
  public final static GVariantParseError G_VARIANT_PARSE_ERROR_DEFINITE_TYPE_EXPECTED = new GVariantParseError("G_VARIANT_PARSE_ERROR_DEFINITE_TYPE_EXPECTED");
  public final static GVariantParseError G_VARIANT_PARSE_ERROR_INPUT_NOT_AT_END = new GVariantParseError("G_VARIANT_PARSE_ERROR_INPUT_NOT_AT_END");
  public final static GVariantParseError G_VARIANT_PARSE_ERROR_INVALID_CHARACTER = new GVariantParseError("G_VARIANT_PARSE_ERROR_INVALID_CHARACTER");
  public final static GVariantParseError G_VARIANT_PARSE_ERROR_INVALID_FORMAT_STRING = new GVariantParseError("G_VARIANT_PARSE_ERROR_INVALID_FORMAT_STRING");
  public final static GVariantParseError G_VARIANT_PARSE_ERROR_INVALID_OBJECT_PATH = new GVariantParseError("G_VARIANT_PARSE_ERROR_INVALID_OBJECT_PATH");
  public final static GVariantParseError G_VARIANT_PARSE_ERROR_INVALID_SIGNATURE = new GVariantParseError("G_VARIANT_PARSE_ERROR_INVALID_SIGNATURE");
  public final static GVariantParseError G_VARIANT_PARSE_ERROR_INVALID_TYPE_STRING = new GVariantParseError("G_VARIANT_PARSE_ERROR_INVALID_TYPE_STRING");
  public final static GVariantParseError G_VARIANT_PARSE_ERROR_NO_COMMON_TYPE = new GVariantParseError("G_VARIANT_PARSE_ERROR_NO_COMMON_TYPE");
  public final static GVariantParseError G_VARIANT_PARSE_ERROR_NUMBER_OUT_OF_RANGE = new GVariantParseError("G_VARIANT_PARSE_ERROR_NUMBER_OUT_OF_RANGE");
  public final static GVariantParseError G_VARIANT_PARSE_ERROR_NUMBER_TOO_BIG = new GVariantParseError("G_VARIANT_PARSE_ERROR_NUMBER_TOO_BIG");
  public final static GVariantParseError G_VARIANT_PARSE_ERROR_TYPE_ERROR = new GVariantParseError("G_VARIANT_PARSE_ERROR_TYPE_ERROR");
  public final static GVariantParseError G_VARIANT_PARSE_ERROR_UNEXPECTED_TOKEN = new GVariantParseError("G_VARIANT_PARSE_ERROR_UNEXPECTED_TOKEN");
  public final static GVariantParseError G_VARIANT_PARSE_ERROR_UNKNOWN_KEYWORD = new GVariantParseError("G_VARIANT_PARSE_ERROR_UNKNOWN_KEYWORD");
  public final static GVariantParseError G_VARIANT_PARSE_ERROR_UNTERMINATED_STRING_CONSTANT = new GVariantParseError("G_VARIANT_PARSE_ERROR_UNTERMINATED_STRING_CONSTANT");
  public final static GVariantParseError G_VARIANT_PARSE_ERROR_VALUE_EXPECTED = new GVariantParseError("G_VARIANT_PARSE_ERROR_VALUE_EXPECTED");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static GVariantParseError swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + GVariantParseError.class + " with value " + swigValue);
  }

  private GVariantParseError(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private GVariantParseError(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private GVariantParseError(String swigName, GVariantParseError swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static GVariantParseError[] swigValues = { G_VARIANT_PARSE_ERROR_FAILED, G_VARIANT_PARSE_ERROR_BASIC_TYPE_EXPECTED, G_VARIANT_PARSE_ERROR_CANNOT_INFER_TYPE, G_VARIANT_PARSE_ERROR_DEFINITE_TYPE_EXPECTED, G_VARIANT_PARSE_ERROR_INPUT_NOT_AT_END, G_VARIANT_PARSE_ERROR_INVALID_CHARACTER, G_VARIANT_PARSE_ERROR_INVALID_FORMAT_STRING, G_VARIANT_PARSE_ERROR_INVALID_OBJECT_PATH, G_VARIANT_PARSE_ERROR_INVALID_SIGNATURE, G_VARIANT_PARSE_ERROR_INVALID_TYPE_STRING, G_VARIANT_PARSE_ERROR_NO_COMMON_TYPE, G_VARIANT_PARSE_ERROR_NUMBER_OUT_OF_RANGE, G_VARIANT_PARSE_ERROR_NUMBER_TOO_BIG, G_VARIANT_PARSE_ERROR_TYPE_ERROR, G_VARIANT_PARSE_ERROR_UNEXPECTED_TOKEN, G_VARIANT_PARSE_ERROR_UNKNOWN_KEYWORD, G_VARIANT_PARSE_ERROR_UNTERMINATED_STRING_CONSTANT, G_VARIANT_PARSE_ERROR_VALUE_EXPECTED };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

